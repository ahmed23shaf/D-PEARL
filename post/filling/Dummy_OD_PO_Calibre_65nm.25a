//*************************************************************************************
// TSMC 65 NM CMOS LOGIC DUMMY OD/PO GENERATION UTILITY (CALIBRE) - Dummy_OD_PO_Calibre_65nm.25a (04/07/2020)
// 1P11M PROCESS
// UTILITY DOCUMENT: T-N65-CL-DR-001-C2 VER 2.5a
// DESIGN RULE DOCUMENT: T-N65-CL-DR-001 VER 2.5
//                       T-N65-CL-US-001 VER 2.5
//*************************************************************************************

///**************************************************************************************
///      CORRECT USAGE:
///**************************************************************************************
///
///  TSMC has developed this deck using Mentor Graphics proprietary SVRF and TVF formats.
///  The deck is to be used only in Calibre tools.
///
///  Calibre v2011.1_24.16 (Mar, 2011) was used to develop and QA the DRC command files.
///  Please use Calibre v2011.1_24.16 (Mar, 2011) or newer TSMC qualified version.
///
///  To properly use this insertion tool, please read the following comments for the
///  options and set the switches correctly in the header for your design.
///
///
///	(1) #DEFINE UseprBoundary : (default is commented and disabled)
///         #DEFINE ChipWindowUsed : (default is commented and disabled)
///	    The utility will use the boundary generated by defined (tape-out) layers
///	    for the insertion by default.
///
///	    If customers want to specify the window of chip by prBoundary(108) layer,
///         please un-comment the line as below:
///
///         #DEFINE UseprBoundary
///
///	    If customers want to specify the window of chip exactly, please un-comment
///	    the line as below:
///
///         #DEFINE ChipWindowUsed
///
///	    Then modifiy the Variables ( xLB, yLB ) for the coordinate of left-bottom corner
///	    and ( xRT, yRT ) for the coordinate of right-top corner of the user-defined chip window
///	    Moreover, the line below is an un-used layer number for constructing the chip window
///          LAYER ChipWindow 500
///	    If layer number 500 is used, please assign another layer number without conflct.
///
///	(2) #DEFINE dmOnCorner : (default is commented and disabled)
///	    The utility will not insert dummy layers in the chip corners and reserve the
///	    space for sealring by default.
///	    If customers want to add dummy inside whole layout extent like sub-cell or macro
///	    level applications, please un-comment the line as below:
///
///          #DEFINE dmOnCorner
///
///          For cell and macro level design, please turn on "dmOnCorner" to insert dummy on corner.
///
///	(3) #DEFINE WithSealring : (default is commented and disabled)
/// 	    By default, this option is disabled for layout without sealring structure.
///	    If the target layout for dummy pattern insertion already has the sealring,
///	    users need to enable this option. The dummy patterns would be only inserted
///	    inside the region that was shrinked "20um" inward. This could solve the overlap
///	    between dummy patterns and CDU regions.
///	    Please un-comment the line as below to enable this option:
///
///          #DEFINE WithSealring
///
///     (4) #DEFINE FILL_TCD_PATTERN : (default is enabled)
///         By default, this option is enabled to insert dummy TCD patterns for poly/OD intra-die CD control
///         and improvement. The dummy TCD patterns include following layer: OD(6;0), Poly(17;0), PP(25,0), NP(26;0),
///         ODBLK(150;20), POBLK(150;21), and TCDDMY(165;1). Customer needs to remark the TCDDMY usage
///         in STI form and e-Tapeout. The utiltiy will create a log file "TCDDMY_XY.txt" which contains
///         the coordination of TCDDMY. If customer wants to use P&R tool to place dummy TCD patterns into chip,
///         please comment the line as below to disable this option:
///
///             //#DEFINE FILL_TCD_PATTERN
///
///     (5) #DEFINE FILL_DOD_DPO : (default is enabled)
///         By default, this option is enabled to insert DOD(6;1)/DPO(17;1) into chip.
///         please comment the line as below to disable this option:
///
///             //#DEFINE FILL_DOD_DPO
///
///     (6) #DEFINE COMBINE_DODPO_DM : (default is enabled and effective when combined)
///      Dummy OD/PO utility and dummy Metal utility can be combined to get a single utility file,
///      which can insert DOD/DPO/DM at the same time. Please be sure to complete the following
///      procedures for correct usage of the single dummy OD/PO/Metal deck.
///
///      1. Please download the most update dummy OD/PO and dummy Metal utility file.
///         "Dummy_OD_PO_Calibre_65nm.24a" (version may be varied!) from TSMC-online.
///         "Dummy_Metal_Calibre_65nm.24a" (version may be varied!) from TSMC-online.
///
///      2. Use the unix command 'cat' to create this single dummy OD/PO/Metal deck.
///         (assuming % is the unix prompt):
///
///         % cat Dummy_OD_PO_Calibre_65nm.24a Dummy_Metal_Calibre_65nm.24a
///           > Dummy_OD_PO_Metal_Calibre_65nm.24a
///
///      3. The environment setups - LAYOUT PATH/LAYOUT PRIMARY/DRC RESULTS DATABASE/DRC SUMMARY REPORT,
///         and option setups - UseprBoundary/ChipWindowUsed/dmOnCorner must be set in dummy OD/PO utility file.
///         These setups in dummy Metal utility file will be invalid.
///


///**************************************************************************************
///      NOTE:
///**************************************************************************************
/// If this utility was used for cell level design, please set the options below.
///
/// 1. Cell boundary: turn on option "ChipWindowUsed" to define cell boundary or use whole
///                   layout extent.
/// 2. Dummy on cell corner: turn on option "dmOnCorner" to insert dummy on cell corner.
/// 3. Dummy OD/PO to cell boundary: variable "dod2Chip" defines min. space between dummy OD/PO and cell
///    boundary, user can revise this variable to change the space between dummy and cell boundary.
///    Please note that dummy OD or POLY must be enclosed by chip edge >= 0.6um. (DOD.EN.2/DPO.EN.1)
///**************************************************************************************

//
// ENVIRONMENT SETUP
//------------------
PRECISION    1000
RESOLUTION      5    // tool resolution

LAYOUT SYSTEM GDSII
LAYOUT PATH "chiptop.gds"
LAYOUT PRIMARY "chiptop"
// DRC RESULTS DATABASE "eaglreva_top_1_chiptop_dodpo.gds" GDSII  // Output topcell name is the same as the original layout,
                                        // please do not stream-in to the library of original design. 
DRC RESULTS DATABASE "chiptop_dodpo.gds" GDSII _dodpo // Output topcell name will be suffixed by _DODPO
DRC SUMMARY REPORT "chiptop_dodpo.sum"
DRC MAXIMUM RESULTS ALL
DRC KEEP EMPTY NO
//LAYOUT ALLOW DUPLICATE CELL YES
//LAYOUT ERROR ON INPUT NO

//******* User defined chip area  **************************************
#DEFINE UseprBoundary   // use layer prBoundary(108) to define the chip window
//#DEFINE ChipWindowUsed  // use following variables to define the chip window
VARIABLE xLB   0.0	// x-coordinate of left-bottom corner for user defined chip window  	
VARIABLE yLB   0.0	// y-coordinate of left-bottom corner for user defined chip window 
VARIABLE xRT   1000.0	// x-coordinate of right-top corner for user defined chip window  
VARIABLE yRT   1000.0	// y-coordinate of right-top corner for user defined chip window 
LAYER ChipWindow 500

//******* Options for chip corner empty area definition ****************

#DEFINE WithSealring	// already with the sealring structure assembled?
//#DEFINE dmOnCorner    // turn on to insert DOD/DPO inside Chip Corner (apply to cell or macro level design)

//******* Select patterns to be filled ******************************************
#DEFINE FILL_TCD_PATTERN  // turn on to insert DummyTCD pattern
#DEFINE FILL_DOD_DPO      // turn on to insert DOD/DPO
//#DEFINE COMBINE_DODPO_DM  // turn on to combine Dummy OD/PO and Dummy Metal Utility.


//***** Layer Assignment ******************

//
//  DRAWN LAYER DEFINITIONS
//---------------------------

LAYER RDGi 2509    //OD wall aside O-Trench definition
LAYER MAP 250 DATATYPE 9 2509
LAYER UNIT_GC    8255
LAYER MAP 167 DATATYPE 4 8255

LAYER DNWi       1   // deep-nwell
LAYER NWi        3   // nwell technology
LAYER OD_18i     16  // define 1.8V thick gate oxides
LAYER OD_25i     18  // define 2.5V thick gate oxides
LAYER OD_33i     15  // define 3.3V thick gate oxides
LAYER OD_DECAP   118 // decoupling capacitor device region
LAYER PPi        25  // P+ S/D imlant
LAYER NPi        26  // N+ S/D imlant
LAYER COi        30  // Define connect for M1 to S/D and Gate
LAYER CBi        76  // Passivation opening for Bond Pad
LAYER CB2i       86  // Passivation-2 opening for Bond Pad
LAYER RPOi       29  // Silicided Block Layer
LAYER NT_Ni      11  // Native NMOS blocked implant
LAYER FWi        95  // Fuse window
LAYER POFUSE     648 // Poly fuse implant layer    
LAYER MAP 156 DATATYPE 0 648
LAYER FUSELINK   649 // Dummy layer to cover poly fuse link region.   
LAYER MAP 156 DATATYPE 1 649
LAYER PMi        5   // Polymide (if drawn)
LAYER SEALRINGi  162 // SEALRING Layer to cover seal ring area
LAYER VTH_Ni     67  // High Vt NMOS Implant
LAYER VTH_Pi     68  // High Vt PMOS Implant
LAYER VTL_Ni     12  // Low Vt NMOS Implant
LAYER VTL_Pi     13  // Low Vt PMOS Implant
LAYER UHVT_Ni    93  // Ultra High Vt NMOS Implant
LAYER UHVT_Pi    94  // Ultra High Vt PMOS Implant
LAYER CBDi       169 // CBD For solder Bump and RDL layer 
LAYER UBMi       170 // UBM For solder Bump and RDL layer 
LAYER RH         117 // Form P+OD/POLY resistor & N+OD/POLY resistor with RPO
LAYER ESD3       147 // Layer for DRC and logic operation to form ESD implant
LAYER ESDIMP     1890 // A drawing layer for ESD implant 
LAYER MAP 189 DATATYPE 0 1890  		
LAYER VARi       143 // For both MOS and junction type varactor
LAYER APi        740  // AlRDL
LAYER MAP 74  DATATYPE 0 740
LAYER MAP 74  DATATYPE 1 740
LAYER RVi        85  // Via hole for AlRDL
LAYER CBMi       88  // MIM Capacitor Bottom Metal
LAYER CTMi       77  // MIM Capacitor Top Metal
LAYER DCOi       90  // Dual Core oxide layer used to cover G core device
LAYER HVD_N      8101 // Define N-HVMOS drain side where sustains high voltage
LAYER MAP 91 DATATYPE 1 8101 
LAYER HVD_P      8102 // Define P-HVMOS drain side where sustains high voltage
LAYER MAP 91 DATATYPE 2 8102 
LAYER HVD_N_nwi   8103 // Define N-HVMOS drain side where sustains high voltage (NW approach)
LAYER MAP 91 DATATYPE 3 8103 

LAYER BJTDMY     110  // BJT dummy layer to cover BJT device
LAYER NWDMY      114  // NWEL resistor dummy layer
LAYER SDI        122  // cover IO ESD area
LAYER PMDMY      106  // dummy layer to cover fuse window and protection ring structure
LAYER ESD1DMY    145
LAYER ESD2DMY    146
LAYER LMARK      109  // Alignment Mark Rule for Laser Repair
LAYER SRM         50  // Cover the SRAM cell array
LAYER CDUDMY     165  // Dummy layer to cover CDU pattern on assembly isolation
LAYER TCDDMY     1651 // Dummy layer to cover TCD pattern.
LAYER MAP 165 DATATYPE 1  1651
LAYER CSRDMY	 166  // Layer to cover chip corner areas
LAYER LOGO       158  // Dummy layer for product labels and LOGO
LAYER INDDMY     1440  // Dummy layer for inductor
LAYER MAP 144 DATATYPE >=0 <=14 1440
LAYER CTMDMY     148   // Dummy layer for MIM Capacitor
LAYER MOMDMY     155   // Dummy layer for MOM Capacitor
LAYER WBDMY      157  // For CUP purpose
LAYER SRAMDMY    400         // SRAM DRC violations waive layer		
LAYER MAP 186 DATATYPE 0 400  		
LAYER SRAMDMY_PERI_LP    401  // SRAM periphrial region for LP
LAYER MAP 186 DATATYPE 4 401 
LAYER SRAMDMY_PERI_G     402  // SRAM periphrial region for G
LAYER MAP 186 DATATYPE 5 402 
LAYER HVNW     1545 
LAYER MAP 154 DATATYPE 5  1545
LAYER HV     8202
LAYER MAP 82 DATATYPE 2  8202
LAYER OD_6i      8206
LAYER MAP 82  DATATYPE 6 8206

LAYER CB_C	8250
LAYER MAP 82 DATATYPE 50	8250
LAYER AP_C	840
LAYER MAP 84 DATATYPE 0		840
LAYER NPR	12157
LAYER MAP 121 DATATYPE 57	12157
LAYER HVDT_DMY	8251
LAYER MAP 82 DATATYPE 51	8251
LAYER SEALRING_HV	1625
LAYER MAP 162 DATATYPE 5	1625
LAYER HVND_TC13		8252
LAYER MAP 82 DATATYPE 52	8252
LAYER HVND_TC2		8253
LAYER MAP 82 DATATYPE 53	8253
LAYER HVND_TC2E		8257
LAYER MAP 82 DATATYPE 57	8257




LAYER MAP 204 DATATYPE 13   20413
LAYER TFRDUMMY_3    20413
LAYER MAP 204 DATATYPE 14   20414
LAYER TFRDUMMY_4    20414
LAYER MAP 204 DATATYPE 15   20415
LAYER TFRDUMMY_5    20415
LAYER MAP 204 DATATYPE 16   20416
LAYER TFRDUMMY_6    20416
LAYER MAP 204 DATATYPE 17   20417
LAYER TFRDUMMY_7    20417
LAYER MAP 204 DATATYPE 18   20418
LAYER TFRDUMMY_8    20418



LAYER M1i     321  // Metal1 layer
LAYER MAP 31 DATATYPE 0  321  // Mapping (31;0)  to 321 for M1
LAYER MAP 31 DATATYPE 7  321  // Mapping (31;7)  to 321 for M1
LAYER MAP 31 DATATYPE 20 321  // Mapping (31;20) to 321 for M1
LAYER MAP 31 DATATYPE 40 321  // Mapping (31;40) to 321 for M1
LAYER MAP 31 DATATYPE 60 321  // Mapping (31;60) to 321 for M1
LAYER MAP 31 DATATYPE 80 321  // Mapping (31;80) to 321 for M1
LAYER DUM1    341  // dummy Metal1 layer
LAYER MAP 31 DATATYPE 1  341  // Mapping (31;1)  to 341 for DUM1
LAYER MAP 31 DATATYPE 21 341  // Mapping (31;21) to 341 for DUM1
LAYER MAP 31 DATATYPE 41 341  // Mapping (31;41) to 341 for DUM1
LAYER MAP 31 DATATYPE 61 341  // Mapping (31;61) to 341 for DUM1
LAYER MAP 31 DATATYPE 81 341  // Mapping (31;80) to 341 for DUM1
LAYER M2i     322  // Metal2 layer
LAYER MAP 32 DATATYPE 0  322  // Mapping (32;0)  to 322 for M2
LAYER MAP 32 DATATYPE 7  322  // Mapping (32;7)  to 322 for M2
LAYER MAP 32 DATATYPE 20 322  // Mapping (32;20) to 322 for M2
LAYER MAP 32 DATATYPE 40 322  // Mapping (32;40) to 322 for M2
LAYER MAP 32 DATATYPE 60 322  // Mapping (32;60) to 322 for M2
LAYER MAP 32 DATATYPE 80 322  // Mapping (32;80) to 322 for M2
LAYER DUM2    342  // dummy Metal2 layer
LAYER MAP 32 DATATYPE 1  342  // Mapping (32;1)  to 342 for DUM2
LAYER MAP 32 DATATYPE 21 342  // Mapping (32;21) to 342 for DUM2
LAYER MAP 32 DATATYPE 41 342  // Mapping (32;41) to 342 for DUM2
LAYER MAP 32 DATATYPE 61 342  // Mapping (32;61) to 342 for DUM2
LAYER MAP 32 DATATYPE 81 342  // Mapping (32;80) to 342 for DUM2
LAYER M3i     323  // Metal3 layer
LAYER MAP 33 DATATYPE 0  323  // Mapping (33;0)  to 323 for M3
LAYER MAP 33 DATATYPE 7  323  // Mapping (33;7)  to 323 for M3
LAYER MAP 33 DATATYPE 20 323  // Mapping (33;20) to 323 for M3
LAYER MAP 33 DATATYPE 40 323  // Mapping (33;40) to 323 for M3
LAYER MAP 33 DATATYPE 60 323  // Mapping (33;60) to 323 for M3
LAYER MAP 33 DATATYPE 80 323  // Mapping (33;80) to 323 for M3
LAYER DUM3    343  // dummy Metal3 layer
LAYER MAP 33 DATATYPE 1  343  // Mapping (33;1)  to 343 for DUM3
LAYER MAP 33 DATATYPE 21 343  // Mapping (33;21) to 343 for DUM3
LAYER MAP 33 DATATYPE 41 343  // Mapping (33;41) to 343 for DUM3
LAYER MAP 33 DATATYPE 61 343  // Mapping (33;61) to 343 for DUM3
LAYER MAP 33 DATATYPE 81 343  // Mapping (33;80) to 343 for DUM3
LAYER M4i     324  // Metal4 layer
LAYER MAP 34 DATATYPE 0  324  // Mapping (34;0)  to 324 for M4
LAYER MAP 34 DATATYPE 7  324  // Mapping (34;7)  to 324 for M4
LAYER MAP 34 DATATYPE 20 324  // Mapping (34;20) to 324 for M4
LAYER MAP 34 DATATYPE 40 324  // Mapping (34;40) to 324 for M4
LAYER MAP 34 DATATYPE 60 324  // Mapping (34;60) to 324 for M4
LAYER MAP 34 DATATYPE 80 324  // Mapping (34;80) to 324 for M4
LAYER DUM4    344  // dummy Metal4 layer
LAYER MAP 34 DATATYPE 1  344  // Mapping (34;1)  to 344 for DUM4
LAYER MAP 34 DATATYPE 21 344  // Mapping (34;21) to 344 for DUM4
LAYER MAP 34 DATATYPE 41 344  // Mapping (34;41) to 344 for DUM4
LAYER MAP 34 DATATYPE 61 344  // Mapping (34;61) to 344 for DUM4
LAYER MAP 34 DATATYPE 81 344  // Mapping (34;80) to 344 for DUM4
LAYER M5i     325  // Metal5 layer
LAYER MAP 35 DATATYPE 0  325  // Mapping (35;0)  to 325 for M5
LAYER MAP 35 DATATYPE 7  325  // Mapping (35;7)  to 325 for M5
LAYER MAP 35 DATATYPE 20 325  // Mapping (35;20) to 325 for M5
LAYER MAP 35 DATATYPE 40 325  // Mapping (35;40) to 325 for M5
LAYER MAP 35 DATATYPE 60 325  // Mapping (35;60) to 325 for M5
LAYER MAP 35 DATATYPE 80 325  // Mapping (35;80) to 325 for M5
LAYER DUM5    345  // dummy Metal5 layer
LAYER MAP 35 DATATYPE 1  345  // Mapping (35;1)  to 345 for DUM5
LAYER MAP 35 DATATYPE 21 345  // Mapping (35;21) to 345 for DUM5
LAYER MAP 35 DATATYPE 41 345  // Mapping (35;41) to 345 for DUM5
LAYER MAP 35 DATATYPE 61 345  // Mapping (35;61) to 345 for DUM5
LAYER MAP 35 DATATYPE 81 345  // Mapping (35;80) to 345 for DUM5
LAYER M6i     326  // Metal6 layer
LAYER MAP 36 DATATYPE 0  326  // Mapping (36;0)  to 326 for M6
LAYER MAP 36 DATATYPE 7  326  // Mapping (36;7)  to 326 for M6
LAYER MAP 36 DATATYPE 20 326  // Mapping (36;20) to 326 for M6
LAYER MAP 36 DATATYPE 40 326  // Mapping (36;40) to 326 for M6
LAYER MAP 36 DATATYPE 60 326  // Mapping (36;60) to 326 for M6
LAYER MAP 36 DATATYPE 80 326  // Mapping (36;80) to 326 for M6
LAYER DUM6    346  // dummy Metal6 layer
LAYER MAP 36 DATATYPE 1  346  // Mapping (36;1)  to 346 for DUM6
LAYER MAP 36 DATATYPE 21 346  // Mapping (36;21) to 346 for DUM6
LAYER MAP 36 DATATYPE 41 346  // Mapping (36;41) to 346 for DUM6
LAYER MAP 36 DATATYPE 61 346  // Mapping (36;61) to 346 for DUM6
LAYER MAP 36 DATATYPE 81 346  // Mapping (36;80) to 346 for DUM6
LAYER M7i     327  // Metal7 layer
LAYER MAP 37 DATATYPE 0  327  // Mapping (37;0)  to 327 for M7
LAYER MAP 37 DATATYPE 7  327  // Mapping (37;7)  to 327 for M7
LAYER MAP 37 DATATYPE 20 327  // Mapping (37;20) to 327 for M7
LAYER MAP 37 DATATYPE 40 327  // Mapping (37;40) to 327 for M7
LAYER MAP 37 DATATYPE 60 327  // Mapping (37;60) to 327 for M7
LAYER MAP 37 DATATYPE 80 327  // Mapping (37;80) to 327 for M7
LAYER DUM7    347  // dummy Metal7 layer
LAYER MAP 37 DATATYPE 1  347  // Mapping (37;1)  to 347 for DUM7
LAYER MAP 37 DATATYPE 21 347  // Mapping (37;21) to 347 for DUM7
LAYER MAP 37 DATATYPE 41 347  // Mapping (37;41) to 347 for DUM7
LAYER MAP 37 DATATYPE 61 347  // Mapping (37;61) to 347 for DUM7
LAYER MAP 37 DATATYPE 81 347  // Mapping (37;80) to 347 for DUM7
LAYER M8i     328  // Metal8 layer
LAYER MAP 38 DATATYPE 0  328  // Mapping (38;0)  to 328 for M8
LAYER MAP 38 DATATYPE 7  328  // Mapping (38;7)  to 328 for M8
LAYER MAP 38 DATATYPE 20 328  // Mapping (38;20) to 328 for M8
LAYER MAP 38 DATATYPE 40 328  // Mapping (38;40) to 328 for M8
LAYER MAP 38 DATATYPE 60 328  // Mapping (38;60) to 328 for M8
LAYER MAP 38 DATATYPE 80 328  // Mapping (38;80) to 328 for M8
LAYER DUM8    348  // dummy Metal8 layer
LAYER MAP 38 DATATYPE 1  348  // Mapping (38;1)  to 348 for DUM8
LAYER MAP 38 DATATYPE 21 348  // Mapping (38;21) to 348 for DUM8
LAYER MAP 38 DATATYPE 41 348  // Mapping (38;41) to 348 for DUM8
LAYER MAP 38 DATATYPE 61 348  // Mapping (38;61) to 348 for DUM8
LAYER MAP 38 DATATYPE 81 348  // Mapping (38;80) to 348 for DUM8
LAYER M9i     329  // Metal9 layer
LAYER MAP 39 DATATYPE 0  329  // Mapping (39;0)  to 329 for M9
LAYER MAP 39 DATATYPE 7  329  // Mapping (39;7)  to 329 for M9
LAYER MAP 39 DATATYPE 20 329  // Mapping (39;20) to 329 for M9
LAYER MAP 39 DATATYPE 40 329  // Mapping (39;40) to 329 for M9
LAYER MAP 39 DATATYPE 60 329  // Mapping (39;60) to 329 for M9
LAYER MAP 39 DATATYPE 80 329  // Mapping (39;80) to 329 for M9
LAYER DUM9    349  // dummy Metal9 layer
LAYER MAP 39 DATATYPE 1  349  // Mapping (39;1)  to 349 for DUM9
LAYER MAP 39 DATATYPE 21 349  // Mapping (39;21) to 349 for DUM9
LAYER MAP 39 DATATYPE 41 349  // Mapping (39;41) to 349 for DUM9
LAYER MAP 39 DATATYPE 61 349  // Mapping (39;61) to 349 for DUM9
LAYER MAP 39 DATATYPE 81 349  // Mapping (39;80) to 349 for DUM9
LAYER M10i     330  // Metal10 layer
LAYER MAP 40 DATATYPE 0  330  // Mapping (40;0)  to 330 for M10
LAYER MAP 40 DATATYPE 7  330  // Mapping (40;7)  to 330 for M10
LAYER MAP 40 DATATYPE 20 330  // Mapping (40;20) to 330 for M10
LAYER MAP 40 DATATYPE 40 330  // Mapping (40;40) to 330 for M10
LAYER MAP 40 DATATYPE 60 330  // Mapping (40;60) to 330 for M10
LAYER MAP 40 DATATYPE 80 330  // Mapping (40;80) to 330 for M10
LAYER DUM10    350  // dummy Metal10 layer
LAYER MAP 40 DATATYPE 1  350  // Mapping (40;1)  to 350 for DUM10
LAYER MAP 40 DATATYPE 21 350  // Mapping (40;21) to 350 for DUM10
LAYER MAP 40 DATATYPE 41 350  // Mapping (40;41) to 350 for DUM10
LAYER MAP 40 DATATYPE 61 350  // Mapping (40;61) to 350 for DUM10
LAYER MAP 40 DATATYPE 81 350  // Mapping (40;80) to 350 for DUM10
LAYER M11i     331  // Metal11 layer
LAYER MAP 41 DATATYPE 0  331  // Mapping (41;0)  to 331 for M11
LAYER MAP 41 DATATYPE 7  331  // Mapping (41;7)  to 331 for M11
LAYER MAP 41 DATATYPE 20 331  // Mapping (41;20) to 331 for M11
LAYER MAP 41 DATATYPE 40 331  // Mapping (41;40) to 331 for M11
LAYER MAP 41 DATATYPE 60 331  // Mapping (41;60) to 331 for M11
LAYER MAP 41 DATATYPE 80 331  // Mapping (41;80) to 331 for M11
LAYER DUM11    351  // dummy Metal11 layer
LAYER MAP 41 DATATYPE 1  351  // Mapping (41;1)  to 351 for DUM11
LAYER MAP 41 DATATYPE 21 351  // Mapping (41;21) to 351 for DUM11
LAYER MAP 41 DATATYPE 41 351  // Mapping (41;41) to 351 for DUM11
LAYER MAP 41 DATATYPE 61 351  // Mapping (41;61) to 351 for DUM11
LAYER MAP 41 DATATYPE 81 351  // Mapping (41;80) to 351 for DUM11

LAYER DM1EXCL  371
LAYER MAP 150 DATATYPE 1 371
LAYER DM2EXCL  372
LAYER MAP 150 DATATYPE 2 372
LAYER DM3EXCL  373
LAYER MAP 150 DATATYPE 3 373
LAYER DM4EXCL  374
LAYER MAP 150 DATATYPE 4 374
LAYER DM5EXCL  375
LAYER MAP 150 DATATYPE 5 375
LAYER DM6EXCL  376
LAYER MAP 150 DATATYPE 6 376
LAYER DM7EXCL  377
LAYER MAP 150 DATATYPE 7 377
LAYER DM8EXCL  378
LAYER MAP 150 DATATYPE 8 378
LAYER DM9EXCL  379
LAYER MAP 150 DATATYPE 9 379
LAYER DM10EXCL  380
LAYER MAP 150 DATATYPE 10 380
LAYER DM11EXCL  381
LAYER MAP 150 DATATYPE 11 381
LAYER APEXCL 384
LAYER MAP 150 DATATYPE 22 384

LAYER  VIA1i     601  // VIA1 layer
LAYER MAP 51 DATATYPE 0  601  // Mapping (51;0)  to 601 
LAYER MAP 51 DATATYPE 20 601  // Mapping (51;20) to 601 
LAYER MAP 51 DATATYPE 40 601  // Mapping (51;40) to 601
LAYER MAP 51 DATATYPE 60 601  // Mapping (51;60) to 601
LAYER MAP 51 DATATYPE 80 601  // Mapping (51;80) to 601
LAYER  VIA2i     602  // VIA2 layer
LAYER MAP 52 DATATYPE 0  602  // Mapping (52;0)  to 602 
LAYER MAP 52 DATATYPE 20 602  // Mapping (52;20) to 602 
LAYER MAP 52 DATATYPE 40 602  // Mapping (52;40) to 602
LAYER MAP 52 DATATYPE 60 602  // Mapping (52;60) to 602
LAYER MAP 52 DATATYPE 80 602  // Mapping (52;80) to 602
LAYER  VIA3i     603  // VIA3 layer
LAYER MAP 53 DATATYPE 0  603  // Mapping (53;0)  to 603 
LAYER MAP 53 DATATYPE 20 603  // Mapping (53;20) to 603 
LAYER MAP 53 DATATYPE 40 603  // Mapping (53;40) to 603
LAYER MAP 53 DATATYPE 60 603  // Mapping (53;60) to 603
LAYER MAP 53 DATATYPE 80 603  // Mapping (53;80) to 603
LAYER  VIA4i     604  // VIA4 layer
LAYER MAP 54 DATATYPE 0  604  // Mapping (54;0)  to 604 
LAYER MAP 54 DATATYPE 20 604  // Mapping (54;20) to 604 
LAYER MAP 54 DATATYPE 40 604  // Mapping (54;40) to 604
LAYER MAP 54 DATATYPE 60 604  // Mapping (54;60) to 604
LAYER MAP 54 DATATYPE 80 604  // Mapping (54;80) to 604
LAYER  VIA5i     605  // VIA5 layer
LAYER MAP 55 DATATYPE 0  605  // Mapping (55;0)  to 605 
LAYER MAP 55 DATATYPE 20 605  // Mapping (55;20) to 605 
LAYER MAP 55 DATATYPE 40 605  // Mapping (55;40) to 605
LAYER MAP 55 DATATYPE 60 605  // Mapping (55;60) to 605
LAYER MAP 55 DATATYPE 80 605  // Mapping (55;80) to 605
LAYER  VIA6i     606  // VIA6 layer
LAYER MAP 56 DATATYPE 0  606  // Mapping (56;0)  to 606 
LAYER MAP 56 DATATYPE 20 606  // Mapping (56;20) to 606 
LAYER MAP 56 DATATYPE 40 606  // Mapping (56;40) to 606
LAYER MAP 56 DATATYPE 60 606  // Mapping (56;60) to 606
LAYER MAP 56 DATATYPE 80 606  // Mapping (56;80) to 606
LAYER  VIA7i     607  // VIA7 layer
LAYER MAP 57 DATATYPE 0  607  // Mapping (57;0)  to 607 
LAYER MAP 57 DATATYPE 20 607  // Mapping (57;20) to 607 
LAYER MAP 57 DATATYPE 40 607  // Mapping (57;40) to 607
LAYER MAP 57 DATATYPE 60 607  // Mapping (57;60) to 607
LAYER MAP 57 DATATYPE 80 607  // Mapping (57;80) to 607
LAYER  VIA8i     608  // VIA8 layer
LAYER MAP 58 DATATYPE 0  608  // Mapping (58;0)  to 608 
LAYER MAP 58 DATATYPE 20 608  // Mapping (58;20) to 608 
LAYER MAP 58 DATATYPE 40 608  // Mapping (58;40) to 608
LAYER MAP 58 DATATYPE 60 608  // Mapping (58;60) to 608
LAYER MAP 58 DATATYPE 80 608  // Mapping (58;80) to 608
LAYER  VIA9i     609  // VIA9 layer
LAYER MAP 59 DATATYPE 0  609  // Mapping (59;0)  to 609 
LAYER MAP 59 DATATYPE 20 609  // Mapping (59;20) to 609 
LAYER MAP 59 DATATYPE 40 609  // Mapping (59;40) to 609
LAYER MAP 59 DATATYPE 60 609  // Mapping (59;60) to 609
LAYER MAP 59 DATATYPE 80 609  // Mapping (59;80) to 609
LAYER  VIA10i     610  // VIA10 layer
LAYER MAP 60 DATATYPE 0  610  // Mapping (60;0)  to 610 
LAYER MAP 60 DATATYPE 20 610  // Mapping (60;20) to 610 
LAYER MAP 60 DATATYPE 40 610  // Mapping (60;40) to 610
LAYER MAP 60 DATATYPE 60 610  // Mapping (60;60) to 610
LAYER MAP 60 DATATYPE 80 610  // Mapping (60;80) to 610

LAYER ODi      6 7 8    
LAYER DOD      353
LAYER MAP 6 DATATYPE 1 353  // Mapping (6;1) to 353 for dummy OD
LAYER NOTUSEOD 616
LAYER MAP 6 DATATYPE >=161 <=165 616  // TSMC internal mask making layer (6;161-165)

LAYER POi      17
LAYER DPO      361
LAYER MAP 17 DATATYPE 1 361  // Mapping (17;1) to 361 for dummy PO
LAYER mVTLi    362	     // Used to generate poly logical operation in N65LP LVT process
LAYER MAP 17 DATATYPE 51 362 // Mapping (17;51, layer PO, purpose rule1) to 361 for mVTLi
LAYER NOTUSEPO 1716
LAYER MAP 17 DATATYPE >=161 <=165 1716   // TSMC internal mask making layer (17;161-165)

LAYER ODBLK  382
LAYER MAP 150 DATATYPE 20 382
LAYER POBLK  383
LAYER MAP 150 DATATYPE 21 383

LAYER prBoundary  108   // layout boundary layer
LAYER EMPTY  997   // empty layer
LAYER EMPTY1 998   // empty layer
LAYER EMPTY2 999   // empty layer

//
//  LAYER OPERATION
//-------------------
OD2i = ((OD_18i OR OD_25i) OR OD_33i) OR OD_6i
ALL_OD = ODi OR DOD
ALL_POLY = POi OR DPO

// metal in silicon
M1x = M1i OR DUM1 
M2x = M2i OR DUM2 
M3x = M3i OR DUM3 
M4x = M4i OR DUM4 
M5x = M5i OR DUM5 
M6x = M6i OR DUM6 
M7x = M7i OR DUM7 
M8x = M8i OR DUM8 
M9x = M9i OR DUM9 
M10x = M10i OR DUM10 
M11x = M11i OR DUM11

M1x_CTMDMY  = M1x AND CTMDMY
M2x_CTMDMY  = M2x AND CTMDMY
M3x_CTMDMY  = M3x AND CTMDMY
M4x_CTMDMY  = M4x AND CTMDMY
M5x_CTMDMY  = M5x AND CTMDMY
M6x_CTMDMY  = M6x AND CTMDMY
M7x_CTMDMY  = M7x AND CTMDMY
M8x_CTMDMY  = M8x AND CTMDMY
M9x_CTMDMY  = M9x AND CTMDMY
M10x_CTMDMY = M10x AND CTMDMY
M11x_CTMDMY = M11x AND CTMDMY



LAYOUT BASE LAYER OD_18i OD_25i OD_33i DCOi NT_Ni VTH_Ni VTH_Pi VTL_Ni VTL_Pi
LAYOUT BASE LAYER DNWi NWi ODi POi PPi NPi COi
LAYOUT TOP LAYER VIA1i M2i
LAYOUT TOP LAYER VIA2i M3i
LAYOUT TOP LAYER VIA3i M4i
LAYOUT TOP LAYER VIA4i M5i
LAYOUT TOP LAYER VIA5i M6i
LAYOUT TOP LAYER VIA6i M7i
LAYOUT TOP LAYER VIA7i M8i
LAYOUT TOP LAYER VIA8i M9i
LAYOUT TOP LAYER VIA9i M10i
LAYOUT TOP LAYER VIA10i M11i
LAYOUT TOP LAYER DUM1 DM1EXCL
LAYOUT TOP LAYER DUM2 DM2EXCL
LAYOUT TOP LAYER DUM3 DM3EXCL
LAYOUT TOP LAYER DUM4 DM4EXCL
LAYOUT TOP LAYER DUM5 DM5EXCL
LAYOUT TOP LAYER DUM6 DM6EXCL
LAYOUT TOP LAYER DUM7 DM7EXCL
LAYOUT TOP LAYER DUM8 DM8EXCL
LAYOUT TOP LAYER DUM9 DM9EXCL
LAYOUT TOP LAYER DUM10 DM10EXCL
LAYOUT TOP LAYER DUM11 DM11EXCL

LAYOUT TOP LAYER CBi CBDi UBMi WBDMY FWi PMi APi PMDMY LMARK SEALRINGi CSRDMY
LAYOUT TOP LAYER NWDMY SDI
LAYOUT TOP LAYER SDI ESD1DMY ESD2DMY ESD3 SRM SRAMDMY LOGO
LAYOUT TOP LAYER DOD DPO ODBLK POBLK
LAYOUT TOP LAYER CBMi CTMi CTMDMY INDDMY VARi


RDGi_EXTENT = EXTENT RDGi
UNIT_GC_EXTENT = EXTENT UNIT_GC
DNWi_EXTENT = EXTENT DNWi
NWi_EXTENT = EXTENT NWi
OD_18i_EXTENT = EXTENT OD_18i
OD_25i_EXTENT = EXTENT OD_25i
OD_33i_EXTENT = EXTENT OD_33i
OD_DECAP_EXTENT = EXTENT OD_DECAP
PPi_EXTENT = EXTENT PPi
NPi_EXTENT = EXTENT NPi
CBi_EXTENT = EXTENT CBi
CB2i_EXTENT = EXTENT CB2i
RPOi_EXTENT = EXTENT RPOi
NT_Ni_EXTENT = EXTENT NT_Ni
FWi_EXTENT = EXTENT FWi
POFUSE_EXTENT = EXTENT POFUSE
FUSELINK_EXTENT = EXTENT FUSELINK
PMi_EXTENT = EXTENT PMi
VTH_Ni_EXTENT = EXTENT VTH_Ni
VTH_Pi_EXTENT = EXTENT VTH_Pi
VTL_Ni_EXTENT = EXTENT VTL_Ni
VTL_Pi_EXTENT = EXTENT VTL_Pi
UHVT_Ni_EXTENT = EXTENT UHVT_Ni
UHVT_Pi_EXTENT = EXTENT UHVT_Pi
CBDi_EXTENT = EXTENT CBDi
UBMi_EXTENT = EXTENT UBMi
RH_EXTENT = EXTENT RH
ESD3_EXTENT = EXTENT ESD3
ESDIMP_EXTENT = EXTENT ESDIMP
VARi_EXTENT = EXTENT VARi
APi_EXTENT = EXTENT APi
RVi_EXTENT = EXTENT RVi
CBMi_EXTENT = EXTENT CBMi
CTMi_EXTENT = EXTENT CTMi
DCOi_EXTENT = EXTENT DCOi
HVD_N_EXTENT = EXTENT HVD_N
HVD_P_EXTENT = EXTENT HVD_P
HVD_N_nwi_EXTENT = EXTENT HVD_N_nwi
BJTDMY_EXTENT = EXTENT BJTDMY
LMARK_EXTENT = EXTENT LMARK
SRM_EXTENT = EXTENT SRM
TCDDMY_EXTENT = EXTENT TCDDMY
SRAMDMY_EXTENT = EXTENT SRAMDMY
SRAMDMY_PERI_LP_EXTENT = EXTENT SRAMDMY_PERI_LP
SRAMDMY_PERI_G_EXTENT = EXTENT SRAMDMY_PERI_G
HVNW_EXTENT = EXTENT HVNW
HV_EXTENT = EXTENT HV
OD_6i_EXTENT = EXTENT OD_6i
CB_C_EXTENT = EXTENT CB_C
AP_C_EXTENT = EXTENT AP_C
NPR_EXTENT = EXTENT NPR
HVDT_DMY_EXTENT = EXTENT HVDT_DMY
HVND_TC13_EXTENT = EXTENT HVND_TC13
HVND_TC2_EXTENT = EXTENT HVND_TC2
HVND_TC2E_EXTENT = EXTENT HVND_TC2E
TFRDUMMY_3_EXTENT = EXTENT TFRDUMMY_3
TFRDUMMY_4_EXTENT = EXTENT TFRDUMMY_4
TFRDUMMY_5_EXTENT = EXTENT TFRDUMMY_5
TFRDUMMY_6_EXTENT = EXTENT TFRDUMMY_6
TFRDUMMY_7_EXTENT = EXTENT TFRDUMMY_7
TFRDUMMY_8_EXTENT = EXTENT TFRDUMMY_8
M1i_EXTENT = EXTENT M1i
DUM1_EXTENT = EXTENT DUM1
M2i_EXTENT = EXTENT M2i
DUM2_EXTENT = EXTENT DUM2
M3i_EXTENT = EXTENT M3i
DUM3_EXTENT = EXTENT DUM3
M4i_EXTENT = EXTENT M4i
DUM4_EXTENT = EXTENT DUM4
M5i_EXTENT = EXTENT M5i
DUM5_EXTENT = EXTENT DUM5
M6i_EXTENT = EXTENT M6i
DUM6_EXTENT = EXTENT DUM6
M7i_EXTENT = EXTENT M7i
DUM7_EXTENT = EXTENT DUM7
M8i_EXTENT = EXTENT M8i
DUM8_EXTENT = EXTENT DUM8
M9i_EXTENT = EXTENT M9i
DUM9_EXTENT = EXTENT DUM9
M10i_EXTENT = EXTENT M10i
DUM10_EXTENT = EXTENT DUM10
M11i_EXTENT = EXTENT M11i
DUM11_EXTENT = EXTENT DUM11
ODi_EXTENT = EXTENT ODi
DOD_EXTENT = EXTENT DOD
POi_EXTENT = EXTENT POi
DPO_EXTENT = EXTENT DPO
mVTLi_EXTENT = EXTENT mVTLi

 MT_LAYERS =  ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((RDGi_EXTENT OR UNIT_GC_EXTENT) OR DNWi_EXTENT) OR NWi_EXTENT) OR OD_18i_EXTENT) OR OD_25i_EXTENT) OR OD_33i_EXTENT) OR OD_DECAP_EXTENT) OR PPi_EXTENT) OR NPi_EXTENT) OR CBi_EXTENT) OR CB2i_EXTENT) OR RPOi_EXTENT) OR NT_Ni_EXTENT) OR FWi_EXTENT) OR POFUSE_EXTENT) OR FUSELINK_EXTENT) OR PMi_EXTENT) OR VTH_Ni_EXTENT) OR VTH_Pi_EXTENT) OR VTL_Ni_EXTENT) OR VTL_Pi_EXTENT) OR UHVT_Ni_EXTENT) OR UHVT_Pi_EXTENT) OR CBDi_EXTENT) OR UBMi_EXTENT) OR RH_EXTENT) OR ESD3_EXTENT) OR ESDIMP_EXTENT) OR VARi_EXTENT) OR APi_EXTENT) OR RVi_EXTENT) OR CBMi_EXTENT) OR CTMi_EXTENT) OR DCOi_EXTENT) OR HVD_N_EXTENT) OR HVD_P_EXTENT) OR HVD_N_nwi_EXTENT) OR BJTDMY_EXTENT) OR LMARK_EXTENT) OR SRM_EXTENT) OR TCDDMY_EXTENT) OR SRAMDMY_EXTENT) OR SRAMDMY_PERI_LP_EXTENT) OR SRAMDMY_PERI_G_EXTENT) OR HVNW_EXTENT) OR HV_EXTENT) OR OD_6i_EXTENT) OR CB_C_EXTENT) OR AP_C_EXTENT) OR NPR_EXTENT) OR HVDT_DMY_EXTENT) OR HVND_TC13_EXTENT) OR HVND_TC2_EXTENT) OR HVND_TC2E_EXTENT) OR TFRDUMMY_3_EXTENT) OR TFRDUMMY_4_EXTENT) OR TFRDUMMY_5_EXTENT) OR TFRDUMMY_6_EXTENT) OR TFRDUMMY_7_EXTENT) OR TFRDUMMY_8_EXTENT) OR M1i_EXTENT) OR DUM1_EXTENT) OR M2i_EXTENT) OR DUM2_EXTENT) OR M3i_EXTENT) OR DUM3_EXTENT) OR M4i_EXTENT) OR DUM4_EXTENT) OR M5i_EXTENT) OR DUM5_EXTENT) OR M6i_EXTENT) OR DUM6_EXTENT) OR M7i_EXTENT) OR DUM7_EXTENT) OR M8i_EXTENT) OR DUM8_EXTENT) OR M9i_EXTENT) OR DUM9_EXTENT) OR M10i_EXTENT) OR DUM10_EXTENT) OR M11i_EXTENT) OR DUM11_EXTENT) OR ODi_EXTENT) OR DOD_EXTENT) OR POi_EXTENT) OR DPO_EXTENT) OR mVTLi_EXTENT

AP_C_TC13 = AP_C INSIDE HVND_TC13
CB_C_TC13 = CB_C INSIDE HVND_TC13
NPR_TC13 = NPR INSIDE HVND_TC13


//***** Chip boundary pre-definition ******


// *********************************************
// begin pre-generation process : find open area
// *********************************************
#IFDEF UseprBoundary
   bulk_pre = COPY prBoundary
#ELSE
#IFDEF ChipWindowUsed
   POLYGON xLB yLB xRT yRT ChipWindow
   bulk_pre = PUSH ChipWindow
#ELSE
   bulk_ext = EXTENT MT_LAYERS
   bulk_pre = PUSH bulk_ext
#ENDIF  
#ENDIF
   
#IFDEF WithSealring
   bulk = SIZE bulk_pre BY -(SRwidth + grid)
#ELSE
   bulk = COPY bulk_pre
#ENDIF  

#IFDEF dmOnCorner
   CHIP = COPY bulk
#ELSE
// for seal-ring and chip corner excluding regions.
   EMPTY_AREA = INT bulk < CSRwidth ABUT==90 REGION INTERSECTING ONLY
   CHIP = bulk NOT EMPTY_AREA
#ENDIF


//***** Variables do not be modified *****
VARIABLE grid 		0.005
VARIABLE SRwidth        20.0		// width of sealring including assembly isolation
VARIABLE CSRwidth       74.0            // corner width beside sealring 

//******* Fill region and spacing definitions **************************
// 1st(cell1) DOD/DPO Size Space 
VARIABLE DodW1 		4.3	// 1st DOD width
VARIABLE DpoW1 		3.8	// 1st DPO width
VARIABLE DodS1 		2.7	// 1st DOD space
VARIABLE DpoS1 		3.2	// 1st DPO space
VARIABLE Dpo2Dod1       0.25	// 1st DPO enclosed by DOD
VARIABLE DodO1 		0.7	// 1st DOD offset (space/3)
// 2nd(cell2) DOD/DPO Size Space 
VARIABLE DodW2 		0.5	// 2st DOD width
VARIABLE DpoW2 		0.42	// 2st DPO width
VARIABLE DodS2 		0.4	// 2st DOD space 
VARIABLE DpoS2 		0.48	// 2st DPO space
VARIABLE Dpo2Dod2       0.04	// 2st DPO enclosed by DOD
VARIABLE DodO2 		0.1	// 2st DOD offset (space/3)
// 3rd(cell3) DPO Size Space 
VARIABLE DpoW3 		0.4	// 3rd DPO width
VARIABLE DpoS3 		0.4	// 3rd DPO space
VARIABLE DpoO3 		0.1	// 3rd DPO offset (space/3)
// Rule values
VARIABLE dc1dc2  	0.45  	// cell1 to cell2 
VARIABLE dc2dc3 	0.45  	// cell2 to DPO
VARIABLE dc1dc3 	0.45  	// cell1 to DPO
VARIABLE dc1od  	5.0  	// cell1 to OD
VARIABLE dc1po  	5.0  	// cell1 to PO
VARIABLE dc2od  	1.6  	// cell2 to OD
VARIABLE dc2po  	1.6  	// cell2 to PO
VARIABLE dc3od  	0.2  	// cell3 to OD
VARIABLE dc3po  	0.5  	// cell3 to PO
VARIABLE dod2ODBLK 	0.6  	// DOD to ODBLK
VARIABLE dpo2POBLK 	0.4  	// DPO to POBLK
VARIABLE dod2NW 	0.6  	// DOD to NW edge
VARIABLE dod2Chip	0.6  	// DOD/DPO to chip-edge or cell-boundary
VARIABLE dod2FW		1.2	// cell to FW
VARIABLE dod2LMARK 	1.2  	// cell to LMARK
VARIABLE dod2NWDMY	0.6	// DOD to NW resistor
VARIABLE dod2INDDMY	1.2	// cell to INDDMY
VARIABLE dod2POFUSE	0.2	// cell to POFUSE
VARIABLE Dod2DOD	0.4	// DOD to DOD space: DOD.S.1
VARIABLE Dpo2DOD	0.1	// DPO to DOD space
VARIABLE Dpo2DPO	0.3	// DPO to DPO space: DPO.S.1
VARIABLE dod2HVNW	2.0 // DOD/DPO to HVNW: DOD.S.10, DPO.S.9
VARIABLE dod2HVDT_DMY     3.4 // DOD/DPO to HVDT_DMY: TC2.S.3.1
VARIABLE dod2SEALRING_HV  1.0 // DOD/DPO to SEALRING_HV: TC2.S.4.1 


VARIABLE dod2HV	    2.0 // DOD/DPO to HV: DOD.S.11, DPO.S.10
//***** Blockage layers pre-defined ******

ODx = SIZE ODi BY (dc3od + grid)
POx = SIZE POi BY (dc3po + grid)



ODBLKx = SIZE ODBLK BY (dod2ODBLK + grid)	// blocking DOD only
POBLKx = SIZE POBLK BY (dpo2POBLK + grid) 	// blocking DPO only

NW1 = SIZE NWi BY -(dod2NW + grid)
NW2 = SIZE NWi BY (dod2NW + grid) 
NWx = NW2 NOT NW1				// blocking DOD only

FWx_dod = SIZE FWi BY (dod2FW + grid) 
LMARKx_dod = SIZE LMARK BY (dod2LMARK + grid) 
NWDMYx = SIZE NWDMY BY (dod2NWDMY + grid) 	// blocking DOD only
INDDMYx_dod = SIZE INDDMY BY (dod2INDDMY + grid) 
POFUSEx = SIZE POFUSE BY (dod2POFUSE + grid)
dod_chip_edgex = CHIP NOT (SIZE CHIP BY -(dod2Chip + grid))
HVNWx = SIZE (HVNW INTERACT HV) BY (dod2HVNW + grid)
HVx   = SIZE HV   BY (dod2HV + grid)

HVDT_DMYx = SIZE HVDT_DMY BY (dod2HVDT_DMY + grid)
SEALRING_HVx = SIZE SEALRING_HV BY (dod2SEALRING_HV + grid)
N55HV_EXC = (((AP_C_TC13 OR CB_C_TC13) OR NPR_TC13) OR HVDT_DMYx) OR SEALRING_HVx


// DOD/DPO blocking
NFILL_dod = (((((((((ODx OR POx) OR FWx_dod) OR LMARKx_dod) OR LOGO) OR INDDMYx_dod) OR POFUSEx) OR dod_chip_edgex) OR HVNWx) OR HVx) OR N55HV_EXC

DOD_BLK = ((ODBLKx OR NWx) OR NWDMYx) OR NFILL_dod
DPO_BLK = POBLKx OR NFILL_dod


Dod2DODx = SIZE DOD BY (Dod2DOD + grid) 
Dod2DPOx = SIZE DPO BY (Dpo2DOD + grid) 
Dpo2DODx = SIZE DOD BY (Dpo2DOD + grid) 
Dpo2DPOx = SIZE DPO BY (Dpo2DPO + grid)
DOD_EXC = (DOD_BLK OR Dod2DODx) OR Dod2DPOx // exclude existed dummy for dod/dpo
DPO_EXC = (DPO_BLK OR Dpo2DPOx) OR Dpo2DODx // exclude existed dummy for dod/dpo


//*************** Main ******************

// Find OD edge and iso-poly gate
ODr = ODi INSIDE CHIP
POr = POi INSIDE CHIP
ImpGateL =  LENGTH (ODr INSIDE EDGE POr) <= 0.08
ImpGate = (POr AND ODr) WITH EDGE ImpGateL
ImpGateW = ImpGate INSIDE EDGE ODr

// The region can not be inserted
GateRegion = SIZE ImpGate BY 0.28  OVERUNDER
ImpSDpre = ((ODr NOT POr) INTERACT ImpGate) NOT GateRegion
ImpSD = SIZE ImpSDpre BY 0.05 UNDEROVER

// Forbidden region for small dpo 
OD_EdgeL = ENC ImpGate [ImpSD] < 1.3 OPPOSITE MEASURE COIN
NFILL_smalldpo = EXPAND EDGE OD_EdgeL OUTSIDE BY 1.5 EXTEND BY 0.8

CHIP_TO_FILL = CHIP NOT NFILL_dod



//-----------------------------------------
//FOR CDU DUMMY PATTERN GENERATION
//-----------------------------------------

#IFDEF FILL_TCD_PATTERN

VARIABLE NP_S_1      0.18          //NP to NP spacing
VARIABLE PP_S_1      0.18          //PP to PP spacing
VARIABLE NW_S_7      0.31          //NW space to OD  
VARIABLE DNW_S_3     1.65          //DNW space to OD 
VARIABLE DNW_EN_3    0.56          //DNW enclosed of OD
VARIABLE OD2_S_3     0.34          //OD2 space to gate
VARIABLE DCO_S_3     0.185         //DCO space to gate
VARIABLE NTN_S_2     0.38          //NT_N space to OD 
VARIABLE RPO_S_5     0.3           //RPO space to PO  


VARIABLE TCD_WIDTH     12
VARIABLE TCD_SPACE     400
VARIABLE TCD_MIN_SPACE 150

VARIABLE dummy_2_cdu 0.6           //DOD,DPO to CDU pattern spacing

//Fill region operation
od_po_blk = ODBLKx OR POBLKx
dod_dpo_blk = Dod2DODx OR Dpo2DPOx
np_pp_blk = (SIZE NPi BY NP_S_1) OR (SIZE PPi BY PP_S_1)
ntn_blk   =  SIZE NT_Ni BY NTN_S_2     
nw_blk    =  SIZE NWi BY NW_S_7
dnw_blk   = (SIZE DNWi BY DNW_S_3) NOT (SIZE DNWi BY -DNW_EN_3)
od2_blk   = SIZE OD2i BY OD2_S_3
dco_blk   = SIZE DCOi BY DCO_S_3 
rpo_blk   = SIZE RPOi BY RPO_S_5
    
frame1_pre_CDU  = ((((((((((((((((((((((((((SIZE CHIP_TO_FILL BY - dc1od) NOT TCDDMY ) NOT od_po_blk) NOT dod_dpo_blk ) NOT np_pp_blk) NOT ntn_blk) NOT nw_blk) NOT dnw_blk) NOT od2_blk) NOT dco_blk ) NOT rpo_blk) NOT mVTLi) NOT VTH_Ni) NOT VTH_Pi ) NOT VTL_Ni) NOT VTL_Pi) NOT UHVT_Ni) NOT UHVT_Pi) NOT VARi) NOT RH) NOT SRM ) NOT SRAMDMY) NOT HVD_N) NOT HVD_P) NOT HVD_N_nwi) NOT OD_DECAP) NOT MOMDMY 

frame1_cdu = (SIZE frame1_pre_CDU BY TCD_WIDTH/2 UNDEROVER) AND frame1_pre_CDU
TCD_PATTERN_pre1 = RECTANGLES TCD_WIDTH TCD_WIDTH TCD_SPACE INSIDE OF LAYER frame1_cdu
TCD_PATTERN_pre2 = EXT TCD_PATTERN_pre1 < TCD_MIN_SPACE ABUT SINGULAR REGION
TCD_PATTERN      = TCD_PATTERN_pre1 NOT INTERACT TCD_PATTERN_pre2


6_0_rectangle_1 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 11.43 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-11.51)
6_0_rectangle_2 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 11.24 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-11.32)
6_0_rectangle_3 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 11.05 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-11.13)
6_0_rectangle_4 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 10.86 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-10.94)
6_0_rectangle_5 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 10.67 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-10.75)
6_0_rectangle_6 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 10.48 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-10.56)
6_0_rectangle_7 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 10.29 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-10.37)
6_0_rectangle_8 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 10.1 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-10.18)
6_0_rectangle_9 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 9.91 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-9.99)
6_0_rectangle_10 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 9.72 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-9.8)
6_0_rectangle_11 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 9.34 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-9.42)
6_0_rectangle_12 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 9.15 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-9.23)
6_0_rectangle_13 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 8.77 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-8.85)
6_0_rectangle_14 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 8.58 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-8.66)
6_0_rectangle_15 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 8.39 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-8.47)
6_0_rectangle_16 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 8.2 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-8.28)
6_0_rectangle_17 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 8.01 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-8.09)
6_0_rectangle_18 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 7.82 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-7.9)
6_0_rectangle_19 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 7.63 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-7.71)
6_0_rectangle_20 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 7.44 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-7.52)
6_0_rectangle_21 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 7.25 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-7.33)
6_0_rectangle_22 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 7.06 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-7.14)
6_0_rectangle_23 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 6.87 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-6.95)
6_0_rectangle_24 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 6.68 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-6.76)
6_0_rectangle_25 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 6.49 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-6.57)
6_0_rectangle_26 = SHRINK TCD_PATTERN LEFT BY 6.255 BOTTOM BY 0.5 RIGHT BY (TCD_WIDTH-11.255) TOP BY (TCD_WIDTH-5.5)
6_0_rectangle_27 = SHRINK TCD_PATTERN LEFT BY 6.25 BOTTOM BY 8.96 RIGHT BY (TCD_WIDTH-11.85) TOP BY (TCD_WIDTH-9.04)
6_0_rectangle_28 = SHRINK TCD_PATTERN LEFT BY 5.555 BOTTOM BY 10.01 RIGHT BY (TCD_WIDTH-5.995) TOP BY (TCD_WIDTH-11.23)
6_0_rectangle_29 = SHRINK TCD_PATTERN LEFT BY 5.555 BOTTOM BY 6.77 RIGHT BY (TCD_WIDTH-5.995) TOP BY (TCD_WIDTH-7.99)
6_0_rectangle_30 = SHRINK TCD_PATTERN LEFT BY 4.775 BOTTOM BY 10.01 RIGHT BY (TCD_WIDTH-5.215) TOP BY (TCD_WIDTH-11.23)
6_0_rectangle_31 = SHRINK TCD_PATTERN LEFT BY 4.775 BOTTOM BY 9.17 RIGHT BY (TCD_WIDTH-5.995) TOP BY (TCD_WIDTH-9.61)
6_0_rectangle_32 = SHRINK TCD_PATTERN LEFT BY 4.775 BOTTOM BY 8.39 RIGHT BY (TCD_WIDTH-5.995) TOP BY (TCD_WIDTH-8.83)
6_0_rectangle_33 = SHRINK TCD_PATTERN LEFT BY 4.775 BOTTOM BY 6.77 RIGHT BY (TCD_WIDTH-5.215) TOP BY (TCD_WIDTH-7.99)
6_0_rectangle_34 = SHRINK TCD_PATTERN LEFT BY 3.935 BOTTOM BY 10.01 RIGHT BY (TCD_WIDTH-4.375) TOP BY (TCD_WIDTH-11.23)
6_0_rectangle_35 = SHRINK TCD_PATTERN LEFT BY 3.935 BOTTOM BY 6.77 RIGHT BY (TCD_WIDTH-4.375) TOP BY (TCD_WIDTH-7.99)
6_0_rectangle_36 = SHRINK TCD_PATTERN LEFT BY 3.155 BOTTOM BY 10.01 RIGHT BY (TCD_WIDTH-3.595) TOP BY (TCD_WIDTH-11.23)
6_0_rectangle_37 = SHRINK TCD_PATTERN LEFT BY 3.155 BOTTOM BY 9.17 RIGHT BY (TCD_WIDTH-4.375) TOP BY (TCD_WIDTH-9.61)
6_0_rectangle_38 = SHRINK TCD_PATTERN LEFT BY 3.155 BOTTOM BY 8.39 RIGHT BY (TCD_WIDTH-4.375) TOP BY (TCD_WIDTH-8.83)
6_0_rectangle_39 = SHRINK TCD_PATTERN LEFT BY 3.155 BOTTOM BY 6.77 RIGHT BY (TCD_WIDTH-3.595) TOP BY (TCD_WIDTH-7.99)
6_0_rectangle_40 = SHRINK TCD_PATTERN LEFT BY 1.8 BOTTOM BY 6.3 RIGHT BY (TCD_WIDTH-2.8) TOP BY (TCD_WIDTH-7.3)
6_0_rectangle_41 = SHRINK TCD_PATTERN LEFT BY 1.535 BOTTOM BY 9.17 RIGHT BY (TCD_WIDTH-2.755) TOP BY (TCD_WIDTH-9.61)
6_0_rectangle_42 = SHRINK TCD_PATTERN LEFT BY 1.535 BOTTOM BY 8.39 RIGHT BY (TCD_WIDTH-2.755) TOP BY (TCD_WIDTH-8.83)
6_0_rectangle_43 = SHRINK TCD_PATTERN LEFT BY 0.745 BOTTOM BY 0.5 RIGHT BY (TCD_WIDTH-5.745) TOP BY (TCD_WIDTH-5.5)
6_0_rectangle_44 = SHRINK TCD_PATTERN LEFT BY 0.3 BOTTOM BY 7.8 RIGHT BY (TCD_WIDTH-1.3) TOP BY (TCD_WIDTH-8.8)
6_0_rectangle_45 = SHRINK TCD_PATTERN LEFT BY 0.3 BOTTOM BY 6.3 RIGHT BY (TCD_WIDTH-1.3) TOP BY (TCD_WIDTH-7.3)
6_0_rectangle_46 = SHRINK TCD_PATTERN LEFT BY 6.55 BOTTOM BY 9.53 RIGHT BY (TCD_WIDTH-11.55) TOP BY (TCD_WIDTH-9.61)
17_0_rectangle_1 = SHRINK TCD_PATTERN LEFT BY 4.635 BOTTOM BY 7.35 RIGHT BY (TCD_WIDTH-6.135) TOP BY (TCD_WIDTH-7.41)
17_0_rectangle_2 = SHRINK TCD_PATTERN LEFT BY 5.355 BOTTOM BY 6.63 RIGHT BY (TCD_WIDTH-5.415) TOP BY (TCD_WIDTH-8.13)
17_0_rectangle_3 = SHRINK TCD_PATTERN LEFT BY 3.735 BOTTOM BY 6.63 RIGHT BY (TCD_WIDTH-3.795) TOP BY (TCD_WIDTH-8.13)
17_0_rectangle_4 = SHRINK TCD_PATTERN LEFT BY 3.015 BOTTOM BY 7.35 RIGHT BY (TCD_WIDTH-4.515) TOP BY (TCD_WIDTH-7.41)
17_0_rectangle_5 = SHRINK TCD_PATTERN LEFT BY 1.395 BOTTOM BY 8.97 RIGHT BY (TCD_WIDTH-2.895) TOP BY (TCD_WIDTH-9.03)
17_0_rectangle_6 = SHRINK TCD_PATTERN LEFT BY 2.115 BOTTOM BY 8.25 RIGHT BY (TCD_WIDTH-2.175) TOP BY (TCD_WIDTH-9.75)
17_0_rectangle_7 = SHRINK TCD_PATTERN LEFT BY 3.735 BOTTOM BY 8.25 RIGHT BY (TCD_WIDTH-3.795) TOP BY (TCD_WIDTH-9.75)
17_0_rectangle_8 = SHRINK TCD_PATTERN LEFT BY 3.015 BOTTOM BY 8.97 RIGHT BY (TCD_WIDTH-4.515) TOP BY (TCD_WIDTH-9.03)
17_0_rectangle_9 = SHRINK TCD_PATTERN LEFT BY 4.635 BOTTOM BY 8.97 RIGHT BY (TCD_WIDTH-6.135) TOP BY (TCD_WIDTH-9.03)
17_0_rectangle_10 = SHRINK TCD_PATTERN LEFT BY 5.355 BOTTOM BY 8.25 RIGHT BY (TCD_WIDTH-5.415) TOP BY (TCD_WIDTH-9.75)
17_0_rectangle_11 = SHRINK TCD_PATTERN LEFT BY 5.355 BOTTOM BY 9.87 RIGHT BY (TCD_WIDTH-5.415) TOP BY (TCD_WIDTH-11.37)
17_0_rectangle_12 = SHRINK TCD_PATTERN LEFT BY 4.635 BOTTOM BY 10.59 RIGHT BY (TCD_WIDTH-6.135) TOP BY (TCD_WIDTH-10.65)
17_0_rectangle_13 = SHRINK TCD_PATTERN LEFT BY 3.735 BOTTOM BY 9.87 RIGHT BY (TCD_WIDTH-3.795) TOP BY (TCD_WIDTH-11.37)
17_0_rectangle_14 = SHRINK TCD_PATTERN LEFT BY 3.015 BOTTOM BY 10.59 RIGHT BY (TCD_WIDTH-4.515) TOP BY (TCD_WIDTH-10.65)
17_0_rectangle_15 = SHRINK TCD_PATTERN LEFT BY 11.61 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-11.7) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_16 = SHRINK TCD_PATTERN LEFT BY 11.315 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-11.405) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_17 = SHRINK TCD_PATTERN LEFT BY 10.845 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-10.905) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_18 = SHRINK TCD_PATTERN LEFT BY 10.58 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-10.64) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_19 = SHRINK TCD_PATTERN LEFT BY 10.315 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-10.375) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_20 = SHRINK TCD_PATTERN LEFT BY 10.05 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-10.11) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_21 = SHRINK TCD_PATTERN LEFT BY 9.785 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-9.845) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_22 = SHRINK TCD_PATTERN LEFT BY 9.52 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-9.58) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_23 = SHRINK TCD_PATTERN LEFT BY 9.255 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-9.315) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_24 = SHRINK TCD_PATTERN LEFT BY 8.99 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-9.05) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_25 = SHRINK TCD_PATTERN LEFT BY 8.725 BOTTOM BY 0.15 RIGHT BY (TCD_WIDTH-8.785) TOP BY (TCD_WIDTH-6)
17_0_rectangle_26 = SHRINK TCD_PATTERN LEFT BY 8.46 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-8.52) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_27 = SHRINK TCD_PATTERN LEFT BY 8.195 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-8.255) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_28 = SHRINK TCD_PATTERN LEFT BY 7.93 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-7.99) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_29 = SHRINK TCD_PATTERN LEFT BY 7.665 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-7.725) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_30 = SHRINK TCD_PATTERN LEFT BY 7.4 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-7.46) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_31 = SHRINK TCD_PATTERN LEFT BY 7.135 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-7.195) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_32 = SHRINK TCD_PATTERN LEFT BY 6.87 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-6.93) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_33 = SHRINK TCD_PATTERN LEFT BY 6.605 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-6.665) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_34 = SHRINK TCD_PATTERN LEFT BY 5.335 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-5.395) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_35 = SHRINK TCD_PATTERN LEFT BY 5.07 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-5.13) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_36 = SHRINK TCD_PATTERN LEFT BY 4.805 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-4.865) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_37 = SHRINK TCD_PATTERN LEFT BY 4.54 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-4.6) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_38 = SHRINK TCD_PATTERN LEFT BY 4.275 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-4.335) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_39 = SHRINK TCD_PATTERN LEFT BY 4.01 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-4.07) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_40 = SHRINK TCD_PATTERN LEFT BY 3.745 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-3.805) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_41 = SHRINK TCD_PATTERN LEFT BY 3.48 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-3.54) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_42 = SHRINK TCD_PATTERN LEFT BY 3.215 BOTTOM BY 0.15 RIGHT BY (TCD_WIDTH-3.275) TOP BY (TCD_WIDTH-6)
17_0_rectangle_43 = SHRINK TCD_PATTERN LEFT BY 2.95 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-3.01) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_44 = SHRINK TCD_PATTERN LEFT BY 2.685 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-2.745) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_45 = SHRINK TCD_PATTERN LEFT BY 2.42 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-2.48) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_46 = SHRINK TCD_PATTERN LEFT BY 2.155 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-2.215) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_47 = SHRINK TCD_PATTERN LEFT BY 1.89 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-1.95) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_48 = SHRINK TCD_PATTERN LEFT BY 1.8 BOTTOM BY 10.7 RIGHT BY (TCD_WIDTH-2.8) TOP BY (TCD_WIDTH-11.7)
17_0_rectangle_49 = SHRINK TCD_PATTERN LEFT BY 1.625 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-1.685) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_50 = SHRINK TCD_PATTERN LEFT BY 1.36 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-1.42) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_51 = SHRINK TCD_PATTERN LEFT BY 1.095 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-1.155) TOP BY (TCD_WIDTH-5.75)
17_0_rectangle_52 = SHRINK TCD_PATTERN LEFT BY 0.3 BOTTOM BY 10.7 RIGHT BY (TCD_WIDTH-1.3) TOP BY (TCD_WIDTH-11.7)
17_0_rectangle_53 = SHRINK TCD_PATTERN LEFT BY 0.3 BOTTOM BY 9.2 RIGHT BY (TCD_WIDTH-1.3) TOP BY (TCD_WIDTH-10.2)
17_0_rectangle_54 = SHRINK TCD_PATTERN LEFT BY 0.3 BOTTOM BY 0.25 RIGHT BY (TCD_WIDTH-0.595) TOP BY (TCD_WIDTH-5.75)
25_0_rectangle_1 = SHRINK TCD_PATTERN LEFT BY 6 BOTTOM BY 0 RIGHT BY (TCD_WIDTH-12) TOP BY (TCD_WIDTH-6)
26_0_rectangle_1 = SHRINK TCD_PATTERN LEFT BY 0 BOTTOM BY 0 RIGHT BY (TCD_WIDTH-6) TOP BY (TCD_WIDTH-6)
26_0_rectangle_2 = SHRINK TCD_PATTERN LEFT BY 0 BOTTOM BY 6 RIGHT BY (TCD_WIDTH-12) TOP BY (TCD_WIDTH-12)
150_20_rectangle_1 = SHRINK TCD_PATTERN LEFT BY 0 BOTTOM BY 0 RIGHT BY (TCD_WIDTH-12) TOP BY (TCD_WIDTH-12)
150_21_rectangle_1 = SHRINK TCD_PATTERN LEFT BY 0 BOTTOM BY 0 RIGHT BY (TCD_WIDTH-12) TOP BY (TCD_WIDTH-12)
165_1_rectangle_1 = SHRINK TCD_PATTERN LEFT BY 0 BOTTOM BY 0 RIGHT BY (TCD_WIDTH-12) TOP BY (TCD_WIDTH-12)
TCD_150_20 = COPY  150_20_rectangle_1 
TCD_150_21 = COPY  150_21_rectangle_1 
TCD_165_1 = COPY  165_1_rectangle_1 
TCD_17_0 = COPY (OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR 17_0_rectangle_1 17_0_rectangle_2) 17_0_rectangle_3) 17_0_rectangle_4) 17_0_rectangle_5) 17_0_rectangle_6) 17_0_rectangle_7) 17_0_rectangle_8) 17_0_rectangle_9) 17_0_rectangle_10) 17_0_rectangle_11) 17_0_rectangle_12) 17_0_rectangle_13) 17_0_rectangle_14) 17_0_rectangle_15) 17_0_rectangle_16) 17_0_rectangle_17) 17_0_rectangle_18) 17_0_rectangle_19) 17_0_rectangle_20) 17_0_rectangle_21) 17_0_rectangle_22) 17_0_rectangle_23) 17_0_rectangle_24) 17_0_rectangle_25) 17_0_rectangle_26) 17_0_rectangle_27) 17_0_rectangle_28) 17_0_rectangle_29) 17_0_rectangle_30) 17_0_rectangle_31) 17_0_rectangle_32) 17_0_rectangle_33) 17_0_rectangle_34) 17_0_rectangle_35) 17_0_rectangle_36) 17_0_rectangle_37) 17_0_rectangle_38) 17_0_rectangle_39) 17_0_rectangle_40) 17_0_rectangle_41) 17_0_rectangle_42) 17_0_rectangle_43) 17_0_rectangle_44) 17_0_rectangle_45) 17_0_rectangle_46) 17_0_rectangle_47) 17_0_rectangle_48) 17_0_rectangle_49) 17_0_rectangle_50) 17_0_rectangle_51) 17_0_rectangle_52) 17_0_rectangle_53) 17_0_rectangle_54) 
TCD_25_0 = COPY  25_0_rectangle_1 
TCD_26_0 = COPY (OR 26_0_rectangle_1 26_0_rectangle_2) 
TCD_6_0 = COPY (OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR(OR 6_0_rectangle_1 6_0_rectangle_2) 6_0_rectangle_3) 6_0_rectangle_4) 6_0_rectangle_5) 6_0_rectangle_6) 6_0_rectangle_7) 6_0_rectangle_8) 6_0_rectangle_9) 6_0_rectangle_10) 6_0_rectangle_11) 6_0_rectangle_12) 6_0_rectangle_13) 6_0_rectangle_14) 6_0_rectangle_15) 6_0_rectangle_16) 6_0_rectangle_17) 6_0_rectangle_18) 6_0_rectangle_19) 6_0_rectangle_20) 6_0_rectangle_21) 6_0_rectangle_22) 6_0_rectangle_23) 6_0_rectangle_24) 6_0_rectangle_25) 6_0_rectangle_26) 6_0_rectangle_27) 6_0_rectangle_28) 6_0_rectangle_29) 6_0_rectangle_30) 6_0_rectangle_31) 6_0_rectangle_32) 6_0_rectangle_33) 6_0_rectangle_34) 6_0_rectangle_35) 6_0_rectangle_36) 6_0_rectangle_37) 6_0_rectangle_38) 6_0_rectangle_39) 6_0_rectangle_40) 6_0_rectangle_41) 6_0_rectangle_42) 6_0_rectangle_43) 6_0_rectangle_44) 6_0_rectangle_45) 6_0_rectangle_46) 


CDU_NOT_REGION = SIZE TCD_165_1 BY dummy_2_cdu

#ELSE
CDU_NOT_REGION = COPY EMPTY
#ENDIF

//-----------------------------------------
//END OF CDU DUMMY PATTERN GENERATION
//-----------------------------------------

#IFDEF FILL_DOD_DPO

// Cell1 -- 1

framedod1   = (SIZE CHIP_TO_FILL BY - dc1od) NOT CDU_NOT_REGION


framedodL  = RECTANGLES DodW1 DodW1 DodS1 OFFSET DodO1 INSIDE OF LAYER framedod1
framedodLPO = SIZE framedodL BY - Dpo2Dod1

dod1pre = framedodL OUTSIDE DOD_EXC     // prevent the rotation of cell placement
dpo1pre = framedodLPO OUTSIDE DPO_EXC

dod1 = dod1pre NOT INTERACT (EXT dod1pre < Dod2DOD ABUT SINGULAR REGION)
dpo1 = dpo1pre NOT INTERACT (EXT dpo1pre < Dpo2DPO ABUT SINGULAR REGION)
    
// Cell2 -- 1
doddpo1 = (SIZE dpo1 BY Dpo2Dod1) OR dod1
dodpre1 = SIZE doddpo1 BY DodS1/2 OVERUNDER
space1 = ((SIZE CHIP_TO_FILL BY - dc2od) NOT (SIZE dodpre1 BY dc1dc2 + grid)) NOT CDU_NOT_REGION
framedodS1 = RECTANGLES DodW2 DodW2 DodS2 OFFSET DodO2 INSIDE OF LAYER space1
framedodS1PO = SIZE framedodS1 BY - Dpo2Dod2

// Cell2 -- 2
space2 = space1 NOT (SIZE framedodS1 BY DodS2 + grid)
framedodS2 = RECTANGLES DodW2 DodW2 DodS2 OFFSET DodO2 INSIDE OF LAYER space2
framedodS2PO = SIZE framedodS2 BY - Dpo2Dod2

// Cell2 -- 3
space3 = space2 NOT (SIZE framedodS2 BY DodS2 + grid)
framedodS3 = RECTANGLES DodW2 DodW2 DodS2 OFFSET DodO2 INSIDE OF LAYER space3
framedodS3PO = SIZE framedodS3 BY - Dpo2Dod2

dod2pre = ((framedodS1 OR framedodS2) OR framedodS3) OUTSIDE DOD_EXC
dpo2pre = ((framedodS1PO OR framedodS2PO) OR framedodS3PO) OUTSIDE DPO_EXC

dod2 = dod2pre NOT INTERACT (EXT dod2pre < Dod2DOD ABUT SINGULAR REGION)
dpo2 = dpo2pre NOT INTERACT (EXT dpo2pre < Dpo2DPO ABUT SINGULAR REGION)

// Small dpo ---1
doddpo2 = (SIZE dpo2 BY Dpo2Dod2) OR dod2
dodpre2 = (SIZE doddpo2 BY DodS2/2 OVERUNDER) OR dodpre1
space4 = (CHIP_TO_FILL NOT ((SIZE dodpre2 BY dc2dc3 + grid) OR NFILL_smalldpo)) NOT CDU_NOT_REGION
framedodS4 = RECTANGLES DpoW3 DpoW3 DpoS3 OFFSET DpoO3 INSIDE OF LAYER space4 

// Small dpo -- 2
space5 = space4 NOT (SIZE framedodS4 BY DpoS3 + grid)
framedodS5	= RECTANGLES DpoW3 DpoW3 DpoS3 OFFSET DpoO3 INSIDE OF LAYER space5 MAINTAIN SPACING

dpo3pre = (framedodS4 OR framedodS5) OUTSIDE DPO_EXC
dpo3 = dpo3pre NOT INTERACT (EXT dpo3pre < Dpo2DPO ABUT SINGULAR REGION)


#ENDIF
    


#IFDEF FILL_TCD_PATTERN 
TCD_OD {merge TCD_6_0} DRC CHECK MAP TCD_OD 6 0
TCD_PO {merge TCD_17_0} DRC CHECK MAP TCD_PO 17 0
TCD_PP {merge TCD_25_0} DRC CHECK MAP TCD_PP 25 0
TCD_NP {merge TCD_26_0} DRC CHECK MAP TCD_NP 26 0
TCD_ODBLK {merge TCD_150_20} DRC CHECK MAP TCD_ODBLK 150 20
TCD_POBLK {merge TCD_150_21} DRC CHECK MAP TCD_POBLK 150 21
TCD_CDUDMY {merge TCD_165_1} DRC CHECK MAP TCD_CDUDMY 165 1
TCD_addr { merge TCD_165_1}  DRC CHECK MAP TCD_addr ASCII "TCDDMY_XY.txt" MAXIMUM RESULTS ALL
#ENDIF 
    

#IFDEF FILL_DOD_DPO
GEN_DOD {
  dod1 OR dod2
}
DRC CHECK MAP GEN_DOD 6 1 AUTOREF // Dummy OD

GEN_DPO {
  (dpo1 OR dpo2) OR dpo3
}
DRC CHECK MAP GEN_DPO 17 1 AUTOREF// Dummy PO
#ENDIF

    

  



