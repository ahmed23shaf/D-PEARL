//************************************************************************************
// TSMC 65 NM CMOS LOGIC DUMMY METAL GENERATION UTILITY (CALIBRE) - Dummy_Metal_Calibre_65nm.25a, 04/07/2020
// 1P11M PROCESS
// UTILITY DOCUMENT: T-N65-CL-DR-001-C3 VER 2.5a
// DESIGN RULE DOCUMENT: T-N65-CL-DR-001 VER 2.5 
//                       T-N65-CL-US-002 VER 2.5
//************************************************************************************

///**************************************************************************************
///      CORRECT USAGE:
///**************************************************************************************
///
///  TSMC has developed this deck using Mentor Graphics proprietary SVRF and TVF formats.
///  The deck is to be used only in Calibre tools.
///
///  Calibre v2011.1_24.16 (Mar, 2011) was used to develop and QA the DRC command files.
///  Please use Calibre v2011.1_24.16 (Mar, 2011) or newer TSMC qualified version.
///
///  To properly use this insertion tool, please read the following comments for the
///  options and set the switches correctly in the header for your design.
///
///
///	(1) #DEFINE UseprBoundary : (default is commented and disabled)
///         #DEFINE ChipWindowUsed : (default is commented and disabled)
///	    The utility will use the boundary generated by defined (tape-out) layers
///	    for the insertion by default.
///
///	    If customers want to specify the window of chip by prBoundary(108) layer,
///         please un-comment the line as below:
///
///         #DEFINE UseprBoundary
///
///	    If customers want to specify the window of chip exactly, please un-comment
///	    the line as below:
///
///         #DEFINE ChipWindowUsed
///
///	    Then modifiy the Variables ( xLB, yLB ) for the coordinate of left-bottom corner
///	    and ( xRT, yRT ) for the coordinate of right-top corner of the user-defined chip window
///	    Moreover, the line below is an un-used layer number for constructing the chip window
///          LAYER ChipWindow 500
///	    If layer number 500 is used, please assign another layer number without conflct.
///
///	(2) #DEFINE dmOnCorner : (default is commented and disabled)
///	    The utility will not insert dummy layers in the chip corners and reserve the
///	    space for sealring by default.
///	    If customers want to add dummy inside whole layout extent like sub-cell or macro
///	    level applications, please un-comment the line as below:
///
///          #DEFINE dmOnCorner
///
///          For cell and macro level design, please turn on "dmOnCorner" to insert dummy on corner.
///
///	(3) #DEFINE WithSealring : (default is commented and disabled)
/// 	    By default, this option is disabled for layout without sealring structure.
///	    If the target layout for dummy pattern insertion already has the sealring,
///	    users need to enable this option. The dummy patterns would be only inserted
///	    inside the region that was shrinked "20um" inward. This could solve the overlap
///	    between dummy patterns and CDU regions.
///	    Please un-comment the line as below to enable this option:
///
///          #DEFINE WithSealring
///
///     (4) #DEFINE MIXED_SCHEME:(default is disabled)
///         By default, DMy/DMz/DMr/DMu generated by this utility
///         use datatype 21/41/81/61 respectively.
///         If you want to output DMy/DMz/DMr/DMu with datatype 1,
///         please un-comment the line as below to enable this option:
///
///          #DEFINE MIXED_SCHEME
///
///     (5) #DEFINE FILL_IN_SLOT:(default is disabled)
///         By default, the narrow metal slot (width <= 4 um) is excluded from insertion of dummy metal.
///         If users want to insert dummy metal in the metal slot,
///         please un-comment the line as below to enable this option:
///
///          #DEFINE FILL_IN_SLOT
///
///
///	(6) #DEFINE FILL_DMx : (default is enabled for M1 to M9, disabled for M10, M11)
///	    By default, the utility will insert dummy patterns according from M1 to M10.
///	    Customers could comment the line as below to prevent from insertion of Mx:
///
///          //#DEFINE FILL_DMx
///
///	(7) #DEFINE FILL_indDMx : 
///	    The utility will insert dummy patterns according from M1 to M10 in INDDMY_HD/INDDMY_MD/INDDMY_COIL region.
///	    Customers could comment the line as below to prevent from insertion of Mx:
///
///          //#DEFINE FILL_indDMx
///
///	(8) #DEFINE FILL_OPCDMx : (default is enabled)
///	    By default, two kinds of dummy metal are generated for inter metal Mx, DMx(datatype 1) and
///         DMx_O(datatype 7). In which, DMx_O receives OPC, follows real metal Mx rules, and is only
///         inserted when metal local density still <= 20% after inserting DMx(datatype 1).
///         (Please note that only inter metal Mx has OPC dummy metal, if 5K_THICK_My, 9K_THICK_Mz,
///          12K_THICK_Mr, or 34K_THICK_Mu is enabled, this variable does not work.)
///	    Customers could comment the line as below to prevent from insertion of DMx_O:
///
///          //#DEFINE FILL_OPCDMx
///
///	(9) #DEFINE 5K_THICK_My : (default is disabled)
///	    This option is for 5K thick metal, My/DMy(new scheme datatype 20/21).
///	    This option could be enabled to employ proper spec for the
///         5K thick metal layer.
///	    Customers could un-comment the line as below to enable this function.
///
///          #DEFINE 5K_THICK_My
///
///	(10) #DEFINE 9K_THICK_Mz : (default is enabled for M8, M9, M10)
///	    This option is for 9K thick metal, Mz/DMz(new scheme datatype 40/41).
///	    This option could be enabled to employ proper spec for the
///         9K thick metal layer.
///	    Customers could un-comment the line as below to enable this function.
///
///         #DEFINE 9K_THICK_Mz
///
///	(11) #DEFINE 12K_THICK_Mr : (default is disabled)
///	    This option is for 12.5K thick metal, Mr/DMr(new scheme datatype 80/81).
///	    This option could be enabled to employ proper spec for the
///         12.5K thick metal layer.
///	    Customers could un-comment the line as below to enable this function.
///
///	    #DEFINE 12K_THICK_Mr
///
///
///	(12) #DEFINE 34K_THICK_Mu : (default is disabled)
///	    This option is for 34K thick metal, Mu/DMu(new scheme datatype 60/61).
///	    This option could be enabled to employ proper spec for the
///         34K thick metal spec.
///	    Customers could un-comment the line as below to enable this function.
///
///         #DEFINE 34K_THICK_Mu
///
///	(13) #DEFINE CBM_OVER_Mx : (default is disabled)
///	    Regions under the CBM will not insert dummy metal. If there is capacitor structure
///	    in the design, please select this option properly. For example, if the capacitor
///	    structure located between M6 and M7, ONLY CBM_OVER_M6 should be enabled.
///	    Customers could enable this option by un-commented the line as follow:
///
///          #DEFINE CBM_OVER_Mx
///
///	(14) #DEFINE FILL_AP : (default is disabled)
///	    Customers could enable this option to insert dummy AP (74;1).
///         Please be sure to combine dummy AP (74;1) into real AP(74;0) in the MT form.
///
///          #DEFINE FILL_AP
///

///**************************************************************************************
///      NOTE:
///**************************************************************************************
/// If this utility was used for cell level design, please set the options below.
///
/// 1. Cell boundary: turn on option "ChipWindowUsed" to define cell boundary or use whole
///                   layout extent.
/// 2. Dummy on cell corner: turn on option "dmOnCorner" to insert dummy on cell corner.
/// 3. Dummy Metal to cell boundary: variable "dm2Chip" defines min. space between dummy metal and cell
///    boundary, user can revise this variable to change the space between dummy and cell boundary.
///    Please note that dummy metal must be enclosed by chip edge >= 2.5um. (DMx.EN.1)
///**************************************************************************************


//
// ENVIRONMENT SETUP
//-----------------------

#IFNDEF COMBINE_DODPO_DM

PRECISION    1000
RESOLUTION      5    // tool resolution

LAYOUT SYSTEM GDSII
LAYOUT PATH "chiptop.gds"
LAYOUT PRIMARY "chiptop"
// DRC RESULTS DATABASE "eaglreva_top_1_chiptop_dm.gds" GDSII  // Output topcell name is the same as the original layout,
                                     // please do not stream-in to the library of original design.
DRC RESULTS DATABASE "chiptop_dm.gds" GDSII _dm  // Output topcell name will be suffixed by _DM
DRC SUMMARY REPORT "chiptop_dm.sum"
DRC MAXIMUM RESULTS ALL
DRC KEEP EMPTY NO
//LAYOUT ALLOW DUPLICATE CELL YES
//LAYOUT ERROR ON INPUT NO

#ENDIF


//
//   OPTION SETUP
//------------------

//******* User defined chip area  **************************************
#IFNDEF COMBINE_DODPO_DM

#DEFINE UseprBoundary   // use layer prBoundary(108) to define the chip window
//#DEFINE ChipWindowUsed  // use following variables to define the chip window
VARIABLE xLB   0.0	// x-coordinate of left-bottom corner for user defined chip window
VARIABLE yLB   0.0	// y-coordinate of left-bottom corner for user defined chip window
VARIABLE xRT   1000.0	// x-coordinate of right-top corner for user defined chip window
VARIABLE yRT   1000.0	// y-coordinate of right-top corner for user defined chip window
LAYER ChipWindow 500	// layer number for constructing chip boundary

//******* Options for chip corner empty area definition ****************

#DEFINE WithSealring	// already with the sealring structure assembled?
//#DEFINE dmOnCorner    // turn on to insert dummy inside Chip Corner (apply to cell or macro level design)

#ENDIF

//******* Select layers to be filled ******************************************


//#DEFINE MIXED_SCHEME     // turn on to use datatype 1 for DMz/DMy/DMr/DMu in the output GDS file. 
//#DEFINE FILL_IN_SLOT     // turn on to fill dummy metal inside metal slot 
//#DEFINE N55HV            // turn on to fill dummy metal for N55 HV


#DEFINE FILL_DM1           // turn on to fill dummy M1
#DEFINE FILL_indDM1        // turn on to fill dummy M1 in INDDMY region
#DEFINE FILL_OPCDM1        // turn on to fill OPC dummy M1 (DM1_O, datatype 7) also
//#DEFINE 5K_THICK_M1      // turn on to design DM1 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M1      // turn on to design DM1 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M1     // turn on to design DM1 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M1     // turn on to design DM1 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M1      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM2           // turn on to fill dummy M2
#DEFINE FILL_indDM2        // turn on to fill dummy M2 in INDDMY region
#DEFINE FILL_OPCDM2        // turn on to fill OPC dummy M2 (DM2_O, datatype 7) also
//#DEFINE 5K_THICK_M2      // turn on to design DM2 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M2      // turn on to design DM2 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M2     // turn on to design DM2 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M2     // turn on to design DM2 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M2      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM3           // turn on to fill dummy M3
#DEFINE FILL_indDM3        // turn on to fill dummy M3 in INDDMY region
#DEFINE FILL_OPCDM3        // turn on to fill OPC dummy M3 (DM3_O, datatype 7) also
//#DEFINE 5K_THICK_M3      // turn on to design DM3 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M3      // turn on to design DM3 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M3     // turn on to design DM3 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M3     // turn on to design DM3 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M3      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM4           // turn on to fill dummy M4
#DEFINE FILL_indDM4        // turn on to fill dummy M4 in INDDMY region
#DEFINE FILL_OPCDM4        // turn on to fill OPC dummy M4 (DM4_O, datatype 7) also
//#DEFINE 5K_THICK_M4      // turn on to design DM4 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M4      // turn on to design DM4 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M4     // turn on to design DM4 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M4     // turn on to design DM4 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M4      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM5           // turn on to fill dummy M5
#DEFINE FILL_indDM5        // turn on to fill dummy M5 in INDDMY region
#DEFINE FILL_OPCDM5        // turn on to fill OPC dummy M5 (DM5_O, datatype 7) also
//#DEFINE 5K_THICK_M5      // turn on to design DM5 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M5      // turn on to design DM5 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M5     // turn on to design DM5 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M5     // turn on to design DM5 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M5      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM6           // turn on to fill dummy M6
#DEFINE FILL_indDM6        // turn on to fill dummy M6 in INDDMY region
#DEFINE FILL_OPCDM6        // turn on to fill OPC dummy M6 (DM6_O, datatype 7) also
//#DEFINE 5K_THICK_M6      // turn on to design DM6 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M6      // turn on to design DM6 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M6     // turn on to design DM6 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M6     // turn on to design DM6 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M6      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM7           // turn on to fill dummy M7
#DEFINE FILL_indDM7        // turn on to fill dummy M7 in INDDMY region
#DEFINE FILL_OPCDM7        // turn on to fill OPC dummy M7 (DM7_O, datatype 7) also
//#DEFINE 5K_THICK_M7      // turn on to design DM7 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M7      // turn on to design DM7 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M7     // turn on to design DM7 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M7     // turn on to design DM7 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M7      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM8           // turn on to fill dummy M8
#DEFINE FILL_indDM8        // turn on to fill dummy M8 in INDDMY region
//#DEFINE FILL_OPCDM8      // turn on to fill OPC dummy M8 (DM8_O, datatype 7) also
//#DEFINE 5K_THICK_M8      // turn on to design DM8 as 5K thick dummy metal, DMy
#DEFINE 9K_THICK_M8        // turn on to design DM8 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M8     // turn on to design DM8 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M8     // turn on to design DM8 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M8      // regions under layer CBM will not insert dummy metal

#DEFINE FILL_DM9           // turn on to fill dummy M9
#DEFINE FILL_indDM9        // turn on to fill dummy M9 in INDDMY region
//#DEFINE FILL_OPCDM9      // turn on to fill OPC dummy M9 (DM9_O, datatype 7) also
//#DEFINE 5K_THICK_M9      // turn on to design DM9 as 5K thick dummy metal, DMy
//#DEFINE 9K_THICK_M9        // turn on to design DM9 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M9     // turn on to design DM9 as 12.5K thick dummy metal, DMr
#DEFINE 34K_THICK_M9     // turn on to design DM9 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M9      // regions under layer CBM will not insert dummy metal

//#DEFINE FILL_DM10        // turn on to fill dummy M10
//#DEFINE FILL_indDM10     // turn on to fill dummy M10 in INDDMY region
//#DEFINE FILL_OPCDM10      // turn on to fill OPC dummy M10 (DM10_O, datatype 7) also
//#DEFINE 5K_THICK_M10      // turn on to design DM10 as 5K thick dummy metal, DMy
#DEFINE 9K_THICK_M10        // turn on to design DM10 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M10     // turn on to design DM10 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M10     // turn on to design DM10 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M10      // regions under layer CBM will not insert dummy metal

//#DEFINE FILL_DM11        // turn on to fill dummy M11
//#DEFINE FILL_indDM11     // turn on to fill dummy M11 in INDDMY region
//#DEFINE FILL_OPCDM11      // turn on to fill OPC dummy M11 (DM11_O, datatype 7) also
//#DEFINE 5K_THICK_M11      // turn on to design DM11 as 5K thick dummy metal, DMy
#DEFINE 9K_THICK_M11        // turn on to design DM11 as 9K thick dummy metal, DMz
//#DEFINE 12K_THICK_M11     // turn on to design DM11 as 12.5K thick dummy metal, DMr
//#DEFINE 34K_THICK_M11     // turn on to design DM11 as 34k thick dummy metal, DMu
//#DEFINE CBM_OVER_M11      // regions under layer CBM will not insert dummy metal

//#DEFINE FILL_AP         // turn on to fill dummy AP 


//
//   Layer Assignment
//----------------------
#IFNDEF COMBINE_DODPO_DM
LAYER INDDMY_COIL 1476  // Dummy layer for INDDMY_COIL
LAYER MAP 144 DATATYPE 36 1476
LAYER INDDMY_MD	 1477  // Dummy layer for INDDMY_MD
LAYER MAP 144 DATATYPE 37 1477
LAYER INDDMY_HD  1478  // Dummy layer for INDDMY_HD
LAYER MAP 144 DATATYPE 38 1478
LAYER RDGi 2509    //OD wall aside O-Trench definition
LAYER MAP 250 DATATYPE 9 2509
LAYER UNIT_GC    8255
LAYER MAP 167 DATATYPE 4 8255
#ELSE
LAYER INDDMY_COIL 1476  // Dummy layer for INDDMY_COIL
LAYER MAP 144 DATATYPE 36 1476
LAYER INDDMY_MD	 1477  // Dummy layer for INDDMY_MD
LAYER MAP 144 DATATYPE 37 1477
LAYER INDDMY_HD  1478  // Dummy layer for INDDMY_HD
LAYER MAP 144 DATATYPE 38 1478
#ENDIF




M3x_TFRDMY_3 = M3x AND TFRDUMMY_3
M4x_TFRDMY_4 = M4x AND TFRDUMMY_4
M5x_TFRDMY_5 = M5x AND TFRDUMMY_5
M6x_TFRDMY_6 = M6x AND TFRDUMMY_6
M7x_TFRDMY_7 = M7x AND TFRDUMMY_7
M8x_TFRDMY_8 = M8x AND TFRDUMMY_8
M5x_TFRDMY_4 = M5x AND TFRDUMMY_4
M6x_TFRDMY_5 = M6x AND TFRDUMMY_5
M7x_TFRDMY_6 = M7x AND TFRDUMMY_6
M8x_TFRDMY_7 = M8x AND TFRDUMMY_7
M9x_TFRDMY_8 = M9x AND TFRDUMMY_8


#IFNDEF COMBINE_DODPO_DM

//
//  DRAWN LAYER DEFINITIONS
//---------------------------


LAYER DNWi       1   // deep-nwell
LAYER NWi        3   // nwell technology
LAYER OD_18i     16  // define 1.8V thick gate oxides
LAYER OD_25i     18  // define 2.5V thick gate oxides
LAYER OD_33i     15  // define 3.3V thick gate oxides
LAYER OD_DECAP   118 // decoupling capacitor device region
LAYER PPi        25  // P+ S/D imlant
LAYER NPi        26  // N+ S/D imlant
LAYER COi        30  // Define connect for M1 to S/D and Gate
LAYER CBi        76  // Passivation opening for Bond Pad
LAYER CB2i       86  // Passivation-2 opening for Bond Pad
LAYER RPOi       29  // Silicided Block Layer
LAYER NT_Ni      11  // Native NMOS blocked implant
LAYER FWi        95  // Fuse window
LAYER POFUSE     648 // Poly fuse implant layer    
LAYER MAP 156 DATATYPE 0 648
LAYER FUSELINK   649 // Dummy layer to cover poly fuse link region.   
LAYER MAP 156 DATATYPE 1 649
LAYER PMi        5   // Polymide (if drawn)
LAYER SEALRINGi  162 // SEALRING Layer to cover seal ring area
LAYER VTH_Ni     67  // High Vt NMOS Implant
LAYER VTH_Pi     68  // High Vt PMOS Implant
LAYER VTL_Ni     12  // Low Vt NMOS Implant
LAYER VTL_Pi     13  // Low Vt PMOS Implant
LAYER UHVT_Ni    93  // Ultra High Vt NMOS Implant
LAYER UHVT_Pi    94  // Ultra High Vt PMOS Implant
LAYER CBDi       169 // CBD For solder Bump and RDL layer 
LAYER UBMi       170 // UBM For solder Bump and RDL layer 
LAYER RH         117 // Form P+OD/POLY resistor & N+OD/POLY resistor with RPO
LAYER ESD3       147 // Layer for DRC and logic operation to form ESD implant
LAYER ESDIMP     1890 // A drawing layer for ESD implant 
LAYER MAP 189 DATATYPE 0 1890  		
LAYER VARi       143 // For both MOS and junction type varactor
LAYER APi        740  // AlRDL
LAYER MAP 74  DATATYPE 0 740
LAYER MAP 74  DATATYPE 1 740
LAYER RVi        85  // Via hole for AlRDL
LAYER CBMi       88  // MIM Capacitor Bottom Metal
LAYER CTMi       77  // MIM Capacitor Top Metal
LAYER DCOi       90  // Dual Core oxide layer used to cover G core device
LAYER HVD_N      8101 // Define N-HVMOS drain side where sustains high voltage
LAYER MAP 91 DATATYPE 1 8101 
LAYER HVD_P      8102 // Define P-HVMOS drain side where sustains high voltage
LAYER MAP 91 DATATYPE 2 8102 
LAYER HVD_N_nwi   8103 // Define N-HVMOS drain side where sustains high voltage (NW approach)
LAYER MAP 91 DATATYPE 3 8103 

LAYER BJTDMY     110  // BJT dummy layer to cover BJT device
LAYER NWDMY      114  // NWEL resistor dummy layer
LAYER SDI        122  // cover IO ESD area
LAYER PMDMY      106  // dummy layer to cover fuse window and protection ring structure
LAYER ESD1DMY    145
LAYER ESD2DMY    146
LAYER LMARK      109  // Alignment Mark Rule for Laser Repair
LAYER SRM         50  // Cover the SRAM cell array
LAYER CDUDMY     165  // Dummy layer to cover CDU pattern on assembly isolation
LAYER TCDDMY     1651 // Dummy layer to cover TCD pattern.
LAYER MAP 165 DATATYPE 1  1651
LAYER CSRDMY	 166  // Layer to cover chip corner areas
LAYER LOGO       158  // Dummy layer for product labels and LOGO
LAYER INDDMY     1440  // Dummy layer for inductor
LAYER MAP 144 DATATYPE >=0 <=14 1440
LAYER CTMDMY     148   // Dummy layer for MIM Capacitor
LAYER MOMDMY     155   // Dummy layer for MOM Capacitor
LAYER WBDMY      157  // For CUP purpose
LAYER SRAMDMY    400         // SRAM DRC violations waive layer		
LAYER MAP 186 DATATYPE 0 400  		
LAYER SRAMDMY_PERI_LP    401  // SRAM periphrial region for LP
LAYER MAP 186 DATATYPE 4 401 
LAYER SRAMDMY_PERI_G     402  // SRAM periphrial region for G
LAYER MAP 186 DATATYPE 5 402 
LAYER HVNW     1545 
LAYER MAP 154 DATATYPE 5  1545
LAYER HV     8202
LAYER MAP 82 DATATYPE 2  8202
LAYER OD_6i      8206
LAYER MAP 82  DATATYPE 6 8206

LAYER CB_C	8250
LAYER MAP 82 DATATYPE 50	8250
LAYER AP_C	840
LAYER MAP 84 DATATYPE 0		840
LAYER NPR	12157
LAYER MAP 121 DATATYPE 57	12157
LAYER HVDT_DMY	8251
LAYER MAP 82 DATATYPE 51	8251
LAYER SEALRING_HV	1625
LAYER MAP 162 DATATYPE 5	1625
LAYER HVND_TC13		8252
LAYER MAP 82 DATATYPE 52	8252
LAYER HVND_TC2		8253
LAYER MAP 82 DATATYPE 53	8253
LAYER HVND_TC2E		8257
LAYER MAP 82 DATATYPE 57	8257




LAYER MAP 204 DATATYPE 13   20413
LAYER TFRDUMMY_3    20413
LAYER MAP 204 DATATYPE 14   20414
LAYER TFRDUMMY_4    20414
LAYER MAP 204 DATATYPE 15   20415
LAYER TFRDUMMY_5    20415
LAYER MAP 204 DATATYPE 16   20416
LAYER TFRDUMMY_6    20416
LAYER MAP 204 DATATYPE 17   20417
LAYER TFRDUMMY_7    20417
LAYER MAP 204 DATATYPE 18   20418
LAYER TFRDUMMY_8    20418



LAYER M1i     321  // Metal1 layer
LAYER MAP 31 DATATYPE 0  321  // Mapping (31;0)  to 321 for M1
LAYER MAP 31 DATATYPE 7  321  // Mapping (31;7)  to 321 for M1
LAYER MAP 31 DATATYPE 20 321  // Mapping (31;20) to 321 for M1
LAYER MAP 31 DATATYPE 40 321  // Mapping (31;40) to 321 for M1
LAYER MAP 31 DATATYPE 60 321  // Mapping (31;60) to 321 for M1
LAYER MAP 31 DATATYPE 80 321  // Mapping (31;80) to 321 for M1
LAYER DUM1    341  // dummy Metal1 layer
LAYER MAP 31 DATATYPE 1  341  // Mapping (31;1)  to 341 for DUM1
LAYER MAP 31 DATATYPE 21 341  // Mapping (31;21) to 341 for DUM1
LAYER MAP 31 DATATYPE 41 341  // Mapping (31;41) to 341 for DUM1
LAYER MAP 31 DATATYPE 61 341  // Mapping (31;61) to 341 for DUM1
LAYER MAP 31 DATATYPE 81 341  // Mapping (31;80) to 341 for DUM1
LAYER M2i     322  // Metal2 layer
LAYER MAP 32 DATATYPE 0  322  // Mapping (32;0)  to 322 for M2
LAYER MAP 32 DATATYPE 7  322  // Mapping (32;7)  to 322 for M2
LAYER MAP 32 DATATYPE 20 322  // Mapping (32;20) to 322 for M2
LAYER MAP 32 DATATYPE 40 322  // Mapping (32;40) to 322 for M2
LAYER MAP 32 DATATYPE 60 322  // Mapping (32;60) to 322 for M2
LAYER MAP 32 DATATYPE 80 322  // Mapping (32;80) to 322 for M2
LAYER DUM2    342  // dummy Metal2 layer
LAYER MAP 32 DATATYPE 1  342  // Mapping (32;1)  to 342 for DUM2
LAYER MAP 32 DATATYPE 21 342  // Mapping (32;21) to 342 for DUM2
LAYER MAP 32 DATATYPE 41 342  // Mapping (32;41) to 342 for DUM2
LAYER MAP 32 DATATYPE 61 342  // Mapping (32;61) to 342 for DUM2
LAYER MAP 32 DATATYPE 81 342  // Mapping (32;80) to 342 for DUM2
LAYER M3i     323  // Metal3 layer
LAYER MAP 33 DATATYPE 0  323  // Mapping (33;0)  to 323 for M3
LAYER MAP 33 DATATYPE 7  323  // Mapping (33;7)  to 323 for M3
LAYER MAP 33 DATATYPE 20 323  // Mapping (33;20) to 323 for M3
LAYER MAP 33 DATATYPE 40 323  // Mapping (33;40) to 323 for M3
LAYER MAP 33 DATATYPE 60 323  // Mapping (33;60) to 323 for M3
LAYER MAP 33 DATATYPE 80 323  // Mapping (33;80) to 323 for M3
LAYER DUM3    343  // dummy Metal3 layer
LAYER MAP 33 DATATYPE 1  343  // Mapping (33;1)  to 343 for DUM3
LAYER MAP 33 DATATYPE 21 343  // Mapping (33;21) to 343 for DUM3
LAYER MAP 33 DATATYPE 41 343  // Mapping (33;41) to 343 for DUM3
LAYER MAP 33 DATATYPE 61 343  // Mapping (33;61) to 343 for DUM3
LAYER MAP 33 DATATYPE 81 343  // Mapping (33;80) to 343 for DUM3
LAYER M4i     324  // Metal4 layer
LAYER MAP 34 DATATYPE 0  324  // Mapping (34;0)  to 324 for M4
LAYER MAP 34 DATATYPE 7  324  // Mapping (34;7)  to 324 for M4
LAYER MAP 34 DATATYPE 20 324  // Mapping (34;20) to 324 for M4
LAYER MAP 34 DATATYPE 40 324  // Mapping (34;40) to 324 for M4
LAYER MAP 34 DATATYPE 60 324  // Mapping (34;60) to 324 for M4
LAYER MAP 34 DATATYPE 80 324  // Mapping (34;80) to 324 for M4
LAYER DUM4    344  // dummy Metal4 layer
LAYER MAP 34 DATATYPE 1  344  // Mapping (34;1)  to 344 for DUM4
LAYER MAP 34 DATATYPE 21 344  // Mapping (34;21) to 344 for DUM4
LAYER MAP 34 DATATYPE 41 344  // Mapping (34;41) to 344 for DUM4
LAYER MAP 34 DATATYPE 61 344  // Mapping (34;61) to 344 for DUM4
LAYER MAP 34 DATATYPE 81 344  // Mapping (34;80) to 344 for DUM4
LAYER M5i     325  // Metal5 layer
LAYER MAP 35 DATATYPE 0  325  // Mapping (35;0)  to 325 for M5
LAYER MAP 35 DATATYPE 7  325  // Mapping (35;7)  to 325 for M5
LAYER MAP 35 DATATYPE 20 325  // Mapping (35;20) to 325 for M5
LAYER MAP 35 DATATYPE 40 325  // Mapping (35;40) to 325 for M5
LAYER MAP 35 DATATYPE 60 325  // Mapping (35;60) to 325 for M5
LAYER MAP 35 DATATYPE 80 325  // Mapping (35;80) to 325 for M5
LAYER DUM5    345  // dummy Metal5 layer
LAYER MAP 35 DATATYPE 1  345  // Mapping (35;1)  to 345 for DUM5
LAYER MAP 35 DATATYPE 21 345  // Mapping (35;21) to 345 for DUM5
LAYER MAP 35 DATATYPE 41 345  // Mapping (35;41) to 345 for DUM5
LAYER MAP 35 DATATYPE 61 345  // Mapping (35;61) to 345 for DUM5
LAYER MAP 35 DATATYPE 81 345  // Mapping (35;80) to 345 for DUM5
LAYER M6i     326  // Metal6 layer
LAYER MAP 36 DATATYPE 0  326  // Mapping (36;0)  to 326 for M6
LAYER MAP 36 DATATYPE 7  326  // Mapping (36;7)  to 326 for M6
LAYER MAP 36 DATATYPE 20 326  // Mapping (36;20) to 326 for M6
LAYER MAP 36 DATATYPE 40 326  // Mapping (36;40) to 326 for M6
LAYER MAP 36 DATATYPE 60 326  // Mapping (36;60) to 326 for M6
LAYER MAP 36 DATATYPE 80 326  // Mapping (36;80) to 326 for M6
LAYER DUM6    346  // dummy Metal6 layer
LAYER MAP 36 DATATYPE 1  346  // Mapping (36;1)  to 346 for DUM6
LAYER MAP 36 DATATYPE 21 346  // Mapping (36;21) to 346 for DUM6
LAYER MAP 36 DATATYPE 41 346  // Mapping (36;41) to 346 for DUM6
LAYER MAP 36 DATATYPE 61 346  // Mapping (36;61) to 346 for DUM6
LAYER MAP 36 DATATYPE 81 346  // Mapping (36;80) to 346 for DUM6
LAYER M7i     327  // Metal7 layer
LAYER MAP 37 DATATYPE 0  327  // Mapping (37;0)  to 327 for M7
LAYER MAP 37 DATATYPE 7  327  // Mapping (37;7)  to 327 for M7
LAYER MAP 37 DATATYPE 20 327  // Mapping (37;20) to 327 for M7
LAYER MAP 37 DATATYPE 40 327  // Mapping (37;40) to 327 for M7
LAYER MAP 37 DATATYPE 60 327  // Mapping (37;60) to 327 for M7
LAYER MAP 37 DATATYPE 80 327  // Mapping (37;80) to 327 for M7
LAYER DUM7    347  // dummy Metal7 layer
LAYER MAP 37 DATATYPE 1  347  // Mapping (37;1)  to 347 for DUM7
LAYER MAP 37 DATATYPE 21 347  // Mapping (37;21) to 347 for DUM7
LAYER MAP 37 DATATYPE 41 347  // Mapping (37;41) to 347 for DUM7
LAYER MAP 37 DATATYPE 61 347  // Mapping (37;61) to 347 for DUM7
LAYER MAP 37 DATATYPE 81 347  // Mapping (37;80) to 347 for DUM7
LAYER M8i     328  // Metal8 layer
LAYER MAP 38 DATATYPE 0  328  // Mapping (38;0)  to 328 for M8
LAYER MAP 38 DATATYPE 7  328  // Mapping (38;7)  to 328 for M8
LAYER MAP 38 DATATYPE 20 328  // Mapping (38;20) to 328 for M8
LAYER MAP 38 DATATYPE 40 328  // Mapping (38;40) to 328 for M8
LAYER MAP 38 DATATYPE 60 328  // Mapping (38;60) to 328 for M8
LAYER MAP 38 DATATYPE 80 328  // Mapping (38;80) to 328 for M8
LAYER DUM8    348  // dummy Metal8 layer
LAYER MAP 38 DATATYPE 1  348  // Mapping (38;1)  to 348 for DUM8
LAYER MAP 38 DATATYPE 21 348  // Mapping (38;21) to 348 for DUM8
LAYER MAP 38 DATATYPE 41 348  // Mapping (38;41) to 348 for DUM8
LAYER MAP 38 DATATYPE 61 348  // Mapping (38;61) to 348 for DUM8
LAYER MAP 38 DATATYPE 81 348  // Mapping (38;80) to 348 for DUM8
LAYER M9i     329  // Metal9 layer
LAYER MAP 39 DATATYPE 0  329  // Mapping (39;0)  to 329 for M9
LAYER MAP 39 DATATYPE 7  329  // Mapping (39;7)  to 329 for M9
LAYER MAP 39 DATATYPE 20 329  // Mapping (39;20) to 329 for M9
LAYER MAP 39 DATATYPE 40 329  // Mapping (39;40) to 329 for M9
LAYER MAP 39 DATATYPE 60 329  // Mapping (39;60) to 329 for M9
LAYER MAP 39 DATATYPE 80 329  // Mapping (39;80) to 329 for M9
LAYER DUM9    349  // dummy Metal9 layer
LAYER MAP 39 DATATYPE 1  349  // Mapping (39;1)  to 349 for DUM9
LAYER MAP 39 DATATYPE 21 349  // Mapping (39;21) to 349 for DUM9
LAYER MAP 39 DATATYPE 41 349  // Mapping (39;41) to 349 for DUM9
LAYER MAP 39 DATATYPE 61 349  // Mapping (39;61) to 349 for DUM9
LAYER MAP 39 DATATYPE 81 349  // Mapping (39;80) to 349 for DUM9
LAYER M10i     330  // Metal10 layer
LAYER MAP 40 DATATYPE 0  330  // Mapping (40;0)  to 330 for M10
LAYER MAP 40 DATATYPE 7  330  // Mapping (40;7)  to 330 for M10
LAYER MAP 40 DATATYPE 20 330  // Mapping (40;20) to 330 for M10
LAYER MAP 40 DATATYPE 40 330  // Mapping (40;40) to 330 for M10
LAYER MAP 40 DATATYPE 60 330  // Mapping (40;60) to 330 for M10
LAYER MAP 40 DATATYPE 80 330  // Mapping (40;80) to 330 for M10
LAYER DUM10    350  // dummy Metal10 layer
LAYER MAP 40 DATATYPE 1  350  // Mapping (40;1)  to 350 for DUM10
LAYER MAP 40 DATATYPE 21 350  // Mapping (40;21) to 350 for DUM10
LAYER MAP 40 DATATYPE 41 350  // Mapping (40;41) to 350 for DUM10
LAYER MAP 40 DATATYPE 61 350  // Mapping (40;61) to 350 for DUM10
LAYER MAP 40 DATATYPE 81 350  // Mapping (40;80) to 350 for DUM10
LAYER M11i     331  // Metal11 layer
LAYER MAP 41 DATATYPE 0  331  // Mapping (41;0)  to 331 for M11
LAYER MAP 41 DATATYPE 7  331  // Mapping (41;7)  to 331 for M11
LAYER MAP 41 DATATYPE 20 331  // Mapping (41;20) to 331 for M11
LAYER MAP 41 DATATYPE 40 331  // Mapping (41;40) to 331 for M11
LAYER MAP 41 DATATYPE 60 331  // Mapping (41;60) to 331 for M11
LAYER MAP 41 DATATYPE 80 331  // Mapping (41;80) to 331 for M11
LAYER DUM11    351  // dummy Metal11 layer
LAYER MAP 41 DATATYPE 1  351  // Mapping (41;1)  to 351 for DUM11
LAYER MAP 41 DATATYPE 21 351  // Mapping (41;21) to 351 for DUM11
LAYER MAP 41 DATATYPE 41 351  // Mapping (41;41) to 351 for DUM11
LAYER MAP 41 DATATYPE 61 351  // Mapping (41;61) to 351 for DUM11
LAYER MAP 41 DATATYPE 81 351  // Mapping (41;80) to 351 for DUM11

LAYER DM1EXCL  371
LAYER MAP 150 DATATYPE 1 371
LAYER DM2EXCL  372
LAYER MAP 150 DATATYPE 2 372
LAYER DM3EXCL  373
LAYER MAP 150 DATATYPE 3 373
LAYER DM4EXCL  374
LAYER MAP 150 DATATYPE 4 374
LAYER DM5EXCL  375
LAYER MAP 150 DATATYPE 5 375
LAYER DM6EXCL  376
LAYER MAP 150 DATATYPE 6 376
LAYER DM7EXCL  377
LAYER MAP 150 DATATYPE 7 377
LAYER DM8EXCL  378
LAYER MAP 150 DATATYPE 8 378
LAYER DM9EXCL  379
LAYER MAP 150 DATATYPE 9 379
LAYER DM10EXCL  380
LAYER MAP 150 DATATYPE 10 380
LAYER DM11EXCL  381
LAYER MAP 150 DATATYPE 11 381
LAYER APEXCL 384
LAYER MAP 150 DATATYPE 22 384

LAYER  VIA1i     601  // VIA1 layer
LAYER MAP 51 DATATYPE 0  601  // Mapping (51;0)  to 601 
LAYER MAP 51 DATATYPE 20 601  // Mapping (51;20) to 601 
LAYER MAP 51 DATATYPE 40 601  // Mapping (51;40) to 601
LAYER MAP 51 DATATYPE 60 601  // Mapping (51;60) to 601
LAYER MAP 51 DATATYPE 80 601  // Mapping (51;80) to 601
LAYER  VIA2i     602  // VIA2 layer
LAYER MAP 52 DATATYPE 0  602  // Mapping (52;0)  to 602 
LAYER MAP 52 DATATYPE 20 602  // Mapping (52;20) to 602 
LAYER MAP 52 DATATYPE 40 602  // Mapping (52;40) to 602
LAYER MAP 52 DATATYPE 60 602  // Mapping (52;60) to 602
LAYER MAP 52 DATATYPE 80 602  // Mapping (52;80) to 602
LAYER  VIA3i     603  // VIA3 layer
LAYER MAP 53 DATATYPE 0  603  // Mapping (53;0)  to 603 
LAYER MAP 53 DATATYPE 20 603  // Mapping (53;20) to 603 
LAYER MAP 53 DATATYPE 40 603  // Mapping (53;40) to 603
LAYER MAP 53 DATATYPE 60 603  // Mapping (53;60) to 603
LAYER MAP 53 DATATYPE 80 603  // Mapping (53;80) to 603
LAYER  VIA4i     604  // VIA4 layer
LAYER MAP 54 DATATYPE 0  604  // Mapping (54;0)  to 604 
LAYER MAP 54 DATATYPE 20 604  // Mapping (54;20) to 604 
LAYER MAP 54 DATATYPE 40 604  // Mapping (54;40) to 604
LAYER MAP 54 DATATYPE 60 604  // Mapping (54;60) to 604
LAYER MAP 54 DATATYPE 80 604  // Mapping (54;80) to 604
LAYER  VIA5i     605  // VIA5 layer
LAYER MAP 55 DATATYPE 0  605  // Mapping (55;0)  to 605 
LAYER MAP 55 DATATYPE 20 605  // Mapping (55;20) to 605 
LAYER MAP 55 DATATYPE 40 605  // Mapping (55;40) to 605
LAYER MAP 55 DATATYPE 60 605  // Mapping (55;60) to 605
LAYER MAP 55 DATATYPE 80 605  // Mapping (55;80) to 605
LAYER  VIA6i     606  // VIA6 layer
LAYER MAP 56 DATATYPE 0  606  // Mapping (56;0)  to 606 
LAYER MAP 56 DATATYPE 20 606  // Mapping (56;20) to 606 
LAYER MAP 56 DATATYPE 40 606  // Mapping (56;40) to 606
LAYER MAP 56 DATATYPE 60 606  // Mapping (56;60) to 606
LAYER MAP 56 DATATYPE 80 606  // Mapping (56;80) to 606
LAYER  VIA7i     607  // VIA7 layer
LAYER MAP 57 DATATYPE 0  607  // Mapping (57;0)  to 607 
LAYER MAP 57 DATATYPE 20 607  // Mapping (57;20) to 607 
LAYER MAP 57 DATATYPE 40 607  // Mapping (57;40) to 607
LAYER MAP 57 DATATYPE 60 607  // Mapping (57;60) to 607
LAYER MAP 57 DATATYPE 80 607  // Mapping (57;80) to 607
LAYER  VIA8i     608  // VIA8 layer
LAYER MAP 58 DATATYPE 0  608  // Mapping (58;0)  to 608 
LAYER MAP 58 DATATYPE 20 608  // Mapping (58;20) to 608 
LAYER MAP 58 DATATYPE 40 608  // Mapping (58;40) to 608
LAYER MAP 58 DATATYPE 60 608  // Mapping (58;60) to 608
LAYER MAP 58 DATATYPE 80 608  // Mapping (58;80) to 608
LAYER  VIA9i     609  // VIA9 layer
LAYER MAP 59 DATATYPE 0  609  // Mapping (59;0)  to 609 
LAYER MAP 59 DATATYPE 20 609  // Mapping (59;20) to 609 
LAYER MAP 59 DATATYPE 40 609  // Mapping (59;40) to 609
LAYER MAP 59 DATATYPE 60 609  // Mapping (59;60) to 609
LAYER MAP 59 DATATYPE 80 609  // Mapping (59;80) to 609
LAYER  VIA10i     610  // VIA10 layer
LAYER MAP 60 DATATYPE 0  610  // Mapping (60;0)  to 610 
LAYER MAP 60 DATATYPE 20 610  // Mapping (60;20) to 610 
LAYER MAP 60 DATATYPE 40 610  // Mapping (60;40) to 610
LAYER MAP 60 DATATYPE 60 610  // Mapping (60;60) to 610
LAYER MAP 60 DATATYPE 80 610  // Mapping (60;80) to 610

LAYER ODi      6 7 8    
LAYER DOD      353
LAYER MAP 6 DATATYPE 1 353  // Mapping (6;1) to 353 for dummy OD
LAYER NOTUSEOD 616
LAYER MAP 6 DATATYPE >=161 <=165 616  // TSMC internal mask making layer (6;161-165)

LAYER POi      17
LAYER DPO      361
LAYER MAP 17 DATATYPE 1 361  // Mapping (17;1) to 361 for dummy PO
LAYER mVTLi    362	     // Used to generate poly logical operation in N65LP LVT process
LAYER MAP 17 DATATYPE 51 362 // Mapping (17;51, layer PO, purpose rule1) to 361 for mVTLi
LAYER NOTUSEPO 1716
LAYER MAP 17 DATATYPE >=161 <=165 1716   // TSMC internal mask making layer (17;161-165)

LAYER ODBLK  382
LAYER MAP 150 DATATYPE 20 382
LAYER POBLK  383
LAYER MAP 150 DATATYPE 21 383

LAYER prBoundary  108   // layout boundary layer
LAYER EMPTY  997   // empty layer
LAYER EMPTY1 998   // empty layer
LAYER EMPTY2 999   // empty layer

//
//  LAYER OPERATION
//-------------------
OD2i = ((OD_18i OR OD_25i) OR OD_33i) OR OD_6i
ALL_OD = ODi OR DOD
ALL_POLY = POi OR DPO

// metal in silicon
M1x = M1i OR DUM1 
M2x = M2i OR DUM2 
M3x = M3i OR DUM3 
M4x = M4i OR DUM4 
M5x = M5i OR DUM5 
M6x = M6i OR DUM6 
M7x = M7i OR DUM7 
M8x = M8i OR DUM8 
M9x = M9i OR DUM9 
M10x = M10i OR DUM10 
M11x = M11i OR DUM11

M1x_CTMDMY  = M1x AND CTMDMY
M2x_CTMDMY  = M2x AND CTMDMY
M3x_CTMDMY  = M3x AND CTMDMY
M4x_CTMDMY  = M4x AND CTMDMY
M5x_CTMDMY  = M5x AND CTMDMY
M6x_CTMDMY  = M6x AND CTMDMY
M7x_CTMDMY  = M7x AND CTMDMY
M8x_CTMDMY  = M8x AND CTMDMY
M9x_CTMDMY  = M9x AND CTMDMY
M10x_CTMDMY = M10x AND CTMDMY
M11x_CTMDMY = M11x AND CTMDMY




LAYOUT BASE LAYER OD_18i OD_25i OD_33i DCOi NT_Ni VTH_Ni VTH_Pi VTL_Ni VTL_Pi
LAYOUT BASE LAYER DNWi NWi ODi POi PPi NPi COi
LAYOUT TOP LAYER VIA1i M2i
LAYOUT TOP LAYER VIA2i M3i
LAYOUT TOP LAYER VIA3i M4i
LAYOUT TOP LAYER VIA4i M5i
LAYOUT TOP LAYER VIA5i M6i
LAYOUT TOP LAYER VIA6i M7i
LAYOUT TOP LAYER VIA7i M8i
LAYOUT TOP LAYER VIA8i M9i
LAYOUT TOP LAYER VIA9i M10i
LAYOUT TOP LAYER VIA10i M11i
LAYOUT TOP LAYER DUM1 DM1EXCL
LAYOUT TOP LAYER DUM2 DM2EXCL
LAYOUT TOP LAYER DUM3 DM3EXCL
LAYOUT TOP LAYER DUM4 DM4EXCL
LAYOUT TOP LAYER DUM5 DM5EXCL
LAYOUT TOP LAYER DUM6 DM6EXCL
LAYOUT TOP LAYER DUM7 DM7EXCL
LAYOUT TOP LAYER DUM8 DM8EXCL
LAYOUT TOP LAYER DUM9 DM9EXCL
LAYOUT TOP LAYER DUM10 DM10EXCL
LAYOUT TOP LAYER DUM11 DM11EXCL

LAYOUT TOP LAYER CBi CBDi UBMi WBDMY FWi PMi APi PMDMY LMARK SEALRINGi CSRDMY
LAYOUT TOP LAYER NWDMY SDI
LAYOUT TOP LAYER SDI ESD1DMY ESD2DMY ESD3 SRM SRAMDMY LOGO
LAYOUT TOP LAYER DOD DPO ODBLK POBLK
LAYOUT TOP LAYER CBMi CTMi CTMDMY INDDMY VARi


RDGi_EXTENT = EXTENT RDGi
UNIT_GC_EXTENT = EXTENT UNIT_GC
DNWi_EXTENT = EXTENT DNWi
NWi_EXTENT = EXTENT NWi
OD_18i_EXTENT = EXTENT OD_18i
OD_25i_EXTENT = EXTENT OD_25i
OD_33i_EXTENT = EXTENT OD_33i
OD_DECAP_EXTENT = EXTENT OD_DECAP
PPi_EXTENT = EXTENT PPi
NPi_EXTENT = EXTENT NPi
CBi_EXTENT = EXTENT CBi
CB2i_EXTENT = EXTENT CB2i
RPOi_EXTENT = EXTENT RPOi
NT_Ni_EXTENT = EXTENT NT_Ni
FWi_EXTENT = EXTENT FWi
POFUSE_EXTENT = EXTENT POFUSE
FUSELINK_EXTENT = EXTENT FUSELINK
PMi_EXTENT = EXTENT PMi
VTH_Ni_EXTENT = EXTENT VTH_Ni
VTH_Pi_EXTENT = EXTENT VTH_Pi
VTL_Ni_EXTENT = EXTENT VTL_Ni
VTL_Pi_EXTENT = EXTENT VTL_Pi
UHVT_Ni_EXTENT = EXTENT UHVT_Ni
UHVT_Pi_EXTENT = EXTENT UHVT_Pi
CBDi_EXTENT = EXTENT CBDi
UBMi_EXTENT = EXTENT UBMi
RH_EXTENT = EXTENT RH
ESD3_EXTENT = EXTENT ESD3
ESDIMP_EXTENT = EXTENT ESDIMP
VARi_EXTENT = EXTENT VARi
APi_EXTENT = EXTENT APi
RVi_EXTENT = EXTENT RVi
CBMi_EXTENT = EXTENT CBMi
CTMi_EXTENT = EXTENT CTMi
DCOi_EXTENT = EXTENT DCOi
HVD_N_EXTENT = EXTENT HVD_N
HVD_P_EXTENT = EXTENT HVD_P
HVD_N_nwi_EXTENT = EXTENT HVD_N_nwi
BJTDMY_EXTENT = EXTENT BJTDMY
LMARK_EXTENT = EXTENT LMARK
SRM_EXTENT = EXTENT SRM
TCDDMY_EXTENT = EXTENT TCDDMY
SRAMDMY_EXTENT = EXTENT SRAMDMY
SRAMDMY_PERI_LP_EXTENT = EXTENT SRAMDMY_PERI_LP
SRAMDMY_PERI_G_EXTENT = EXTENT SRAMDMY_PERI_G
HVNW_EXTENT = EXTENT HVNW
HV_EXTENT = EXTENT HV
OD_6i_EXTENT = EXTENT OD_6i
CB_C_EXTENT = EXTENT CB_C
AP_C_EXTENT = EXTENT AP_C
NPR_EXTENT = EXTENT NPR
HVDT_DMY_EXTENT = EXTENT HVDT_DMY
HVND_TC13_EXTENT = EXTENT HVND_TC13
HVND_TC2_EXTENT = EXTENT HVND_TC2
HVND_TC2E_EXTENT = EXTENT HVND_TC2E
TFRDUMMY_3_EXTENT = EXTENT TFRDUMMY_3
TFRDUMMY_4_EXTENT = EXTENT TFRDUMMY_4
TFRDUMMY_5_EXTENT = EXTENT TFRDUMMY_5
TFRDUMMY_6_EXTENT = EXTENT TFRDUMMY_6
TFRDUMMY_7_EXTENT = EXTENT TFRDUMMY_7
TFRDUMMY_8_EXTENT = EXTENT TFRDUMMY_8
M1i_EXTENT = EXTENT M1i
DUM1_EXTENT = EXTENT DUM1
M2i_EXTENT = EXTENT M2i
DUM2_EXTENT = EXTENT DUM2
M3i_EXTENT = EXTENT M3i
DUM3_EXTENT = EXTENT DUM3
M4i_EXTENT = EXTENT M4i
DUM4_EXTENT = EXTENT DUM4
M5i_EXTENT = EXTENT M5i
DUM5_EXTENT = EXTENT DUM5
M6i_EXTENT = EXTENT M6i
DUM6_EXTENT = EXTENT DUM6
M7i_EXTENT = EXTENT M7i
DUM7_EXTENT = EXTENT DUM7
M8i_EXTENT = EXTENT M8i
DUM8_EXTENT = EXTENT DUM8
M9i_EXTENT = EXTENT M9i
DUM9_EXTENT = EXTENT DUM9
M10i_EXTENT = EXTENT M10i
DUM10_EXTENT = EXTENT DUM10
M11i_EXTENT = EXTENT M11i
DUM11_EXTENT = EXTENT DUM11
ODi_EXTENT = EXTENT ODi
DOD_EXTENT = EXTENT DOD
POi_EXTENT = EXTENT POi
DPO_EXTENT = EXTENT DPO
mVTLi_EXTENT = EXTENT mVTLi

 MT_LAYERS =  ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((RDGi_EXTENT OR UNIT_GC_EXTENT) OR DNWi_EXTENT) OR NWi_EXTENT) OR OD_18i_EXTENT) OR OD_25i_EXTENT) OR OD_33i_EXTENT) OR OD_DECAP_EXTENT) OR PPi_EXTENT) OR NPi_EXTENT) OR CBi_EXTENT) OR CB2i_EXTENT) OR RPOi_EXTENT) OR NT_Ni_EXTENT) OR FWi_EXTENT) OR POFUSE_EXTENT) OR FUSELINK_EXTENT) OR PMi_EXTENT) OR VTH_Ni_EXTENT) OR VTH_Pi_EXTENT) OR VTL_Ni_EXTENT) OR VTL_Pi_EXTENT) OR UHVT_Ni_EXTENT) OR UHVT_Pi_EXTENT) OR CBDi_EXTENT) OR UBMi_EXTENT) OR RH_EXTENT) OR ESD3_EXTENT) OR ESDIMP_EXTENT) OR VARi_EXTENT) OR APi_EXTENT) OR RVi_EXTENT) OR CBMi_EXTENT) OR CTMi_EXTENT) OR DCOi_EXTENT) OR HVD_N_EXTENT) OR HVD_P_EXTENT) OR HVD_N_nwi_EXTENT) OR BJTDMY_EXTENT) OR LMARK_EXTENT) OR SRM_EXTENT) OR TCDDMY_EXTENT) OR SRAMDMY_EXTENT) OR SRAMDMY_PERI_LP_EXTENT) OR SRAMDMY_PERI_G_EXTENT) OR HVNW_EXTENT) OR HV_EXTENT) OR OD_6i_EXTENT) OR CB_C_EXTENT) OR AP_C_EXTENT) OR NPR_EXTENT) OR HVDT_DMY_EXTENT) OR HVND_TC13_EXTENT) OR HVND_TC2_EXTENT) OR HVND_TC2E_EXTENT) OR TFRDUMMY_3_EXTENT) OR TFRDUMMY_4_EXTENT) OR TFRDUMMY_5_EXTENT) OR TFRDUMMY_6_EXTENT) OR TFRDUMMY_7_EXTENT) OR TFRDUMMY_8_EXTENT) OR M1i_EXTENT) OR DUM1_EXTENT) OR M2i_EXTENT) OR DUM2_EXTENT) OR M3i_EXTENT) OR DUM3_EXTENT) OR M4i_EXTENT) OR DUM4_EXTENT) OR M5i_EXTENT) OR DUM5_EXTENT) OR M6i_EXTENT) OR DUM6_EXTENT) OR M7i_EXTENT) OR DUM7_EXTENT) OR M8i_EXTENT) OR DUM8_EXTENT) OR M9i_EXTENT) OR DUM9_EXTENT) OR M10i_EXTENT) OR DUM10_EXTENT) OR M11i_EXTENT) OR DUM11_EXTENT) OR ODi_EXTENT) OR DOD_EXTENT) OR POi_EXTENT) OR DPO_EXTENT) OR mVTLi_EXTENT

AP_C_TC13 = AP_C INSIDE HVND_TC13
CB_C_TC13 = CB_C INSIDE HVND_TC13
NPR_TC13 = NPR INSIDE HVND_TC13

#ENDIF
OD_RDG = ODi INSIDE RDGi      
//
//   VARIABLE SETUP
//--------------------

//***** Variables do not be modified *****
#IFNDEF COMBINE_DODPO_DM
VARIABLE grid    0.005 		// official grid size
VARIABLE SRwidth 20.0		// width of sealring including CDU and isolation regions
VARIABLE CSRwidth 74.0          // corner width beside sealring
#ENDIF


//******* Density Definitions (Same for all layers M1 - M11) ************
VARIABLE WindowSize 75         	// density check window
VARIABLE WindowStep 37.5       	// movement of density check window
VARIABLE emptyWindowSize 10    	// empty window size
VARIABLE emptyWindowStep 5     	// movement of empty window
VARIABLE excludeHoleSize 4     	// exclude insertion when hole width less than this value
VARIABLE midM    1.0		// metal filtering size

//******* Fill region and spacing definitions **************************

VARIABLE dm2FW      5.0		// dummy to FW layer spacing, DMx.S.4
VARIABLE dm2LMARK   5.0		// dummy to LMARK layer spacing, DMx.S.5
VARIABLE dm2UNIT_GC 5.0     // dummy to UNIT_GC layer spacing, DMx.S.11
VARIABLE dm2DMEXCL  0.6		// dummy to blockage layer spacing
VARIABLE dm2LOGO    0.0	        // dummy to LOGO spacing, DMx.S.7
VARIABLE dm2INDDMY  2.5 	// dummy to INDDMY spacing, DMx.S.8
VARIABLE dm2CBM     1.5		// dummy to capacitor bottom plate spacing, DMx.S.9
VARIABLE dm2Chip    2.5		// dummy to Chip Edge spacing,DMx.EN.1
VARIABLE dm2INDMDHDCOIL	0.5	// Dummy metal to INDDMY_MD/INDDMY_HD/INDDMY_COIL sapce
VARIABLE dm2HV	    2   	// DMx.S.12
VARIABLE dm2OD_RDG	    0.6   	// DM1 and DM2 space to (OD INSIDE RDG)
VARIABLE dm2HVNW    2   	// DMx.S.11
VARIABLE dmtop2ap_c  1.5    // TC1_3.S.5
VARIABLE dm2HVDT_DMY 3.4    // TC2.S.3.4
VARIABLE dm2SEALRING_HV 1.0 // TC2.S.4.4

//***** Chip boundary pre-definition ******
#IFNDEF COMBINE_DODPO_DM

// *********************************************
// begin pre-generation process : find open area
// *********************************************
#IFDEF UseprBoundary
   bulk_pre = COPY prBoundary
#ELSE
#IFDEF ChipWindowUsed
   POLYGON xLB yLB xRT yRT ChipWindow
   bulk_pre = PUSH ChipWindow
#ELSE
   bulk_ext = EXTENT MT_LAYERS
   bulk_pre = PUSH bulk_ext
#ENDIF  
#ENDIF
   
#IFDEF WithSealring
   bulk = SIZE bulk_pre BY -(SRwidth + grid)
#ELSE
   bulk = COPY bulk_pre
#ENDIF  

#IFDEF dmOnCorner
   CHIP = COPY bulk
#ELSE
// for seal-ring and chip corner excluding regions.
   EMPTY_AREA = INT bulk < CSRwidth ABUT==90 REGION INTERSECTING ONLY
   CHIP = bulk NOT EMPTY_AREA
#ENDIF
#ENDIF


//***** Blockage layers pre-defined ******

FWx = SIZE FWi BY (dm2FW+grid)
LMARKx = SIZE LMARK BY (dm2LMARK+grid)
UNIT_GCx = SIZE UNIT_GC BY (dm2UNIT_GC+grid)
INDDMYx = SIZE INDDMY BY (dm2INDDMY+grid)
INDDMYx_RM = SIZE INDDMY BY 12+grid
CBMx = SIZE CBMi BY (dm2CBM+grid)
LOGOx = SIZE LOGO BY (dm2LOGO + grid)
HVNWxx = SIZE (HVNW INTERACT HV) BY (dm2HVNW + grid)
HVxx   = SIZE HV   BY (dm2HV + grid)
dm_chip_edgex = CHIP NOT (SIZE CHIP BY -(dm2Chip + grid))
dmHVDT_DMYx = SIZE HVDT_DMY BY (dm2HVDT_DMY + grid)
dmSEALRING_HVx = SIZE SEALRING_HV BY (dm2SEALRING_HV + grid)
dmN55HV_EXC = (((AP_C_TC13 OR CB_C_TC13) OR NPR_TC13) OR dmHVDT_DMYx) OR dmSEALRING_HVx
NFILL = (((((ind_INDDMYx OR FWx) OR LMARKx) OR UNIT_GCx) OR LOGOx) OR dmN55HV_EXC) OR dm_chip_edgex
NFILLRM = ((((ind_INDDMYx_RM OR FWx) OR LMARKx) OR UNIT_GCx) OR LOGOx) OR dm_chip_edgex

AP_C_BLOCK = SIZE AP_C_TC13 BY (dmtop2ap_c + grid)  // AP_C to Dmtop inside HVND_TC13

OD_RDG_M1 = SIZE OD_RDG BY (dm2OD_RDG + grid)   //DM1 and DM2 sapce to (OD INSIDE RDG)

OD_RDG_M2 = SIZE OD_RDG BY (dm2OD_RDG + grid)   //DM1 and DM2 sapce to (OD INSIDE RDG)

OD_RDG_M3 = COPY EMPTY

OD_RDG_M4 = COPY EMPTY

OD_RDG_M5 = COPY EMPTY

OD_RDG_M6 = COPY EMPTY

OD_RDG_M7 = COPY EMPTY

OD_RDG_M8 = COPY EMPTY

OD_RDG_M9 = COPY EMPTY

OD_RDG_M10 = COPY EMPTY

OD_RDG_M11 = COPY EMPTY



#IFNDEF COMBINE_DODPO_DM
ALL_INDDMY = ((INDDMY OR (INDDMY_MD AND INDDMY_COIL)) OR INDDMY_MD) OR INDDMY_HD
IND_COIL_EXD = SIZE INDDMY_COIL BY 16+grid
ind_INDDMYx = SIZE ALL_INDDMY BY (dm2INDDMY+grid)
ind_INDDMYx_RM = SIZE ALL_INDDMY BY 12+grid

ind_NFILL = (((((INDDMYx OR FWx) OR LMARKx) OR UNIT_GCx) OR LOGOx) OR dmN55HV_EXC) OR dm_chip_edgex
ind_NFILLRM = ((((INDDMYx_RM OR FWx) OR LMARKx) OR UNIT_GCx) OR LOGOx) OR dm_chip_edgex
INDDMY_HD_FILL = SIZE INDDMY_HD BY -(dm2INDMDHDCOIL + grid)
INDDMY_MD_FILL = (SIZE INDDMY_MD BY -(dm2INDMDHDCOIL + grid)) NOT (SIZE INDDMY_COIL BY (dm2INDMDHDCOIL + grid))
#ELSE
ALL_INDDMY = ((INDDMY OR (INDDMY_MD AND INDDMY_COIL)) OR INDDMY_MD) OR INDDMY_HD
IND_COIL_EXD = SIZE INDDMY_COIL BY 16+grid
ind_INDDMYx = SIZE ALL_INDDMY BY (dm2INDDMY+grid)
ind_INDDMYx_RM = SIZE ALL_INDDMY BY 12+grid
ind_NFILL = (((((INDDMYx OR FWx) OR LMARKx) OR UNIT_GCx) OR LOGOx) OR dmN55HV_EXC) OR dm_chip_edgex
ind_NFILLRM = ((((INDDMYx_RM OR FWx) OR LMARKx) OR UNIT_GCx) OR LOGOx) OR dm_chip_edgex
INDDMY_HD_FILL = SIZE INDDMY_HD BY -(dm2INDMDHDCOIL + grid)
INDDMY_MD_FILL = (SIZE INDDMY_MD BY -(dm2INDMDHDCOIL + grid)) NOT (SIZE INDDMY_COIL BY (dm2INDMDHDCOIL + grid))
#ENDIF



//******* Fill dimension & offset & density constraints ****************

// INDDMY DM1 variable
#IFDEF 34K_THICK_M1
VARIABLE dmW_M1_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 width   
VARIABLE dmL_M1_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 length  
VARIABLE dmS_M1_ind_1  3		// DM1 spacing for MD inductor 
VARIABLE dmS_M1_ind_2  4.5		// DM1 spacing for HD inductor
VARIABLE dm2M1_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 to real metal spacing 	
VARIABLE dm452M1_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 to real metal spacing 	
VARIABLE dmO_M1_ind_1  dmS_M1_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M1_ind_2  dmS_M1_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M1
VARIABLE dmW_M1_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 width   
VARIABLE dmL_M1_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 length  
VARIABLE dmS_M1_ind_1  0.8		// DM1 spacing for MD inductor
VARIABLE dmS_M1_ind_2  0.9		// DM1 spacing for HD inductor 
VARIABLE dm2M1_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 to real metal spacing 	
VARIABLE dm452M1_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 to real metal spacing 	
VARIABLE dmO_M1_ind_1  dmS_M1_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M1_ind_2  dmS_M1_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M1
VARIABLE dmW_M1_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 width   
VARIABLE dmL_M1_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 length  
VARIABLE dmS_M1_ind_1  0.6		// DM1 spacing for MD inductor
VARIABLE dmS_M1_ind_2  0.7		// DM1 spacing for HD inductor
VARIABLE dm2M1_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 to real metal spacing 	
VARIABLE dm452M1_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM1 to real metal spacing 	
VARIABLE dmO_M1_ind_1  dmS_M1_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M1_ind_2  dmS_M1_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM1 variable
#IFDEF 34K_THICK_M1
VARIABLE dmW_M1  3.0		// small DM1 width   
VARIABLE dmL_M1  3.0		// small DM1 length  
VARIABLE dmS_M1  3.0		// small DM1 spacing   
VARIABLE dm2M1   3.0		// small DM1 to real metal spacing 	
VARIABLE dmO_M1  0.75		// offset = space*(1/4)
VARIABLE MdmW_M1 3.0		// middle DM1 width   
VARIABLE MdmL_M1 3.0		// middle DM1 length  
VARIABLE MdmS_M1 3.0		// middle DM1 spacing   
VARIABLE Mdm2M1  3.0		// middle DM1 to real metal spacing 
VARIABLE MdmO_M1 0.75		// offset = space*(1/4)
VARIABLE WdmW_M1 3.0		// large DM1 width   
VARIABLE WdmL_M1 3.0		// large DM1 length  
VARIABLE WdmS_M1 3.0		// large DM1 spacing   
VARIABLE Wdm2M1  3.0		// large DM1 to real metal spacing 	
VARIABLE WdmO_M1 0.75		// offset = space*(1/4)
VARIABLE minD_M1 0.4		// M1 density for insertion
VARIABLE maxD_M1 0.8		// M1 density for remove inserted dummy
VARIABLE emptyD_M1 0.001	// M1 density for blank region selection
VARIABLE dm2DM1  3.0		// DM1 to existed dummy metal spacing
VARIABLE wideM1  4.5		// wide metal size needs larger space
VARIABLE dm2WM1  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M1
VARIABLE dmW_M1  1.2		// small DM1 width   
VARIABLE dmL_M1  1.2		// small DM1 length  
VARIABLE dmS_M1  0.8		// small DM1 spacing   
VARIABLE dm2M1   0.8		// small DM1 to real metal spacing 	
VARIABLE dmO_M1  0.2		// offset = space*(1/4)
VARIABLE MdmW_M1 1.2		// middle DM1 width   
VARIABLE MdmL_M1 1.2		// middle DM1 length  
VARIABLE MdmS_M1 0.8		// middle DM1 spacing   
VARIABLE Mdm2M1  0.8		// middle DM1 to real metal spacing 
VARIABLE MdmO_M1 0.2		// offset = space*(1/4)
VARIABLE WdmW_M1 2.0		// large DM1 width   
VARIABLE WdmL_M1 2.0		// large DM1 length  
VARIABLE WdmS_M1 0.8		// large DM1 spacing   
VARIABLE Wdm2M1  5.0		// large DM1 to real metal spacing 	
VARIABLE WdmO_M1 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M1  1.5	// ODM1 max width
VARIABLE maxOdmL_M1  6  	// ODM1 max length
VARIABLE OdmW_M1  0.8	// ODM1 width      
VARIABLE OdmL_M1  1.8	// ODM1 length
VARIABLE OdmS_M1  0.8	// ODM1 space
VARIABLE Odm2M1   0.8	// ODM1 to real metal
VARIABLE OdmO_M1  0.2	// offset = space*(1/4)
VARIABLE minD_M1  0.4	// M1 density for insertion
VARIABLE maxD_M1  0.8	// M1 density for remove inserted dummy
VARIABLE emptyD_M1 0.001	// M1 density for blank region selection
VARIABLE dm2DM1   0.8	// DM1 to existed dummy metal spacing
VARIABLE Odm2DM1  0.8	// ODM1 to existed dummy metal spacing
VARIABLE wideM1   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM1   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M1
VARIABLE dmW_M1  0.8		// small DM1 width   
VARIABLE dmL_M1  0.8		// small DM1 length  
VARIABLE dmS_M1  0.4		// small DM1 spacing   
VARIABLE dm2M1   0.6		// small DM1 to real metal spacing 	
VARIABLE dmO_M1  0.1		// offset = space*(1/4)
VARIABLE MdmW_M1 0.8		// middle DM1 width   
VARIABLE MdmL_M1 0.8		// middle DM1 length  
VARIABLE MdmS_M1 0.4		// middle DM1 spacing   
VARIABLE Mdm2M1  0.6		// middle DM1 to real metal spacing 
VARIABLE MdmO_M1 0.1		// offset = space*(1/4)
VARIABLE WdmW_M1 2.0		// large DM1 width   
VARIABLE WdmL_M1 2.0		// large DM1 length  
VARIABLE WdmS_M1 0.8		// large DM1 spacing   
VARIABLE Wdm2M1  5.0		// large DM1 to real metal spacing 	
VARIABLE WdmO_M1 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M1  1.5	// ODM1 max width
VARIABLE maxOdmL_M1  6  	// ODM1 max length
VARIABLE OdmW_M1  0.4	// ODM1 width
VARIABLE OdmL_M1  1.42	// ODM1 length
VARIABLE OdmS_M1  0.4	// ODM1 space
VARIABLE Odm2M1   0.6	// ODM1 to real metal
VARIABLE OdmO_M1  0.1	// offset = space*(1/4)
VARIABLE minD_M1  0.4	// M1 density for insertion
VARIABLE maxD_M1  0.8	// M1 density for remove inserted dummy
VARIABLE emptyD_M1 0.001	// M1 density for blank region selection
VARIABLE dm2DM1   0.4	// DM1 to existed dummy metal spacing
VARIABLE Odm2DM1  0.4	// ODM1 to existed dummy metal spacing
VARIABLE wideM1   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM1   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M1_CTMDMY  0.92  // DM1 spacing in CTMDMY 
VARIABLE dm2M1_CTMDMY   0.92  // DM1 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M1_CTMDMY  0.92  // min.DM1 width in CTMDMY
#ELSE
VARIABLE dmS_M1_CTMDMY  0.84  // DM1 spacing in CTMDMY 
VARIABLE dm2M1_CTMDMY   0.84  // DM1 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M1_CTMDMY  0.84  // min.DM1 width in CTMDMY
#ENDIF
#ELSE
#IFDEF 5K_THICK_M1
VARIABLE dmW_M1  0.8		// small DM1 width   
VARIABLE dmL_M1  0.8		// small DM1 length  
VARIABLE dmS_M1  0.4		// small DM1 spacing   
VARIABLE dm2M1   0.6		// small DM1 to real metal spacing 	
VARIABLE dmO_M1  0.1		// offset = space*(1/4)
VARIABLE MdmW_M1 0.8		// middle DM1 width   
VARIABLE MdmL_M1 0.8		// middle DM1 length  
VARIABLE MdmS_M1 0.4		// middle DM1 spacing   
VARIABLE Mdm2M1  0.6		// middle DM1 to real metal spacing 
VARIABLE MdmO_M1 0.1		// offset = space*(1/4)
VARIABLE WdmW_M1 2.0		// large DM1 width   
VARIABLE WdmL_M1 2.0		// large DM1 length  
VARIABLE WdmS_M1 0.8		// large DM1 spacing   
VARIABLE Wdm2M1  5.0		// large DM1 to real metal spacing 	
VARIABLE WdmO_M1 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M1  1.5	// ODM1 max width
VARIABLE maxOdmL_M1  6  	// ODM1 max length
VARIABLE OdmW_M1  0.4	// ODM1 width      
VARIABLE OdmL_M1  1.42	// ODM1 length
VARIABLE OdmS_M1  0.4	// ODM1 space
VARIABLE Odm2M1   0.6	// ODM1 to real metal
VARIABLE OdmO_M1  0.1	// offset = space*(1/4)
VARIABLE minD_M1  0.4	// M1 density for insertion
VARIABLE maxD_M1  0.7	// M1 density for remove inserted dummy
VARIABLE emptyD_M1 0.001	// M1 density for blank region selection
VARIABLE dm2DM1   0.4	// DM1 to existed dummy metal spacing
VARIABLE Odm2DM1  0.4	// ODM1 to existed dummy metal spacing
VARIABLE wideM1   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM1   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM1_301  0.5	// SDM1 width   
VARIABLE LM1_301  0.5	// SDM1 length  
VARIABLE SM1_301  0.3	// SDM1 space   
VARIABLE DM1_301  0.3	// SDM1 to real metal 	
VARIABLE DM145_301  0.4	// SDM1 to 45 degree real metal 	
VARIABLE OM1_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM1V_3011  1	// DM1V max width, 0.5*2  
VARIABLE maxL_DM1V_3011  6  	// DM1V max length
VARIABLE minL_DM1V_3011  0.8	// DM1V min length
VARIABLE WM1_302  1.2	// MDM1 width   
VARIABLE LM1_302  0.5	// MDM1 length
VARIABLE SM1_302  0.3	// MDM1 space   
VARIABLE DM1_302  0.3	// MDM1 to real metal 	
VARIABLE OM1_302  0.08	// offset = space*(1/4)
VARIABLE WM1_303  2.0	// BDM1 width   
VARIABLE LM1_303  2.0	// BDM1 length 
VARIABLE SM1_303  0.7	// BDM1 space  
VARIABLE DM1_303  1.5	// BDM1 to real metal	
VARIABLE OM1_303  0.2	// offset = space*(1/4)
VARIABLE minWM1_304  0.13	// ODM1 min width      
VARIABLE minLM1_304  0.6	// ODM1 min length
VARIABLE maxWM1_304  0.2	// ODM1 max width
VARIABLE maxLM1_304  6  	// ODM1 max length
VARIABLE SM1_304  0.13	// ODM1 space
VARIABLE DM1_304  0.3	// ODM1 to real metal
VARIABLE DM145_304  0.4	// ODM1 to 45 degree real metal
VARIABLE OM1_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM1_401  0.5	// SDM width   
VARIABLE LM1_401  0.5	// SDM length  
VARIABLE SM1_401  0.3	// SDM space   
VARIABLE DM1_401  0.3	// SDM to real metal 	
VARIABLE OM1_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM1V_4011  1	// DM1V max width, 0.5*2    
VARIABLE maxL_DM1V_4011  6  	// DM1V max length
VARIABLE minL_DM1V_4011  0.8	// DM1V min length
VARIABLE WM1_402  1.2	// MDM width    
VARIABLE LM1_402  0.5	// MDM length 
VARIABLE SM1_402  0.3	// MDM space    
VARIABLE DM1_402  0.3	// MDM to real metal  	
VARIABLE OM1_402  0.08	// offset = space*(1/4)  	
VARIABLE WM1_403  2.0	// BDM width   
VARIABLE LM1_403  2.0	// BDM length  
VARIABLE SM1_403  1.0	// BDM space   
VARIABLE DM1_403  1.5	// BDM to real metal 	
VARIABLE OM1_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM1_501  0.5	// SDM width   
VARIABLE LM1_501  0.5	// SDM length  
VARIABLE SM1_501  0.3	// SDM space   
VARIABLE DM1_501  0.3	// SDM to real metal 	
VARIABLE OM1_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM1V_5011  1	// DM1V max width, 0.5*2    
VARIABLE maxL_DM1V_5011  6  	// DM1V max length
VARIABLE minL_DM1V_5011  0.8	// DM1V min length
VARIABLE WM1_502  1.2	// MDM width   
VARIABLE LM1_502  0.5	// MDM length 
VARIABLE SM1_502  0.5	// MDM space   
VARIABLE DM1_502  0.3	// MDM to real metal 	
VARIABLE OM1_502  0.1	// offset = space*(1/4)  	
VARIABLE WM1_503  2.0	// BDM width    
VARIABLE LM1_503  2.0	// BDM length   
VARIABLE SM1_503  1.4	// BDM space    
VARIABLE DM1_503  1.5	// BDM to real metal  	
VARIABLE OM1_503  0.4	// offset = space*(1/3) 
VARIABLE DM1_S_1  0.3
VARIABLE maxD_M1  0.65	// M1 density for remove inserted dummy
VARIABLE emptyD_M1 0.001	// M1 density for blank region selection
VARIABLE dm2DM1   0.3	// DM1 to existed dummy metal spacing
VARIABLE Odm2DM1  0.3	// ODM1 to existed dummy metal spacing
VARIABLE wideM1   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM1_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM1_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM1_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM1     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM1_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM1_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM1_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM2 variable
#IFDEF 34K_THICK_M2
VARIABLE dmW_M2_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 width   
VARIABLE dmL_M2_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 length  
VARIABLE dmS_M2_ind_1  3		// DM2 spacing for MD inductor 
VARIABLE dmS_M2_ind_2  4.5		// DM2 spacing for HD inductor
VARIABLE dm2M2_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 to real metal spacing 	
VARIABLE dm452M2_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 to real metal spacing 	
VARIABLE dmO_M2_ind_1  dmS_M2_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M2_ind_2  dmS_M2_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M2
VARIABLE dmW_M2_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 width   
VARIABLE dmL_M2_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 length  
VARIABLE dmS_M2_ind_1  0.8		// DM2 spacing for MD inductor
VARIABLE dmS_M2_ind_2  0.9		// DM2 spacing for HD inductor 
VARIABLE dm2M2_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 to real metal spacing 	
VARIABLE dm452M2_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 to real metal spacing 	
VARIABLE dmO_M2_ind_1  dmS_M2_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M2_ind_2  dmS_M2_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M2
VARIABLE dmW_M2_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 width   
VARIABLE dmL_M2_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 length  
VARIABLE dmS_M2_ind_1  0.6		// DM2 spacing for MD inductor
VARIABLE dmS_M2_ind_2  0.7		// DM2 spacing for HD inductor
VARIABLE dm2M2_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 to real metal spacing 	
VARIABLE dm452M2_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM2 to real metal spacing 	
VARIABLE dmO_M2_ind_1  dmS_M2_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M2_ind_2  dmS_M2_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM2 variable
#IFDEF 34K_THICK_M2
VARIABLE dmW_M2  3.0		// small DM2 width   
VARIABLE dmL_M2  3.0		// small DM2 length  
VARIABLE dmS_M2  3.0		// small DM2 spacing   
VARIABLE dm2M2   3.0		// small DM2 to real metal spacing 	
VARIABLE dmO_M2  0.75		// offset = space*(1/4)
VARIABLE MdmW_M2 3.0		// middle DM2 width   
VARIABLE MdmL_M2 3.0		// middle DM2 length  
VARIABLE MdmS_M2 3.0		// middle DM2 spacing   
VARIABLE Mdm2M2  3.0		// middle DM2 to real metal spacing 
VARIABLE MdmO_M2 0.75		// offset = space*(1/4)
VARIABLE WdmW_M2 3.0		// large DM2 width   
VARIABLE WdmL_M2 3.0		// large DM2 length  
VARIABLE WdmS_M2 3.0		// large DM2 spacing   
VARIABLE Wdm2M2  3.0		// large DM2 to real metal spacing 	
VARIABLE WdmO_M2 0.75		// offset = space*(1/4)
VARIABLE minD_M2 0.4		// M2 density for insertion
VARIABLE maxD_M2 0.8		// M2 density for remove inserted dummy
VARIABLE emptyD_M2 0.001	// M2 density for blank region selection
VARIABLE dm2DM2  3.0		// DM2 to existed dummy metal spacing
VARIABLE wideM2  4.5		// wide metal size needs larger space
VARIABLE dm2WM2  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M2
VARIABLE dmW_M2  1.2		// small DM2 width   
VARIABLE dmL_M2  1.2		// small DM2 length  
VARIABLE dmS_M2  0.8		// small DM2 spacing   
VARIABLE dm2M2   0.8		// small DM2 to real metal spacing 	
VARIABLE dmO_M2  0.2		// offset = space*(1/4)
VARIABLE MdmW_M2 1.2		// middle DM2 width   
VARIABLE MdmL_M2 1.2		// middle DM2 length  
VARIABLE MdmS_M2 0.8		// middle DM2 spacing   
VARIABLE Mdm2M2  0.8		// middle DM2 to real metal spacing 
VARIABLE MdmO_M2 0.2		// offset = space*(1/4)
VARIABLE WdmW_M2 2.0		// large DM2 width   
VARIABLE WdmL_M2 2.0		// large DM2 length  
VARIABLE WdmS_M2 0.8		// large DM2 spacing   
VARIABLE Wdm2M2  5.0		// large DM2 to real metal spacing 	
VARIABLE WdmO_M2 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M2  1.5	// ODM2 max width
VARIABLE maxOdmL_M2  6  	// ODM2 max length
VARIABLE OdmW_M2  0.8	// ODM2 width      
VARIABLE OdmL_M2  1.8	// ODM2 length
VARIABLE OdmS_M2  0.8	// ODM2 space
VARIABLE Odm2M2   0.8	// ODM2 to real metal
VARIABLE OdmO_M2  0.2	// offset = space*(1/4)
VARIABLE minD_M2  0.4	// M2 density for insertion
VARIABLE maxD_M2  0.8	// M2 density for remove inserted dummy
VARIABLE emptyD_M2 0.001	// M2 density for blank region selection
VARIABLE dm2DM2   0.8	// DM2 to existed dummy metal spacing
VARIABLE Odm2DM2  0.8	// ODM2 to existed dummy metal spacing
VARIABLE wideM2   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM2   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M2
VARIABLE dmW_M2  0.8		// small DM2 width   
VARIABLE dmL_M2  0.8		// small DM2 length  
VARIABLE dmS_M2  0.4		// small DM2 spacing   
VARIABLE dm2M2   0.6		// small DM2 to real metal spacing 	
VARIABLE dmO_M2  0.1		// offset = space*(1/4)
VARIABLE MdmW_M2 0.8		// middle DM2 width   
VARIABLE MdmL_M2 0.8		// middle DM2 length  
VARIABLE MdmS_M2 0.4		// middle DM2 spacing   
VARIABLE Mdm2M2  0.6		// middle DM2 to real metal spacing 
VARIABLE MdmO_M2 0.1		// offset = space*(1/4)
VARIABLE WdmW_M2 2.0		// large DM2 width   
VARIABLE WdmL_M2 2.0		// large DM2 length  
VARIABLE WdmS_M2 0.8		// large DM2 spacing   
VARIABLE Wdm2M2  5.0		// large DM2 to real metal spacing 	
VARIABLE WdmO_M2 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M2  1.5	// ODM2 max width
VARIABLE maxOdmL_M2  6  	// ODM2 max length
VARIABLE OdmW_M2  0.4	// ODM2 width
VARIABLE OdmL_M2  1.42	// ODM2 length
VARIABLE OdmS_M2  0.4	// ODM2 space
VARIABLE Odm2M2   0.6	// ODM2 to real metal
VARIABLE OdmO_M2  0.1	// offset = space*(1/4)
VARIABLE minD_M2  0.4	// M2 density for insertion
VARIABLE maxD_M2  0.8	// M2 density for remove inserted dummy
VARIABLE emptyD_M2 0.001	// M2 density for blank region selection
VARIABLE dm2DM2   0.4	// DM2 to existed dummy metal spacing
VARIABLE Odm2DM2  0.4	// ODM2 to existed dummy metal spacing
VARIABLE wideM2   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM2   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M2_CTMDMY  0.92  // DM2 spacing in CTMDMY 
VARIABLE dm2M2_CTMDMY   0.92  // DM2 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M2_CTMDMY  0.92  // min.DM2 width in CTMDMY
#ELSE
VARIABLE dmS_M2_CTMDMY  0.84  // DM2 spacing in CTMDMY 
VARIABLE dm2M2_CTMDMY   0.84  // DM2 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M2_CTMDMY  0.84  // min.DM2 width in CTMDMY
#ENDIF
#ELSE
#IFDEF 5K_THICK_M2
VARIABLE dmW_M2  0.8		// small DM2 width   
VARIABLE dmL_M2  0.8		// small DM2 length  
VARIABLE dmS_M2  0.4		// small DM2 spacing   
VARIABLE dm2M2   0.6		// small DM2 to real metal spacing 	
VARIABLE dmO_M2  0.1		// offset = space*(1/4)
VARIABLE MdmW_M2 0.8		// middle DM2 width   
VARIABLE MdmL_M2 0.8		// middle DM2 length  
VARIABLE MdmS_M2 0.4		// middle DM2 spacing   
VARIABLE Mdm2M2  0.6		// middle DM2 to real metal spacing 
VARIABLE MdmO_M2 0.1		// offset = space*(1/4)
VARIABLE WdmW_M2 2.0		// large DM2 width   
VARIABLE WdmL_M2 2.0		// large DM2 length  
VARIABLE WdmS_M2 0.8		// large DM2 spacing   
VARIABLE Wdm2M2  5.0		// large DM2 to real metal spacing 	
VARIABLE WdmO_M2 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M2  1.5	// ODM2 max width
VARIABLE maxOdmL_M2  6  	// ODM2 max length
VARIABLE OdmW_M2  0.4	// ODM2 width      
VARIABLE OdmL_M2  1.42	// ODM2 length
VARIABLE OdmS_M2  0.4	// ODM2 space
VARIABLE Odm2M2   0.6	// ODM2 to real metal
VARIABLE OdmO_M2  0.1	// offset = space*(1/4)
VARIABLE minD_M2  0.4	// M2 density for insertion
VARIABLE maxD_M2  0.7	// M2 density for remove inserted dummy
VARIABLE emptyD_M2 0.001	// M2 density for blank region selection
VARIABLE dm2DM2   0.4	// DM2 to existed dummy metal spacing
VARIABLE Odm2DM2  0.4	// ODM2 to existed dummy metal spacing
VARIABLE wideM2   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM2   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM2_301  0.5	// SDM2 width   
VARIABLE LM2_301  0.5	// SDM2 length  
VARIABLE SM2_301  0.3	// SDM2 space   
VARIABLE DM2_301  0.3	// SDM2 to real metal 	
VARIABLE DM245_301  0.4	// SDM2 to 45 degree real metal 	
VARIABLE OM2_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM2V_3011  1	// DM2V max width, 0.5*2  
VARIABLE maxL_DM2V_3011  6  	// DM2V max length
VARIABLE minL_DM2V_3011  0.8	// DM2V min length
VARIABLE WM2_302  0.5	// MDM2 width   
VARIABLE LM2_302  1.2	// MDM2 length  
VARIABLE SM2_302  0.3	// MDM2 space   
VARIABLE DM2_302  0.3	// MDM2 to real metal 	
VARIABLE OM2_302  0.08	// offset = space*(1/4)
VARIABLE WM2_303  2.0	// BDM2 width   
VARIABLE LM2_303  2.0	// BDM2 length 
VARIABLE SM2_303  0.7	// BDM2 space  
VARIABLE DM2_303  1.5	// BDM2 to real metal	
VARIABLE OM2_303  0.2	// offset = space*(1/4)
VARIABLE minWM2_304  0.13	// ODM2 min width      
VARIABLE minLM2_304  0.6	// ODM2 min length
VARIABLE maxWM2_304  0.2	// ODM2 max width
VARIABLE maxLM2_304  6  	// ODM2 max length
VARIABLE SM2_304  0.13	// ODM2 space
VARIABLE DM2_304  0.3	// ODM2 to real metal
VARIABLE DM245_304  0.4	// ODM2 to 45 degree real metal
VARIABLE OM2_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM2_401  0.5	// SDM width   
VARIABLE LM2_401  0.5	// SDM length  
VARIABLE SM2_401  0.3	// SDM space   
VARIABLE DM2_401  0.3	// SDM to real metal 	
VARIABLE OM2_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM2V_4011  1	// DM2V max width, 0.5*2    
VARIABLE maxL_DM2V_4011  6  	// DM2V max length
VARIABLE minL_DM2V_4011  0.8	// DM2V min length
VARIABLE WM2_402  0.5	// MDM width    
VARIABLE LM2_402  1.2	// MDM length   
VARIABLE SM2_402  0.3	// MDM space    
VARIABLE DM2_402  0.3	// MDM to real metal  	
VARIABLE OM2_402  0.08	// offset = space*(1/4)  	
VARIABLE WM2_403  2.0	// BDM width   
VARIABLE LM2_403  2.0	// BDM length  
VARIABLE SM2_403  1.0	// BDM space   
VARIABLE DM2_403  1.5	// BDM to real metal 	
VARIABLE OM2_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM2_501  0.5	// SDM width   
VARIABLE LM2_501  0.5	// SDM length  
VARIABLE SM2_501  0.3	// SDM space   
VARIABLE DM2_501  0.3	// SDM to real metal 	
VARIABLE OM2_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM2V_5011  1	// DM2V max width, 0.5*2    
VARIABLE maxL_DM2V_5011  6  	// DM2V max length
VARIABLE minL_DM2V_5011  0.8	// DM2V min length
VARIABLE WM2_502  0.5	// MDM width   
VARIABLE LM2_502  1.2	// MDM length  
VARIABLE SM2_502  0.5	// MDM space   
VARIABLE DM2_502  0.3	// MDM to real metal 	
VARIABLE OM2_502  0.1	// offset = space*(1/4)  	
VARIABLE WM2_503  2.0	// BDM width    
VARIABLE LM2_503  2.0	// BDM length   
VARIABLE SM2_503  1.4	// BDM space    
VARIABLE DM2_503  1.5	// BDM to real metal  	
VARIABLE OM2_503  0.4	// offset = space*(1/3) 
VARIABLE DM2_S_1  0.3
VARIABLE maxD_M2  0.65	// M2 density for remove inserted dummy
VARIABLE emptyD_M2 0.001	// M2 density for blank region selection
VARIABLE dm2DM2   0.3	// DM2 to existed dummy metal spacing
VARIABLE Odm2DM2  0.3	// ODM2 to existed dummy metal spacing
VARIABLE wideM2   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM2_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM2_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM2_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM2     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM2_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM2_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM2_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM3 variable
#IFDEF 34K_THICK_M3
VARIABLE dmW_M3_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 width   
VARIABLE dmL_M3_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 length  
VARIABLE dmS_M3_ind_1  3		// DM3 spacing for MD inductor 
VARIABLE dmS_M3_ind_2  4.5		// DM3 spacing for HD inductor
VARIABLE dm2M3_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 to real metal spacing 	
VARIABLE dm452M3_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 to real metal spacing 	
VARIABLE dmO_M3_ind_1  dmS_M3_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M3_ind_2  dmS_M3_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M3
VARIABLE dmW_M3_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 width   
VARIABLE dmL_M3_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 length  
VARIABLE dmS_M3_ind_1  0.8		// DM3 spacing for MD inductor
VARIABLE dmS_M3_ind_2  0.9		// DM3 spacing for HD inductor 
VARIABLE dm2M3_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 to real metal spacing 	
VARIABLE dm452M3_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 to real metal spacing 	
VARIABLE dmO_M3_ind_1  dmS_M3_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M3_ind_2  dmS_M3_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M3
VARIABLE dmW_M3_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 width   
VARIABLE dmL_M3_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 length  
VARIABLE dmS_M3_ind_1  0.6		// DM3 spacing for MD inductor
VARIABLE dmS_M3_ind_2  0.7		// DM3 spacing for HD inductor
VARIABLE dm2M3_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 to real metal spacing 	
VARIABLE dm452M3_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM3 to real metal spacing 	
VARIABLE dmO_M3_ind_1  dmS_M3_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M3_ind_2  dmS_M3_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM3 variable
#IFDEF 34K_THICK_M3
VARIABLE dmW_M3  3.0		// small DM3 width   
VARIABLE dmL_M3  3.0		// small DM3 length  
VARIABLE dmS_M3  3.0		// small DM3 spacing   
VARIABLE dm2M3   3.0		// small DM3 to real metal spacing 	
VARIABLE dmO_M3  0.75		// offset = space*(1/4)
VARIABLE MdmW_M3 3.0		// middle DM3 width   
VARIABLE MdmL_M3 3.0		// middle DM3 length  
VARIABLE MdmS_M3 3.0		// middle DM3 spacing   
VARIABLE Mdm2M3  3.0		// middle DM3 to real metal spacing 
VARIABLE MdmO_M3 0.75		// offset = space*(1/4)
VARIABLE WdmW_M3 3.0		// large DM3 width   
VARIABLE WdmL_M3 3.0		// large DM3 length  
VARIABLE WdmS_M3 3.0		// large DM3 spacing   
VARIABLE Wdm2M3  3.0		// large DM3 to real metal spacing 	
VARIABLE WdmO_M3 0.75		// offset = space*(1/4)
VARIABLE minD_M3 0.4		// M3 density for insertion
VARIABLE maxD_M3 0.8		// M3 density for remove inserted dummy
VARIABLE emptyD_M3 0.001	// M3 density for blank region selection
VARIABLE dm2DM3  3.0		// DM3 to existed dummy metal spacing
VARIABLE wideM3  4.5		// wide metal size needs larger space
VARIABLE dm2WM3  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M3
VARIABLE dmW_M3  1.2		// small DM3 width   
VARIABLE dmL_M3  1.2		// small DM3 length  
VARIABLE dmS_M3  0.8		// small DM3 spacing   
VARIABLE dm2M3   0.8		// small DM3 to real metal spacing 	
VARIABLE dmO_M3  0.2		// offset = space*(1/4)
VARIABLE MdmW_M3 1.2		// middle DM3 width   
VARIABLE MdmL_M3 1.2		// middle DM3 length  
VARIABLE MdmS_M3 0.8		// middle DM3 spacing   
VARIABLE Mdm2M3  0.8		// middle DM3 to real metal spacing 
VARIABLE MdmO_M3 0.2		// offset = space*(1/4)
VARIABLE WdmW_M3 2.0		// large DM3 width   
VARIABLE WdmL_M3 2.0		// large DM3 length  
VARIABLE WdmS_M3 0.8		// large DM3 spacing   
VARIABLE Wdm2M3  5.0		// large DM3 to real metal spacing 	
VARIABLE WdmO_M3 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M3  1.5	// ODM3 max width
VARIABLE maxOdmL_M3  6  	// ODM3 max length
VARIABLE OdmW_M3  0.8	// ODM3 width      
VARIABLE OdmL_M3  1.8	// ODM3 length
VARIABLE OdmS_M3  0.8	// ODM3 space
VARIABLE Odm2M3   0.8	// ODM3 to real metal
VARIABLE OdmO_M3  0.2	// offset = space*(1/4)
VARIABLE minD_M3  0.4	// M3 density for insertion
VARIABLE maxD_M3  0.8	// M3 density for remove inserted dummy
VARIABLE emptyD_M3 0.001	// M3 density for blank region selection
VARIABLE dm2DM3   0.8	// DM3 to existed dummy metal spacing
VARIABLE Odm2DM3  0.8	// ODM3 to existed dummy metal spacing
VARIABLE wideM3   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM3   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M3
VARIABLE dmW_M3  0.8		// small DM3 width   
VARIABLE dmL_M3  0.8		// small DM3 length  
VARIABLE dmS_M3  0.4		// small DM3 spacing   
VARIABLE dm2M3   0.6		// small DM3 to real metal spacing 	
VARIABLE dmO_M3  0.1		// offset = space*(1/4)
VARIABLE MdmW_M3 0.8		// middle DM3 width   
VARIABLE MdmL_M3 0.8		// middle DM3 length  
VARIABLE MdmS_M3 0.4		// middle DM3 spacing   
VARIABLE Mdm2M3  0.6		// middle DM3 to real metal spacing 
VARIABLE MdmO_M3 0.1		// offset = space*(1/4)
VARIABLE WdmW_M3 2.0		// large DM3 width   
VARIABLE WdmL_M3 2.0		// large DM3 length  
VARIABLE WdmS_M3 0.8		// large DM3 spacing   
VARIABLE Wdm2M3  5.0		// large DM3 to real metal spacing 	
VARIABLE WdmO_M3 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M3  1.5	// ODM3 max width
VARIABLE maxOdmL_M3  6  	// ODM3 max length
VARIABLE OdmW_M3  0.4	// ODM3 width
VARIABLE OdmL_M3  1.42	// ODM3 length
VARIABLE OdmS_M3  0.4	// ODM3 space
VARIABLE Odm2M3   0.6	// ODM3 to real metal
VARIABLE OdmO_M3  0.1	// offset = space*(1/4)
VARIABLE minD_M3  0.4	// M3 density for insertion
VARIABLE maxD_M3  0.8	// M3 density for remove inserted dummy
VARIABLE emptyD_M3 0.001	// M3 density for blank region selection
VARIABLE dm2DM3   0.4	// DM3 to existed dummy metal spacing
VARIABLE Odm2DM3  0.4	// ODM3 to existed dummy metal spacing
VARIABLE wideM3   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM3   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M3_CTMDMY  0.92  // DM3 spacing in CTMDMY 
VARIABLE dm2M3_CTMDMY   0.92  // DM3 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M3_CTMDMY  0.92  // min.DM3 width in CTMDMY
#ELSE
VARIABLE dmS_M3_CTMDMY  0.84  // DM3 spacing in CTMDMY 
VARIABLE dm2M3_CTMDMY   0.84  // DM3 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M3_CTMDMY  0.84  // min.DM3 width in CTMDMY
#ENDIF
VARIABLE dmS_M3_TFRDMY 0.84  //DM3 spacing in TFRDUMMY
VARIABLE dmO_M3_TFRDMY 0.21  //offset = space *(1/4)
VARIABLE dm2M3_TFRDMY 0.84   //DM3 to real metal spacing in TFRDUMMY
VARIABLE dmW_M3_TFRDMY 0.84  //DM3 width in TFRDUMMY
VARIABLE dmL_M3_TFRDMY 0.84  //DM3 length in TFRDUMMY
VARIABLE maxD_M3_TFRDMY 0.7  //M3 density in TFRDUMMY for remove inserted dummy metal
VARIABLE minD_M3_TFRDMY 0.5  //M3 density in TFRDUMMY for insertion
#ELSE
#IFDEF 5K_THICK_M3
VARIABLE dmW_M3  0.8		// small DM3 width   
VARIABLE dmL_M3  0.8		// small DM3 length  
VARIABLE dmS_M3  0.4		// small DM3 spacing   
VARIABLE dm2M3   0.6		// small DM3 to real metal spacing 	
VARIABLE dmO_M3  0.1		// offset = space*(1/4)
VARIABLE MdmW_M3 0.8		// middle DM3 width   
VARIABLE MdmL_M3 0.8		// middle DM3 length  
VARIABLE MdmS_M3 0.4		// middle DM3 spacing   
VARIABLE Mdm2M3  0.6		// middle DM3 to real metal spacing 
VARIABLE MdmO_M3 0.1		// offset = space*(1/4)
VARIABLE WdmW_M3 2.0		// large DM3 width   
VARIABLE WdmL_M3 2.0		// large DM3 length  
VARIABLE WdmS_M3 0.8		// large DM3 spacing   
VARIABLE Wdm2M3  5.0		// large DM3 to real metal spacing 	
VARIABLE WdmO_M3 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M3  1.5	// ODM3 max width
VARIABLE maxOdmL_M3  6  	// ODM3 max length
VARIABLE OdmW_M3  0.4	// ODM3 width      
VARIABLE OdmL_M3  1.42	// ODM3 length
VARIABLE OdmS_M3  0.4	// ODM3 space
VARIABLE Odm2M3   0.6	// ODM3 to real metal
VARIABLE OdmO_M3  0.1	// offset = space*(1/4)
VARIABLE minD_M3  0.4	// M3 density for insertion
VARIABLE maxD_M3  0.7	// M3 density for remove inserted dummy
VARIABLE emptyD_M3 0.001	// M3 density for blank region selection
VARIABLE dm2DM3   0.4	// DM3 to existed dummy metal spacing
VARIABLE Odm2DM3  0.4	// ODM3 to existed dummy metal spacing
VARIABLE wideM3   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM3   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM3_301  0.5	// SDM3 width   
VARIABLE LM3_301  0.5	// SDM3 length  
VARIABLE SM3_301  0.3	// SDM3 space   
VARIABLE DM3_301  0.3	// SDM3 to real metal 	
VARIABLE DM345_301  0.4	// SDM3 to 45 degree real metal 	
VARIABLE OM3_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM3V_3011  1	// DM3V max width, 0.5*2  
VARIABLE maxL_DM3V_3011  6  	// DM3V max length
VARIABLE minL_DM3V_3011  0.8	// DM3V min length
VARIABLE WM3_302  1.2	// MDM3 width   
VARIABLE LM3_302  0.5	// MDM3 length
VARIABLE SM3_302  0.3	// MDM3 space   
VARIABLE DM3_302  0.3	// MDM3 to real metal 	
VARIABLE OM3_302  0.08	// offset = space*(1/4)
VARIABLE WM3_303  2.0	// BDM3 width   
VARIABLE LM3_303  2.0	// BDM3 length 
VARIABLE SM3_303  0.7	// BDM3 space  
VARIABLE DM3_303  1.5	// BDM3 to real metal	
VARIABLE OM3_303  0.2	// offset = space*(1/4)
VARIABLE minWM3_304  0.13	// ODM3 min width      
VARIABLE minLM3_304  0.6	// ODM3 min length
VARIABLE maxWM3_304  0.2	// ODM3 max width
VARIABLE maxLM3_304  6  	// ODM3 max length
VARIABLE SM3_304  0.13	// ODM3 space
VARIABLE DM3_304  0.3	// ODM3 to real metal
VARIABLE DM345_304  0.4	// ODM3 to 45 degree real metal
VARIABLE OM3_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM3_401  0.5	// SDM width   
VARIABLE LM3_401  0.5	// SDM length  
VARIABLE SM3_401  0.3	// SDM space   
VARIABLE DM3_401  0.3	// SDM to real metal 	
VARIABLE OM3_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM3V_4011  1	// DM3V max width, 0.5*2    
VARIABLE maxL_DM3V_4011  6  	// DM3V max length
VARIABLE minL_DM3V_4011  0.8	// DM3V min length
VARIABLE WM3_402  1.2	// MDM width    
VARIABLE LM3_402  0.5	// MDM length 
VARIABLE SM3_402  0.3	// MDM space    
VARIABLE DM3_402  0.3	// MDM to real metal  	
VARIABLE OM3_402  0.08	// offset = space*(1/4)  	
VARIABLE WM3_403  2.0	// BDM width   
VARIABLE LM3_403  2.0	// BDM length  
VARIABLE SM3_403  1.0	// BDM space   
VARIABLE DM3_403  1.5	// BDM to real metal 	
VARIABLE OM3_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM3_501  0.5	// SDM width   
VARIABLE LM3_501  0.5	// SDM length  
VARIABLE SM3_501  0.3	// SDM space   
VARIABLE DM3_501  0.3	// SDM to real metal 	
VARIABLE OM3_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM3V_5011  1	// DM3V max width, 0.5*2    
VARIABLE maxL_DM3V_5011  6  	// DM3V max length
VARIABLE minL_DM3V_5011  0.8	// DM3V min length
VARIABLE WM3_502  1.2	// MDM width   
VARIABLE LM3_502  0.5	// MDM length 
VARIABLE SM3_502  0.5	// MDM space   
VARIABLE DM3_502  0.3	// MDM to real metal 	
VARIABLE OM3_502  0.1	// offset = space*(1/4)  	
VARIABLE WM3_503  2.0	// BDM width    
VARIABLE LM3_503  2.0	// BDM length   
VARIABLE SM3_503  1.4	// BDM space    
VARIABLE DM3_503  1.5	// BDM to real metal  	
VARIABLE OM3_503  0.4	// offset = space*(1/3) 
VARIABLE DM3_S_1  0.3
VARIABLE maxD_M3  0.65	// M3 density for remove inserted dummy
VARIABLE emptyD_M3 0.001	// M3 density for blank region selection
VARIABLE dm2DM3   0.3	// DM3 to existed dummy metal spacing
VARIABLE Odm2DM3  0.3	// ODM3 to existed dummy metal spacing
VARIABLE wideM3   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM3_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM3_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM3_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM3     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM3_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM3_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM3_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM4 variable
#IFDEF 34K_THICK_M4
VARIABLE dmW_M4_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 width   
VARIABLE dmL_M4_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 length  
VARIABLE dmS_M4_ind_1  3		// DM4 spacing for MD inductor 
VARIABLE dmS_M4_ind_2  4.5		// DM4 spacing for HD inductor
VARIABLE dm2M4_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 to real metal spacing 	
VARIABLE dm452M4_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 to real metal spacing 	
VARIABLE dmO_M4_ind_1  dmS_M4_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M4_ind_2  dmS_M4_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M4
VARIABLE dmW_M4_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 width   
VARIABLE dmL_M4_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 length  
VARIABLE dmS_M4_ind_1  0.8		// DM4 spacing for MD inductor
VARIABLE dmS_M4_ind_2  0.9		// DM4 spacing for HD inductor 
VARIABLE dm2M4_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 to real metal spacing 	
VARIABLE dm452M4_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 to real metal spacing 	
VARIABLE dmO_M4_ind_1  dmS_M4_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M4_ind_2  dmS_M4_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M4
VARIABLE dmW_M4_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 width   
VARIABLE dmL_M4_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 length  
VARIABLE dmS_M4_ind_1  0.6		// DM4 spacing for MD inductor
VARIABLE dmS_M4_ind_2  0.7		// DM4 spacing for HD inductor
VARIABLE dm2M4_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 to real metal spacing 	
VARIABLE dm452M4_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM4 to real metal spacing 	
VARIABLE dmO_M4_ind_1  dmS_M4_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M4_ind_2  dmS_M4_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM4 variable
#IFDEF 34K_THICK_M4
VARIABLE dmW_M4  3.0		// small DM4 width   
VARIABLE dmL_M4  3.0		// small DM4 length  
VARIABLE dmS_M4  3.0		// small DM4 spacing   
VARIABLE dm2M4   3.0		// small DM4 to real metal spacing 	
VARIABLE dmO_M4  0.75		// offset = space*(1/4)
VARIABLE MdmW_M4 3.0		// middle DM4 width   
VARIABLE MdmL_M4 3.0		// middle DM4 length  
VARIABLE MdmS_M4 3.0		// middle DM4 spacing   
VARIABLE Mdm2M4  3.0		// middle DM4 to real metal spacing 
VARIABLE MdmO_M4 0.75		// offset = space*(1/4)
VARIABLE WdmW_M4 3.0		// large DM4 width   
VARIABLE WdmL_M4 3.0		// large DM4 length  
VARIABLE WdmS_M4 3.0		// large DM4 spacing   
VARIABLE Wdm2M4  3.0		// large DM4 to real metal spacing 	
VARIABLE WdmO_M4 0.75		// offset = space*(1/4)
VARIABLE minD_M4 0.4		// M4 density for insertion
VARIABLE maxD_M4 0.8		// M4 density for remove inserted dummy
VARIABLE emptyD_M4 0.001	// M4 density for blank region selection
VARIABLE dm2DM4  3.0		// DM4 to existed dummy metal spacing
VARIABLE wideM4  4.5		// wide metal size needs larger space
VARIABLE dm2WM4  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M4
VARIABLE dmW_M4  1.2		// small DM4 width   
VARIABLE dmL_M4  1.2		// small DM4 length  
VARIABLE dmS_M4  0.8		// small DM4 spacing   
VARIABLE dm2M4   0.8		// small DM4 to real metal spacing 	
VARIABLE dmO_M4  0.2		// offset = space*(1/4)
VARIABLE MdmW_M4 1.2		// middle DM4 width   
VARIABLE MdmL_M4 1.2		// middle DM4 length  
VARIABLE MdmS_M4 0.8		// middle DM4 spacing   
VARIABLE Mdm2M4  0.8		// middle DM4 to real metal spacing 
VARIABLE MdmO_M4 0.2		// offset = space*(1/4)
VARIABLE WdmW_M4 2.0		// large DM4 width   
VARIABLE WdmL_M4 2.0		// large DM4 length  
VARIABLE WdmS_M4 0.8		// large DM4 spacing   
VARIABLE Wdm2M4  5.0		// large DM4 to real metal spacing 	
VARIABLE WdmO_M4 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M4  1.5	// ODM4 max width
VARIABLE maxOdmL_M4  6  	// ODM4 max length
VARIABLE OdmW_M4  0.8	// ODM4 width      
VARIABLE OdmL_M4  1.8	// ODM4 length
VARIABLE OdmS_M4  0.8	// ODM4 space
VARIABLE Odm2M4   0.8	// ODM4 to real metal
VARIABLE OdmO_M4  0.2	// offset = space*(1/4)
VARIABLE minD_M4  0.4	// M4 density for insertion
VARIABLE maxD_M4  0.8	// M4 density for remove inserted dummy
VARIABLE emptyD_M4 0.001	// M4 density for blank region selection
VARIABLE dm2DM4   0.8	// DM4 to existed dummy metal spacing
VARIABLE Odm2DM4  0.8	// ODM4 to existed dummy metal spacing
VARIABLE wideM4   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM4   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M4
VARIABLE dmW_M4  0.8		// small DM4 width   
VARIABLE dmL_M4  0.8		// small DM4 length  
VARIABLE dmS_M4  0.4		// small DM4 spacing   
VARIABLE dm2M4   0.6		// small DM4 to real metal spacing 	
VARIABLE dmO_M4  0.1		// offset = space*(1/4)
VARIABLE MdmW_M4 0.8		// middle DM4 width   
VARIABLE MdmL_M4 0.8		// middle DM4 length  
VARIABLE MdmS_M4 0.4		// middle DM4 spacing   
VARIABLE Mdm2M4  0.6		// middle DM4 to real metal spacing 
VARIABLE MdmO_M4 0.1		// offset = space*(1/4)
VARIABLE WdmW_M4 2.0		// large DM4 width   
VARIABLE WdmL_M4 2.0		// large DM4 length  
VARIABLE WdmS_M4 0.8		// large DM4 spacing   
VARIABLE Wdm2M4  5.0		// large DM4 to real metal spacing 	
VARIABLE WdmO_M4 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M4  1.5	// ODM4 max width
VARIABLE maxOdmL_M4  6  	// ODM4 max length
VARIABLE OdmW_M4  0.4	// ODM4 width
VARIABLE OdmL_M4  1.42	// ODM4 length
VARIABLE OdmS_M4  0.4	// ODM4 space
VARIABLE Odm2M4   0.6	// ODM4 to real metal
VARIABLE OdmO_M4  0.1	// offset = space*(1/4)
VARIABLE minD_M4  0.4	// M4 density for insertion
VARIABLE maxD_M4  0.8	// M4 density for remove inserted dummy
VARIABLE emptyD_M4 0.001	// M4 density for blank region selection
VARIABLE dm2DM4   0.4	// DM4 to existed dummy metal spacing
VARIABLE Odm2DM4  0.4	// ODM4 to existed dummy metal spacing
VARIABLE wideM4   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM4   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M4_CTMDMY  0.92  // DM4 spacing in CTMDMY 
VARIABLE dm2M4_CTMDMY   0.92  // DM4 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M4_CTMDMY  0.92  // min.DM4 width in CTMDMY
#ELSE
VARIABLE dmS_M4_CTMDMY  0.84  // DM4 spacing in CTMDMY 
VARIABLE dm2M4_CTMDMY   0.84  // DM4 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M4_CTMDMY  0.84  // min.DM4 width in CTMDMY
#ENDIF
VARIABLE dmS_M4_TFRDMY 0.84  //DM4 spacing in TFRDUMMY
VARIABLE dmO_M4_TFRDMY 0.21  //offset = space *(1/4)
VARIABLE dm2M4_TFRDMY 0.84   //DM4 to real metal spacing in TFRDUMMY
VARIABLE dmW_M4_TFRDMY 0.84  //DM4 width in TFRDUMMY
VARIABLE dmL_M4_TFRDMY 0.84  //DM4 length in TFRDUMMY
VARIABLE maxD_M4_TFRDMY 0.7  //M4 density in TFRDUMMY for remove inserted dummy metal
VARIABLE minD_M4_TFRDMY 0.5  //M4 density in TFRDUMMY for insertion
#ELSE
#IFDEF 5K_THICK_M4
VARIABLE dmW_M4  0.8		// small DM4 width   
VARIABLE dmL_M4  0.8		// small DM4 length  
VARIABLE dmS_M4  0.4		// small DM4 spacing   
VARIABLE dm2M4   0.6		// small DM4 to real metal spacing 	
VARIABLE dmO_M4  0.1		// offset = space*(1/4)
VARIABLE MdmW_M4 0.8		// middle DM4 width   
VARIABLE MdmL_M4 0.8		// middle DM4 length  
VARIABLE MdmS_M4 0.4		// middle DM4 spacing   
VARIABLE Mdm2M4  0.6		// middle DM4 to real metal spacing 
VARIABLE MdmO_M4 0.1		// offset = space*(1/4)
VARIABLE WdmW_M4 2.0		// large DM4 width   
VARIABLE WdmL_M4 2.0		// large DM4 length  
VARIABLE WdmS_M4 0.8		// large DM4 spacing   
VARIABLE Wdm2M4  5.0		// large DM4 to real metal spacing 	
VARIABLE WdmO_M4 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M4  1.5	// ODM4 max width
VARIABLE maxOdmL_M4  6  	// ODM4 max length
VARIABLE OdmW_M4  0.4	// ODM4 width      
VARIABLE OdmL_M4  1.42	// ODM4 length
VARIABLE OdmS_M4  0.4	// ODM4 space
VARIABLE Odm2M4   0.6	// ODM4 to real metal
VARIABLE OdmO_M4  0.1	// offset = space*(1/4)
VARIABLE minD_M4  0.4	// M4 density for insertion
VARIABLE maxD_M4  0.7	// M4 density for remove inserted dummy
VARIABLE emptyD_M4 0.001	// M4 density for blank region selection
VARIABLE dm2DM4   0.4	// DM4 to existed dummy metal spacing
VARIABLE Odm2DM4  0.4	// ODM4 to existed dummy metal spacing
VARIABLE wideM4   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM4   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM4_301  0.5	// SDM4 width   
VARIABLE LM4_301  0.5	// SDM4 length  
VARIABLE SM4_301  0.3	// SDM4 space   
VARIABLE DM4_301  0.3	// SDM4 to real metal 	
VARIABLE DM445_301  0.4	// SDM4 to 45 degree real metal 	
VARIABLE OM4_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM4V_3011  1	// DM4V max width, 0.5*2  
VARIABLE maxL_DM4V_3011  6  	// DM4V max length
VARIABLE minL_DM4V_3011  0.8	// DM4V min length
VARIABLE WM4_302  0.5	// MDM4 width   
VARIABLE LM4_302  1.2	// MDM4 length  
VARIABLE SM4_302  0.3	// MDM4 space   
VARIABLE DM4_302  0.3	// MDM4 to real metal 	
VARIABLE OM4_302  0.08	// offset = space*(1/4)
VARIABLE WM4_303  2.0	// BDM4 width   
VARIABLE LM4_303  2.0	// BDM4 length 
VARIABLE SM4_303  0.7	// BDM4 space  
VARIABLE DM4_303  1.5	// BDM4 to real metal	
VARIABLE OM4_303  0.2	// offset = space*(1/4)
VARIABLE minWM4_304  0.13	// ODM4 min width      
VARIABLE minLM4_304  0.6	// ODM4 min length
VARIABLE maxWM4_304  0.2	// ODM4 max width
VARIABLE maxLM4_304  6  	// ODM4 max length
VARIABLE SM4_304  0.13	// ODM4 space
VARIABLE DM4_304  0.3	// ODM4 to real metal
VARIABLE DM445_304  0.4	// ODM4 to 45 degree real metal
VARIABLE OM4_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM4_401  0.5	// SDM width   
VARIABLE LM4_401  0.5	// SDM length  
VARIABLE SM4_401  0.3	// SDM space   
VARIABLE DM4_401  0.3	// SDM to real metal 	
VARIABLE OM4_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM4V_4011  1	// DM4V max width, 0.5*2    
VARIABLE maxL_DM4V_4011  6  	// DM4V max length
VARIABLE minL_DM4V_4011  0.8	// DM4V min length
VARIABLE WM4_402  0.5	// MDM width    
VARIABLE LM4_402  1.2	// MDM length   
VARIABLE SM4_402  0.3	// MDM space    
VARIABLE DM4_402  0.3	// MDM to real metal  	
VARIABLE OM4_402  0.08	// offset = space*(1/4)  	
VARIABLE WM4_403  2.0	// BDM width   
VARIABLE LM4_403  2.0	// BDM length  
VARIABLE SM4_403  1.0	// BDM space   
VARIABLE DM4_403  1.5	// BDM to real metal 	
VARIABLE OM4_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM4_501  0.5	// SDM width   
VARIABLE LM4_501  0.5	// SDM length  
VARIABLE SM4_501  0.3	// SDM space   
VARIABLE DM4_501  0.3	// SDM to real metal 	
VARIABLE OM4_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM4V_5011  1	// DM4V max width, 0.5*2    
VARIABLE maxL_DM4V_5011  6  	// DM4V max length
VARIABLE minL_DM4V_5011  0.8	// DM4V min length
VARIABLE WM4_502  0.5	// MDM width   
VARIABLE LM4_502  1.2	// MDM length  
VARIABLE SM4_502  0.5	// MDM space   
VARIABLE DM4_502  0.3	// MDM to real metal 	
VARIABLE OM4_502  0.1	// offset = space*(1/4)  	
VARIABLE WM4_503  2.0	// BDM width    
VARIABLE LM4_503  2.0	// BDM length   
VARIABLE SM4_503  1.4	// BDM space    
VARIABLE DM4_503  1.5	// BDM to real metal  	
VARIABLE OM4_503  0.4	// offset = space*(1/3) 
VARIABLE DM4_S_1  0.3
VARIABLE maxD_M4  0.65	// M4 density for remove inserted dummy
VARIABLE emptyD_M4 0.001	// M4 density for blank region selection
VARIABLE dm2DM4   0.3	// DM4 to existed dummy metal spacing
VARIABLE Odm2DM4  0.3	// ODM4 to existed dummy metal spacing
VARIABLE wideM4   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM4_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM4_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM4_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM4     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM4_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM4_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM4_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM5 variable
#IFDEF 34K_THICK_M5
VARIABLE dmW_M5_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 width   
VARIABLE dmL_M5_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 length  
VARIABLE dmS_M5_ind_1  3		// DM5 spacing for MD inductor 
VARIABLE dmS_M5_ind_2  4.5		// DM5 spacing for HD inductor
VARIABLE dm2M5_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 to real metal spacing 	
VARIABLE dm452M5_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 to real metal spacing 	
VARIABLE dmO_M5_ind_1  dmS_M5_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M5_ind_2  dmS_M5_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M5
VARIABLE dmW_M5_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 width   
VARIABLE dmL_M5_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 length  
VARIABLE dmS_M5_ind_1  0.8		// DM5 spacing for MD inductor
VARIABLE dmS_M5_ind_2  0.9		// DM5 spacing for HD inductor 
VARIABLE dm2M5_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 to real metal spacing 	
VARIABLE dm452M5_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 to real metal spacing 	
VARIABLE dmO_M5_ind_1  dmS_M5_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M5_ind_2  dmS_M5_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M5
VARIABLE dmW_M5_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 width   
VARIABLE dmL_M5_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 length  
VARIABLE dmS_M5_ind_1  0.6		// DM5 spacing for MD inductor
VARIABLE dmS_M5_ind_2  0.7		// DM5 spacing for HD inductor
VARIABLE dm2M5_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 to real metal spacing 	
VARIABLE dm452M5_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM5 to real metal spacing 	
VARIABLE dmO_M5_ind_1  dmS_M5_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M5_ind_2  dmS_M5_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM5 variable
#IFDEF 34K_THICK_M5
VARIABLE dmW_M5  3.0		// small DM5 width   
VARIABLE dmL_M5  3.0		// small DM5 length  
VARIABLE dmS_M5  3.0		// small DM5 spacing   
VARIABLE dm2M5   3.0		// small DM5 to real metal spacing 	
VARIABLE dmO_M5  0.75		// offset = space*(1/4)
VARIABLE MdmW_M5 3.0		// middle DM5 width   
VARIABLE MdmL_M5 3.0		// middle DM5 length  
VARIABLE MdmS_M5 3.0		// middle DM5 spacing   
VARIABLE Mdm2M5  3.0		// middle DM5 to real metal spacing 
VARIABLE MdmO_M5 0.75		// offset = space*(1/4)
VARIABLE WdmW_M5 3.0		// large DM5 width   
VARIABLE WdmL_M5 3.0		// large DM5 length  
VARIABLE WdmS_M5 3.0		// large DM5 spacing   
VARIABLE Wdm2M5  3.0		// large DM5 to real metal spacing 	
VARIABLE WdmO_M5 0.75		// offset = space*(1/4)
VARIABLE minD_M5 0.4		// M5 density for insertion
VARIABLE maxD_M5 0.8		// M5 density for remove inserted dummy
VARIABLE emptyD_M5 0.001	// M5 density for blank region selection
VARIABLE dm2DM5  3.0		// DM5 to existed dummy metal spacing
VARIABLE wideM5  4.5		// wide metal size needs larger space
VARIABLE dm2WM5  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M5
VARIABLE dmW_M5  1.2		// small DM5 width   
VARIABLE dmL_M5  1.2		// small DM5 length  
VARIABLE dmS_M5  0.8		// small DM5 spacing   
VARIABLE dm2M5   0.8		// small DM5 to real metal spacing 	
VARIABLE dmO_M5  0.2		// offset = space*(1/4)
VARIABLE MdmW_M5 1.2		// middle DM5 width   
VARIABLE MdmL_M5 1.2		// middle DM5 length  
VARIABLE MdmS_M5 0.8		// middle DM5 spacing   
VARIABLE Mdm2M5  0.8		// middle DM5 to real metal spacing 
VARIABLE MdmO_M5 0.2		// offset = space*(1/4)
VARIABLE WdmW_M5 2.0		// large DM5 width   
VARIABLE WdmL_M5 2.0		// large DM5 length  
VARIABLE WdmS_M5 0.8		// large DM5 spacing   
VARIABLE Wdm2M5  5.0		// large DM5 to real metal spacing 	
VARIABLE WdmO_M5 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M5  1.5	// ODM5 max width
VARIABLE maxOdmL_M5  6  	// ODM5 max length
VARIABLE OdmW_M5  0.8	// ODM5 width      
VARIABLE OdmL_M5  1.8	// ODM5 length
VARIABLE OdmS_M5  0.8	// ODM5 space
VARIABLE Odm2M5   0.8	// ODM5 to real metal
VARIABLE OdmO_M5  0.2	// offset = space*(1/4)
VARIABLE minD_M5  0.4	// M5 density for insertion
VARIABLE maxD_M5  0.8	// M5 density for remove inserted dummy
VARIABLE emptyD_M5 0.001	// M5 density for blank region selection
VARIABLE dm2DM5   0.8	// DM5 to existed dummy metal spacing
VARIABLE Odm2DM5  0.8	// ODM5 to existed dummy metal spacing
VARIABLE wideM5   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM5   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M5
VARIABLE dmW_M5  0.8		// small DM5 width   
VARIABLE dmL_M5  0.8		// small DM5 length  
VARIABLE dmS_M5  0.4		// small DM5 spacing   
VARIABLE dm2M5   0.6		// small DM5 to real metal spacing 	
VARIABLE dmO_M5  0.1		// offset = space*(1/4)
VARIABLE MdmW_M5 0.8		// middle DM5 width   
VARIABLE MdmL_M5 0.8		// middle DM5 length  
VARIABLE MdmS_M5 0.4		// middle DM5 spacing   
VARIABLE Mdm2M5  0.6		// middle DM5 to real metal spacing 
VARIABLE MdmO_M5 0.1		// offset = space*(1/4)
VARIABLE WdmW_M5 2.0		// large DM5 width   
VARIABLE WdmL_M5 2.0		// large DM5 length  
VARIABLE WdmS_M5 0.8		// large DM5 spacing   
VARIABLE Wdm2M5  5.0		// large DM5 to real metal spacing 	
VARIABLE WdmO_M5 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M5  1.5	// ODM5 max width
VARIABLE maxOdmL_M5  6  	// ODM5 max length
VARIABLE OdmW_M5  0.4	// ODM5 width
VARIABLE OdmL_M5  1.42	// ODM5 length
VARIABLE OdmS_M5  0.4	// ODM5 space
VARIABLE Odm2M5   0.6	// ODM5 to real metal
VARIABLE OdmO_M5  0.1	// offset = space*(1/4)
VARIABLE minD_M5  0.4	// M5 density for insertion
VARIABLE maxD_M5  0.8	// M5 density for remove inserted dummy
VARIABLE emptyD_M5 0.001	// M5 density for blank region selection
VARIABLE dm2DM5   0.4	// DM5 to existed dummy metal spacing
VARIABLE Odm2DM5  0.4	// ODM5 to existed dummy metal spacing
VARIABLE wideM5   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM5   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M5_CTMDMY  0.92  // DM5 spacing in CTMDMY 
VARIABLE dm2M5_CTMDMY   0.92  // DM5 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M5_CTMDMY  0.92  // min.DM5 width in CTMDMY
#ELSE
VARIABLE dmS_M5_CTMDMY  0.84  // DM5 spacing in CTMDMY 
VARIABLE dm2M5_CTMDMY   0.84  // DM5 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M5_CTMDMY  0.84  // min.DM5 width in CTMDMY
#ENDIF
VARIABLE dmS_M5_TFRDMY 0.84  //DM5 spacing in TFRDUMMY
VARIABLE dmO_M5_TFRDMY 0.21  //offset = space *(1/4)
VARIABLE dm2M5_TFRDMY 0.84   //DM5 to real metal spacing in TFRDUMMY
VARIABLE dmW_M5_TFRDMY 0.84  //DM5 width in TFRDUMMY
VARIABLE dmL_M5_TFRDMY 0.84  //DM5 length in TFRDUMMY
VARIABLE maxD_M5_TFRDMY 0.7  //M5 density in TFRDUMMY for remove inserted dummy metal
VARIABLE minD_M5_TFRDMY 0.5  //M5 density in TFRDUMMY for insertion
#ELSE
#IFDEF 5K_THICK_M5
VARIABLE dmW_M5  0.8		// small DM5 width   
VARIABLE dmL_M5  0.8		// small DM5 length  
VARIABLE dmS_M5  0.4		// small DM5 spacing   
VARIABLE dm2M5   0.6		// small DM5 to real metal spacing 	
VARIABLE dmO_M5  0.1		// offset = space*(1/4)
VARIABLE MdmW_M5 0.8		// middle DM5 width   
VARIABLE MdmL_M5 0.8		// middle DM5 length  
VARIABLE MdmS_M5 0.4		// middle DM5 spacing   
VARIABLE Mdm2M5  0.6		// middle DM5 to real metal spacing 
VARIABLE MdmO_M5 0.1		// offset = space*(1/4)
VARIABLE WdmW_M5 2.0		// large DM5 width   
VARIABLE WdmL_M5 2.0		// large DM5 length  
VARIABLE WdmS_M5 0.8		// large DM5 spacing   
VARIABLE Wdm2M5  5.0		// large DM5 to real metal spacing 	
VARIABLE WdmO_M5 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M5  1.5	// ODM5 max width
VARIABLE maxOdmL_M5  6  	// ODM5 max length
VARIABLE OdmW_M5  0.4	// ODM5 width      
VARIABLE OdmL_M5  1.42	// ODM5 length
VARIABLE OdmS_M5  0.4	// ODM5 space
VARIABLE Odm2M5   0.6	// ODM5 to real metal
VARIABLE OdmO_M5  0.1	// offset = space*(1/4)
VARIABLE minD_M5  0.4	// M5 density for insertion
VARIABLE maxD_M5  0.7	// M5 density for remove inserted dummy
VARIABLE emptyD_M5 0.001	// M5 density for blank region selection
VARIABLE dm2DM5   0.4	// DM5 to existed dummy metal spacing
VARIABLE Odm2DM5  0.4	// ODM5 to existed dummy metal spacing
VARIABLE wideM5   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM5   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM5_301  0.5	// SDM5 width   
VARIABLE LM5_301  0.5	// SDM5 length  
VARIABLE SM5_301  0.3	// SDM5 space   
VARIABLE DM5_301  0.3	// SDM5 to real metal 	
VARIABLE DM545_301  0.4	// SDM5 to 45 degree real metal 	
VARIABLE OM5_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM5V_3011  1	// DM5V max width, 0.5*2  
VARIABLE maxL_DM5V_3011  6  	// DM5V max length
VARIABLE minL_DM5V_3011  0.8	// DM5V min length
VARIABLE WM5_302  1.2	// MDM5 width   
VARIABLE LM5_302  0.5	// MDM5 length
VARIABLE SM5_302  0.3	// MDM5 space   
VARIABLE DM5_302  0.3	// MDM5 to real metal 	
VARIABLE OM5_302  0.08	// offset = space*(1/4)
VARIABLE WM5_303  2.0	// BDM5 width   
VARIABLE LM5_303  2.0	// BDM5 length 
VARIABLE SM5_303  0.7	// BDM5 space  
VARIABLE DM5_303  1.5	// BDM5 to real metal	
VARIABLE OM5_303  0.2	// offset = space*(1/4)
VARIABLE minWM5_304  0.13	// ODM5 min width      
VARIABLE minLM5_304  0.6	// ODM5 min length
VARIABLE maxWM5_304  0.2	// ODM5 max width
VARIABLE maxLM5_304  6  	// ODM5 max length
VARIABLE SM5_304  0.13	// ODM5 space
VARIABLE DM5_304  0.3	// ODM5 to real metal
VARIABLE DM545_304  0.4	// ODM5 to 45 degree real metal
VARIABLE OM5_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM5_401  0.5	// SDM width   
VARIABLE LM5_401  0.5	// SDM length  
VARIABLE SM5_401  0.3	// SDM space   
VARIABLE DM5_401  0.3	// SDM to real metal 	
VARIABLE OM5_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM5V_4011  1	// DM5V max width, 0.5*2    
VARIABLE maxL_DM5V_4011  6  	// DM5V max length
VARIABLE minL_DM5V_4011  0.8	// DM5V min length
VARIABLE WM5_402  1.2	// MDM width    
VARIABLE LM5_402  0.5	// MDM length 
VARIABLE SM5_402  0.3	// MDM space    
VARIABLE DM5_402  0.3	// MDM to real metal  	
VARIABLE OM5_402  0.08	// offset = space*(1/4)  	
VARIABLE WM5_403  2.0	// BDM width   
VARIABLE LM5_403  2.0	// BDM length  
VARIABLE SM5_403  1.0	// BDM space   
VARIABLE DM5_403  1.5	// BDM to real metal 	
VARIABLE OM5_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM5_501  0.5	// SDM width   
VARIABLE LM5_501  0.5	// SDM length  
VARIABLE SM5_501  0.3	// SDM space   
VARIABLE DM5_501  0.3	// SDM to real metal 	
VARIABLE OM5_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM5V_5011  1	// DM5V max width, 0.5*2    
VARIABLE maxL_DM5V_5011  6  	// DM5V max length
VARIABLE minL_DM5V_5011  0.8	// DM5V min length
VARIABLE WM5_502  1.2	// MDM width   
VARIABLE LM5_502  0.5	// MDM length 
VARIABLE SM5_502  0.5	// MDM space   
VARIABLE DM5_502  0.3	// MDM to real metal 	
VARIABLE OM5_502  0.1	// offset = space*(1/4)  	
VARIABLE WM5_503  2.0	// BDM width    
VARIABLE LM5_503  2.0	// BDM length   
VARIABLE SM5_503  1.4	// BDM space    
VARIABLE DM5_503  1.5	// BDM to real metal  	
VARIABLE OM5_503  0.4	// offset = space*(1/3) 
VARIABLE DM5_S_1  0.3
VARIABLE maxD_M5  0.65	// M5 density for remove inserted dummy
VARIABLE emptyD_M5 0.001	// M5 density for blank region selection
VARIABLE dm2DM5   0.3	// DM5 to existed dummy metal spacing
VARIABLE Odm2DM5  0.3	// ODM5 to existed dummy metal spacing
VARIABLE wideM5   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM5_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM5_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM5_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM5     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM5_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM5_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM5_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM6 variable
#IFDEF 34K_THICK_M6
VARIABLE dmW_M6_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 width   
VARIABLE dmL_M6_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 length  
VARIABLE dmS_M6_ind_1  3		// DM6 spacing for MD inductor 
VARIABLE dmS_M6_ind_2  4.5		// DM6 spacing for HD inductor
VARIABLE dm2M6_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 to real metal spacing 	
VARIABLE dm452M6_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 to real metal spacing 	
VARIABLE dmO_M6_ind_1  dmS_M6_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M6_ind_2  dmS_M6_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M6
VARIABLE dmW_M6_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 width   
VARIABLE dmL_M6_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 length  
VARIABLE dmS_M6_ind_1  0.8		// DM6 spacing for MD inductor
VARIABLE dmS_M6_ind_2  0.9		// DM6 spacing for HD inductor 
VARIABLE dm2M6_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 to real metal spacing 	
VARIABLE dm452M6_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 to real metal spacing 	
VARIABLE dmO_M6_ind_1  dmS_M6_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M6_ind_2  dmS_M6_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M6
VARIABLE dmW_M6_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 width   
VARIABLE dmL_M6_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 length  
VARIABLE dmS_M6_ind_1  0.6		// DM6 spacing for MD inductor
VARIABLE dmS_M6_ind_2  0.7		// DM6 spacing for HD inductor
VARIABLE dm2M6_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 to real metal spacing 	
VARIABLE dm452M6_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM6 to real metal spacing 	
VARIABLE dmO_M6_ind_1  dmS_M6_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M6_ind_2  dmS_M6_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM6 variable
#IFDEF 34K_THICK_M6
VARIABLE dmW_M6  3.0		// small DM6 width   
VARIABLE dmL_M6  3.0		// small DM6 length  
VARIABLE dmS_M6  3.0		// small DM6 spacing   
VARIABLE dm2M6   3.0		// small DM6 to real metal spacing 	
VARIABLE dmO_M6  0.75		// offset = space*(1/4)
VARIABLE MdmW_M6 3.0		// middle DM6 width   
VARIABLE MdmL_M6 3.0		// middle DM6 length  
VARIABLE MdmS_M6 3.0		// middle DM6 spacing   
VARIABLE Mdm2M6  3.0		// middle DM6 to real metal spacing 
VARIABLE MdmO_M6 0.75		// offset = space*(1/4)
VARIABLE WdmW_M6 3.0		// large DM6 width   
VARIABLE WdmL_M6 3.0		// large DM6 length  
VARIABLE WdmS_M6 3.0		// large DM6 spacing   
VARIABLE Wdm2M6  3.0		// large DM6 to real metal spacing 	
VARIABLE WdmO_M6 0.75		// offset = space*(1/4)
VARIABLE minD_M6 0.4		// M6 density for insertion
VARIABLE maxD_M6 0.8		// M6 density for remove inserted dummy
VARIABLE emptyD_M6 0.001	// M6 density for blank region selection
VARIABLE dm2DM6  3.0		// DM6 to existed dummy metal spacing
VARIABLE wideM6  4.5		// wide metal size needs larger space
VARIABLE dm2WM6  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M6
VARIABLE dmW_M6  1.2		// small DM6 width   
VARIABLE dmL_M6  1.2		// small DM6 length  
VARIABLE dmS_M6  0.8		// small DM6 spacing   
VARIABLE dm2M6   0.8		// small DM6 to real metal spacing 	
VARIABLE dmO_M6  0.2		// offset = space*(1/4)
VARIABLE MdmW_M6 1.2		// middle DM6 width   
VARIABLE MdmL_M6 1.2		// middle DM6 length  
VARIABLE MdmS_M6 0.8		// middle DM6 spacing   
VARIABLE Mdm2M6  0.8		// middle DM6 to real metal spacing 
VARIABLE MdmO_M6 0.2		// offset = space*(1/4)
VARIABLE WdmW_M6 2.0		// large DM6 width   
VARIABLE WdmL_M6 2.0		// large DM6 length  
VARIABLE WdmS_M6 0.8		// large DM6 spacing   
VARIABLE Wdm2M6  5.0		// large DM6 to real metal spacing 	
VARIABLE WdmO_M6 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M6  1.5	// ODM6 max width
VARIABLE maxOdmL_M6  6  	// ODM6 max length
VARIABLE OdmW_M6  0.8	// ODM6 width      
VARIABLE OdmL_M6  1.8	// ODM6 length
VARIABLE OdmS_M6  0.8	// ODM6 space
VARIABLE Odm2M6   0.8	// ODM6 to real metal
VARIABLE OdmO_M6  0.2	// offset = space*(1/4)
VARIABLE minD_M6  0.4	// M6 density for insertion
VARIABLE maxD_M6  0.8	// M6 density for remove inserted dummy
VARIABLE emptyD_M6 0.001	// M6 density for blank region selection
VARIABLE dm2DM6   0.8	// DM6 to existed dummy metal spacing
VARIABLE Odm2DM6  0.8	// ODM6 to existed dummy metal spacing
VARIABLE wideM6   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM6   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M6
VARIABLE dmW_M6  0.8		// small DM6 width   
VARIABLE dmL_M6  0.8		// small DM6 length  
VARIABLE dmS_M6  0.4		// small DM6 spacing   
VARIABLE dm2M6   0.6		// small DM6 to real metal spacing 	
VARIABLE dmO_M6  0.1		// offset = space*(1/4)
VARIABLE MdmW_M6 0.8		// middle DM6 width   
VARIABLE MdmL_M6 0.8		// middle DM6 length  
VARIABLE MdmS_M6 0.4		// middle DM6 spacing   
VARIABLE Mdm2M6  0.6		// middle DM6 to real metal spacing 
VARIABLE MdmO_M6 0.1		// offset = space*(1/4)
VARIABLE WdmW_M6 2.0		// large DM6 width   
VARIABLE WdmL_M6 2.0		// large DM6 length  
VARIABLE WdmS_M6 0.8		// large DM6 spacing   
VARIABLE Wdm2M6  5.0		// large DM6 to real metal spacing 	
VARIABLE WdmO_M6 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M6  1.5	// ODM6 max width
VARIABLE maxOdmL_M6  6  	// ODM6 max length
VARIABLE OdmW_M6  0.4	// ODM6 width
VARIABLE OdmL_M6  1.42	// ODM6 length
VARIABLE OdmS_M6  0.4	// ODM6 space
VARIABLE Odm2M6   0.6	// ODM6 to real metal
VARIABLE OdmO_M6  0.1	// offset = space*(1/4)
VARIABLE minD_M6  0.4	// M6 density for insertion
VARIABLE maxD_M6  0.8	// M6 density for remove inserted dummy
VARIABLE emptyD_M6 0.001	// M6 density for blank region selection
VARIABLE dm2DM6   0.4	// DM6 to existed dummy metal spacing
VARIABLE Odm2DM6  0.4	// ODM6 to existed dummy metal spacing
VARIABLE wideM6   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM6   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M6_CTMDMY  0.92  // DM6 spacing in CTMDMY 
VARIABLE dm2M6_CTMDMY   0.92  // DM6 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M6_CTMDMY  0.92  // min.DM6 width in CTMDMY
#ELSE
VARIABLE dmS_M6_CTMDMY  0.84  // DM6 spacing in CTMDMY 
VARIABLE dm2M6_CTMDMY   0.84  // DM6 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M6_CTMDMY  0.84  // min.DM6 width in CTMDMY
#ENDIF
VARIABLE dmS_M6_TFRDMY 0.84  //DM6 spacing in TFRDUMMY
VARIABLE dmO_M6_TFRDMY 0.21  //offset = space *(1/4)
VARIABLE dm2M6_TFRDMY 0.84   //DM6 to real metal spacing in TFRDUMMY
VARIABLE dmW_M6_TFRDMY 0.84  //DM6 width in TFRDUMMY
VARIABLE dmL_M6_TFRDMY 0.84  //DM6 length in TFRDUMMY
VARIABLE maxD_M6_TFRDMY 0.7  //M6 density in TFRDUMMY for remove inserted dummy metal
VARIABLE minD_M6_TFRDMY 0.5  //M6 density in TFRDUMMY for insertion
#ELSE
#IFDEF 5K_THICK_M6
VARIABLE dmW_M6  0.8		// small DM6 width   
VARIABLE dmL_M6  0.8		// small DM6 length  
VARIABLE dmS_M6  0.4		// small DM6 spacing   
VARIABLE dm2M6   0.6		// small DM6 to real metal spacing 	
VARIABLE dmO_M6  0.1		// offset = space*(1/4)
VARIABLE MdmW_M6 0.8		// middle DM6 width   
VARIABLE MdmL_M6 0.8		// middle DM6 length  
VARIABLE MdmS_M6 0.4		// middle DM6 spacing   
VARIABLE Mdm2M6  0.6		// middle DM6 to real metal spacing 
VARIABLE MdmO_M6 0.1		// offset = space*(1/4)
VARIABLE WdmW_M6 2.0		// large DM6 width   
VARIABLE WdmL_M6 2.0		// large DM6 length  
VARIABLE WdmS_M6 0.8		// large DM6 spacing   
VARIABLE Wdm2M6  5.0		// large DM6 to real metal spacing 	
VARIABLE WdmO_M6 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M6  1.5	// ODM6 max width
VARIABLE maxOdmL_M6  6  	// ODM6 max length
VARIABLE OdmW_M6  0.4	// ODM6 width      
VARIABLE OdmL_M6  1.42	// ODM6 length
VARIABLE OdmS_M6  0.4	// ODM6 space
VARIABLE Odm2M6   0.6	// ODM6 to real metal
VARIABLE OdmO_M6  0.1	// offset = space*(1/4)
VARIABLE minD_M6  0.4	// M6 density for insertion
VARIABLE maxD_M6  0.7	// M6 density for remove inserted dummy
VARIABLE emptyD_M6 0.001	// M6 density for blank region selection
VARIABLE dm2DM6   0.4	// DM6 to existed dummy metal spacing
VARIABLE Odm2DM6  0.4	// ODM6 to existed dummy metal spacing
VARIABLE wideM6   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM6   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM6_301  0.5	// SDM6 width   
VARIABLE LM6_301  0.5	// SDM6 length  
VARIABLE SM6_301  0.3	// SDM6 space   
VARIABLE DM6_301  0.3	// SDM6 to real metal 	
VARIABLE DM645_301  0.4	// SDM6 to 45 degree real metal 	
VARIABLE OM6_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM6V_3011  1	// DM6V max width, 0.5*2  
VARIABLE maxL_DM6V_3011  6  	// DM6V max length
VARIABLE minL_DM6V_3011  0.8	// DM6V min length
VARIABLE WM6_302  0.5	// MDM6 width   
VARIABLE LM6_302  1.2	// MDM6 length  
VARIABLE SM6_302  0.3	// MDM6 space   
VARIABLE DM6_302  0.3	// MDM6 to real metal 	
VARIABLE OM6_302  0.08	// offset = space*(1/4)
VARIABLE WM6_303  2.0	// BDM6 width   
VARIABLE LM6_303  2.0	// BDM6 length 
VARIABLE SM6_303  0.7	// BDM6 space  
VARIABLE DM6_303  1.5	// BDM6 to real metal	
VARIABLE OM6_303  0.2	// offset = space*(1/4)
VARIABLE minWM6_304  0.13	// ODM6 min width      
VARIABLE minLM6_304  0.6	// ODM6 min length
VARIABLE maxWM6_304  0.2	// ODM6 max width
VARIABLE maxLM6_304  6  	// ODM6 max length
VARIABLE SM6_304  0.13	// ODM6 space
VARIABLE DM6_304  0.3	// ODM6 to real metal
VARIABLE DM645_304  0.4	// ODM6 to 45 degree real metal
VARIABLE OM6_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM6_401  0.5	// SDM width   
VARIABLE LM6_401  0.5	// SDM length  
VARIABLE SM6_401  0.3	// SDM space   
VARIABLE DM6_401  0.3	// SDM to real metal 	
VARIABLE OM6_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM6V_4011  1	// DM6V max width, 0.5*2    
VARIABLE maxL_DM6V_4011  6  	// DM6V max length
VARIABLE minL_DM6V_4011  0.8	// DM6V min length
VARIABLE WM6_402  0.5	// MDM width    
VARIABLE LM6_402  1.2	// MDM length   
VARIABLE SM6_402  0.3	// MDM space    
VARIABLE DM6_402  0.3	// MDM to real metal  	
VARIABLE OM6_402  0.08	// offset = space*(1/4)  	
VARIABLE WM6_403  2.0	// BDM width   
VARIABLE LM6_403  2.0	// BDM length  
VARIABLE SM6_403  1.0	// BDM space   
VARIABLE DM6_403  1.5	// BDM to real metal 	
VARIABLE OM6_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM6_501  0.5	// SDM width   
VARIABLE LM6_501  0.5	// SDM length  
VARIABLE SM6_501  0.3	// SDM space   
VARIABLE DM6_501  0.3	// SDM to real metal 	
VARIABLE OM6_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM6V_5011  1	// DM6V max width, 0.5*2    
VARIABLE maxL_DM6V_5011  6  	// DM6V max length
VARIABLE minL_DM6V_5011  0.8	// DM6V min length
VARIABLE WM6_502  0.5	// MDM width   
VARIABLE LM6_502  1.2	// MDM length  
VARIABLE SM6_502  0.5	// MDM space   
VARIABLE DM6_502  0.3	// MDM to real metal 	
VARIABLE OM6_502  0.1	// offset = space*(1/4)  	
VARIABLE WM6_503  2.0	// BDM width    
VARIABLE LM6_503  2.0	// BDM length   
VARIABLE SM6_503  1.4	// BDM space    
VARIABLE DM6_503  1.5	// BDM to real metal  	
VARIABLE OM6_503  0.4	// offset = space*(1/3) 
VARIABLE DM6_S_1  0.3
VARIABLE maxD_M6  0.65	// M6 density for remove inserted dummy
VARIABLE emptyD_M6 0.001	// M6 density for blank region selection
VARIABLE dm2DM6   0.3	// DM6 to existed dummy metal spacing
VARIABLE Odm2DM6  0.3	// ODM6 to existed dummy metal spacing
VARIABLE wideM6   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM6_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM6_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM6_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM6     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM6_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM6_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM6_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM7 variable
#IFDEF 34K_THICK_M7
VARIABLE dmW_M7_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 width   
VARIABLE dmL_M7_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 length  
VARIABLE dmS_M7_ind_1  3		// DM7 spacing for MD inductor 
VARIABLE dmS_M7_ind_2  4.5		// DM7 spacing for HD inductor
VARIABLE dm2M7_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 to real metal spacing 	
VARIABLE dm452M7_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 to real metal spacing 	
VARIABLE dmO_M7_ind_1  dmS_M7_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M7_ind_2  dmS_M7_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M7
VARIABLE dmW_M7_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 width   
VARIABLE dmL_M7_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 length  
VARIABLE dmS_M7_ind_1  0.8		// DM7 spacing for MD inductor
VARIABLE dmS_M7_ind_2  0.9		// DM7 spacing for HD inductor 
VARIABLE dm2M7_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 to real metal spacing 	
VARIABLE dm452M7_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 to real metal spacing 	
VARIABLE dmO_M7_ind_1  dmS_M7_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M7_ind_2  dmS_M7_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M7
VARIABLE dmW_M7_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 width   
VARIABLE dmL_M7_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 length  
VARIABLE dmS_M7_ind_1  0.6		// DM7 spacing for MD inductor
VARIABLE dmS_M7_ind_2  0.7		// DM7 spacing for HD inductor
VARIABLE dm2M7_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 to real metal spacing 	
VARIABLE dm452M7_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM7 to real metal spacing 	
VARIABLE dmO_M7_ind_1  dmS_M7_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M7_ind_2  dmS_M7_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM7 variable
#IFDEF 34K_THICK_M7
VARIABLE dmW_M7  3.0		// small DM7 width   
VARIABLE dmL_M7  3.0		// small DM7 length  
VARIABLE dmS_M7  3.0		// small DM7 spacing   
VARIABLE dm2M7   3.0		// small DM7 to real metal spacing 	
VARIABLE dmO_M7  0.75		// offset = space*(1/4)
VARIABLE MdmW_M7 3.0		// middle DM7 width   
VARIABLE MdmL_M7 3.0		// middle DM7 length  
VARIABLE MdmS_M7 3.0		// middle DM7 spacing   
VARIABLE Mdm2M7  3.0		// middle DM7 to real metal spacing 
VARIABLE MdmO_M7 0.75		// offset = space*(1/4)
VARIABLE WdmW_M7 3.0		// large DM7 width   
VARIABLE WdmL_M7 3.0		// large DM7 length  
VARIABLE WdmS_M7 3.0		// large DM7 spacing   
VARIABLE Wdm2M7  3.0		// large DM7 to real metal spacing 	
VARIABLE WdmO_M7 0.75		// offset = space*(1/4)
VARIABLE minD_M7 0.4		// M7 density for insertion
VARIABLE maxD_M7 0.8		// M7 density for remove inserted dummy
VARIABLE emptyD_M7 0.001	// M7 density for blank region selection
VARIABLE dm2DM7  3.0		// DM7 to existed dummy metal spacing
VARIABLE wideM7  4.5		// wide metal size needs larger space
VARIABLE dm2WM7  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M7
VARIABLE dmW_M7  1.2		// small DM7 width   
VARIABLE dmL_M7  1.2		// small DM7 length  
VARIABLE dmS_M7  0.8		// small DM7 spacing   
VARIABLE dm2M7   0.8		// small DM7 to real metal spacing 	
VARIABLE dmO_M7  0.2		// offset = space*(1/4)
VARIABLE MdmW_M7 1.2		// middle DM7 width   
VARIABLE MdmL_M7 1.2		// middle DM7 length  
VARIABLE MdmS_M7 0.8		// middle DM7 spacing   
VARIABLE Mdm2M7  0.8		// middle DM7 to real metal spacing 
VARIABLE MdmO_M7 0.2		// offset = space*(1/4)
VARIABLE WdmW_M7 2.0		// large DM7 width   
VARIABLE WdmL_M7 2.0		// large DM7 length  
VARIABLE WdmS_M7 0.8		// large DM7 spacing   
VARIABLE Wdm2M7  5.0		// large DM7 to real metal spacing 	
VARIABLE WdmO_M7 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M7  1.5	// ODM7 max width
VARIABLE maxOdmL_M7  6  	// ODM7 max length
VARIABLE OdmW_M7  0.8	// ODM7 width      
VARIABLE OdmL_M7  1.8	// ODM7 length
VARIABLE OdmS_M7  0.8	// ODM7 space
VARIABLE Odm2M7   0.8	// ODM7 to real metal
VARIABLE OdmO_M7  0.2	// offset = space*(1/4)
VARIABLE minD_M7  0.4	// M7 density for insertion
VARIABLE maxD_M7  0.8	// M7 density for remove inserted dummy
VARIABLE emptyD_M7 0.001	// M7 density for blank region selection
VARIABLE dm2DM7   0.8	// DM7 to existed dummy metal spacing
VARIABLE Odm2DM7  0.8	// ODM7 to existed dummy metal spacing
VARIABLE wideM7   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM7   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M7
VARIABLE dmW_M7  0.8		// small DM7 width   
VARIABLE dmL_M7  0.8		// small DM7 length  
VARIABLE dmS_M7  0.4		// small DM7 spacing   
VARIABLE dm2M7   0.6		// small DM7 to real metal spacing 	
VARIABLE dmO_M7  0.1		// offset = space*(1/4)
VARIABLE MdmW_M7 0.8		// middle DM7 width   
VARIABLE MdmL_M7 0.8		// middle DM7 length  
VARIABLE MdmS_M7 0.4		// middle DM7 spacing   
VARIABLE Mdm2M7  0.6		// middle DM7 to real metal spacing 
VARIABLE MdmO_M7 0.1		// offset = space*(1/4)
VARIABLE WdmW_M7 2.0		// large DM7 width   
VARIABLE WdmL_M7 2.0		// large DM7 length  
VARIABLE WdmS_M7 0.8		// large DM7 spacing   
VARIABLE Wdm2M7  5.0		// large DM7 to real metal spacing 	
VARIABLE WdmO_M7 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M7  1.5	// ODM7 max width
VARIABLE maxOdmL_M7  6  	// ODM7 max length
VARIABLE OdmW_M7  0.4	// ODM7 width
VARIABLE OdmL_M7  1.42	// ODM7 length
VARIABLE OdmS_M7  0.4	// ODM7 space
VARIABLE Odm2M7   0.6	// ODM7 to real metal
VARIABLE OdmO_M7  0.1	// offset = space*(1/4)
VARIABLE minD_M7  0.4	// M7 density for insertion
VARIABLE maxD_M7  0.8	// M7 density for remove inserted dummy
VARIABLE emptyD_M7 0.001	// M7 density for blank region selection
VARIABLE dm2DM7   0.4	// DM7 to existed dummy metal spacing
VARIABLE Odm2DM7  0.4	// ODM7 to existed dummy metal spacing
VARIABLE wideM7   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM7   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M7_CTMDMY  0.92  // DM7 spacing in CTMDMY 
VARIABLE dm2M7_CTMDMY   0.92  // DM7 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M7_CTMDMY  0.92  // min.DM7 width in CTMDMY
#ELSE
VARIABLE dmS_M7_CTMDMY  0.84  // DM7 spacing in CTMDMY 
VARIABLE dm2M7_CTMDMY   0.84  // DM7 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M7_CTMDMY  0.84  // min.DM7 width in CTMDMY
#ENDIF
VARIABLE dmS_M7_TFRDMY 0.84  //DM7 spacing in TFRDUMMY
VARIABLE dmO_M7_TFRDMY 0.21  //offset = space *(1/4)
VARIABLE dm2M7_TFRDMY 0.84   //DM7 to real metal spacing in TFRDUMMY
VARIABLE dmW_M7_TFRDMY 0.84  //DM7 width in TFRDUMMY
VARIABLE dmL_M7_TFRDMY 0.84  //DM7 length in TFRDUMMY
VARIABLE maxD_M7_TFRDMY 0.7  //M7 density in TFRDUMMY for remove inserted dummy metal
VARIABLE minD_M7_TFRDMY 0.5  //M7 density in TFRDUMMY for insertion
#ELSE
#IFDEF 5K_THICK_M7
VARIABLE dmW_M7  0.8		// small DM7 width   
VARIABLE dmL_M7  0.8		// small DM7 length  
VARIABLE dmS_M7  0.4		// small DM7 spacing   
VARIABLE dm2M7   0.6		// small DM7 to real metal spacing 	
VARIABLE dmO_M7  0.1		// offset = space*(1/4)
VARIABLE MdmW_M7 0.8		// middle DM7 width   
VARIABLE MdmL_M7 0.8		// middle DM7 length  
VARIABLE MdmS_M7 0.4		// middle DM7 spacing   
VARIABLE Mdm2M7  0.6		// middle DM7 to real metal spacing 
VARIABLE MdmO_M7 0.1		// offset = space*(1/4)
VARIABLE WdmW_M7 2.0		// large DM7 width   
VARIABLE WdmL_M7 2.0		// large DM7 length  
VARIABLE WdmS_M7 0.8		// large DM7 spacing   
VARIABLE Wdm2M7  5.0		// large DM7 to real metal spacing 	
VARIABLE WdmO_M7 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M7  1.5	// ODM7 max width
VARIABLE maxOdmL_M7  6  	// ODM7 max length
VARIABLE OdmW_M7  0.4	// ODM7 width      
VARIABLE OdmL_M7  1.42	// ODM7 length
VARIABLE OdmS_M7  0.4	// ODM7 space
VARIABLE Odm2M7   0.6	// ODM7 to real metal
VARIABLE OdmO_M7  0.1	// offset = space*(1/4)
VARIABLE minD_M7  0.4	// M7 density for insertion
VARIABLE maxD_M7  0.7	// M7 density for remove inserted dummy
VARIABLE emptyD_M7 0.001	// M7 density for blank region selection
VARIABLE dm2DM7   0.4	// DM7 to existed dummy metal spacing
VARIABLE Odm2DM7  0.4	// ODM7 to existed dummy metal spacing
VARIABLE wideM7   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM7   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM7_301  0.5	// SDM7 width   
VARIABLE LM7_301  0.5	// SDM7 length  
VARIABLE SM7_301  0.3	// SDM7 space   
VARIABLE DM7_301  0.3	// SDM7 to real metal 	
VARIABLE DM745_301  0.4	// SDM7 to 45 degree real metal 	
VARIABLE OM7_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM7V_3011  1	// DM7V max width, 0.5*2  
VARIABLE maxL_DM7V_3011  6  	// DM7V max length
VARIABLE minL_DM7V_3011  0.8	// DM7V min length
VARIABLE WM7_302  1.2	// MDM7 width   
VARIABLE LM7_302  0.5	// MDM7 length
VARIABLE SM7_302  0.3	// MDM7 space   
VARIABLE DM7_302  0.3	// MDM7 to real metal 	
VARIABLE OM7_302  0.08	// offset = space*(1/4)
VARIABLE WM7_303  2.0	// BDM7 width   
VARIABLE LM7_303  2.0	// BDM7 length 
VARIABLE SM7_303  0.7	// BDM7 space  
VARIABLE DM7_303  1.5	// BDM7 to real metal	
VARIABLE OM7_303  0.2	// offset = space*(1/4)
VARIABLE minWM7_304  0.13	// ODM7 min width      
VARIABLE minLM7_304  0.6	// ODM7 min length
VARIABLE maxWM7_304  0.2	// ODM7 max width
VARIABLE maxLM7_304  6  	// ODM7 max length
VARIABLE SM7_304  0.13	// ODM7 space
VARIABLE DM7_304  0.3	// ODM7 to real metal
VARIABLE DM745_304  0.4	// ODM7 to 45 degree real metal
VARIABLE OM7_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM7_401  0.5	// SDM width   
VARIABLE LM7_401  0.5	// SDM length  
VARIABLE SM7_401  0.3	// SDM space   
VARIABLE DM7_401  0.3	// SDM to real metal 	
VARIABLE OM7_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM7V_4011  1	// DM7V max width, 0.5*2    
VARIABLE maxL_DM7V_4011  6  	// DM7V max length
VARIABLE minL_DM7V_4011  0.8	// DM7V min length
VARIABLE WM7_402  1.2	// MDM width    
VARIABLE LM7_402  0.5	// MDM length 
VARIABLE SM7_402  0.3	// MDM space    
VARIABLE DM7_402  0.3	// MDM to real metal  	
VARIABLE OM7_402  0.08	// offset = space*(1/4)  	
VARIABLE WM7_403  2.0	// BDM width   
VARIABLE LM7_403  2.0	// BDM length  
VARIABLE SM7_403  1.0	// BDM space   
VARIABLE DM7_403  1.5	// BDM to real metal 	
VARIABLE OM7_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM7_501  0.5	// SDM width   
VARIABLE LM7_501  0.5	// SDM length  
VARIABLE SM7_501  0.3	// SDM space   
VARIABLE DM7_501  0.3	// SDM to real metal 	
VARIABLE OM7_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM7V_5011  1	// DM7V max width, 0.5*2    
VARIABLE maxL_DM7V_5011  6  	// DM7V max length
VARIABLE minL_DM7V_5011  0.8	// DM7V min length
VARIABLE WM7_502  1.2	// MDM width   
VARIABLE LM7_502  0.5	// MDM length 
VARIABLE SM7_502  0.5	// MDM space   
VARIABLE DM7_502  0.3	// MDM to real metal 	
VARIABLE OM7_502  0.1	// offset = space*(1/4)  	
VARIABLE WM7_503  2.0	// BDM width    
VARIABLE LM7_503  2.0	// BDM length   
VARIABLE SM7_503  1.4	// BDM space    
VARIABLE DM7_503  1.5	// BDM to real metal  	
VARIABLE OM7_503  0.4	// offset = space*(1/3) 
VARIABLE DM7_S_1  0.3
VARIABLE maxD_M7  0.65	// M7 density for remove inserted dummy
VARIABLE emptyD_M7 0.001	// M7 density for blank region selection
VARIABLE dm2DM7   0.3	// DM7 to existed dummy metal spacing
VARIABLE Odm2DM7  0.3	// ODM7 to existed dummy metal spacing
VARIABLE wideM7   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM7_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM7_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM7_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM7     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM7_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM7_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM7_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM8 variable
#IFDEF 34K_THICK_M8
VARIABLE dmW_M8_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 width   
VARIABLE dmL_M8_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 length  
VARIABLE dmS_M8_ind_1  3		// DM8 spacing for MD inductor 
VARIABLE dmS_M8_ind_2  4.5		// DM8 spacing for HD inductor
VARIABLE dm2M8_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 to real metal spacing 	
VARIABLE dm452M8_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 to real metal spacing 	
VARIABLE dmO_M8_ind_1  dmS_M8_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M8_ind_2  dmS_M8_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M8
VARIABLE dmW_M8_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 width   
VARIABLE dmL_M8_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 length  
VARIABLE dmS_M8_ind_1  0.8		// DM8 spacing for MD inductor
VARIABLE dmS_M8_ind_2  0.9		// DM8 spacing for HD inductor 
VARIABLE dm2M8_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 to real metal spacing 	
VARIABLE dm452M8_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 to real metal spacing 	
VARIABLE dmO_M8_ind_1  dmS_M8_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M8_ind_2  dmS_M8_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M8
VARIABLE dmW_M8_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 width   
VARIABLE dmL_M8_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 length  
VARIABLE dmS_M8_ind_1  0.6		// DM8 spacing for MD inductor
VARIABLE dmS_M8_ind_2  0.7		// DM8 spacing for HD inductor
VARIABLE dm2M8_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 to real metal spacing 	
VARIABLE dm452M8_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM8 to real metal spacing 	
VARIABLE dmO_M8_ind_1  dmS_M8_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M8_ind_2  dmS_M8_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM8 variable
#IFDEF 34K_THICK_M8
VARIABLE dmW_M8  3.0		// small DM8 width   
VARIABLE dmL_M8  3.0		// small DM8 length  
VARIABLE dmS_M8  3.0		// small DM8 spacing   
VARIABLE dm2M8   3.0		// small DM8 to real metal spacing 	
VARIABLE dmO_M8  0.75		// offset = space*(1/4)
VARIABLE MdmW_M8 3.0		// middle DM8 width   
VARIABLE MdmL_M8 3.0		// middle DM8 length  
VARIABLE MdmS_M8 3.0		// middle DM8 spacing   
VARIABLE Mdm2M8  3.0		// middle DM8 to real metal spacing 
VARIABLE MdmO_M8 0.75		// offset = space*(1/4)
VARIABLE WdmW_M8 3.0		// large DM8 width   
VARIABLE WdmL_M8 3.0		// large DM8 length  
VARIABLE WdmS_M8 3.0		// large DM8 spacing   
VARIABLE Wdm2M8  3.0		// large DM8 to real metal spacing 	
VARIABLE WdmO_M8 0.75		// offset = space*(1/4)
VARIABLE minD_M8 0.4		// M8 density for insertion
VARIABLE maxD_M8 0.8		// M8 density for remove inserted dummy
VARIABLE emptyD_M8 0.001	// M8 density for blank region selection
VARIABLE dm2DM8  3.0		// DM8 to existed dummy metal spacing
VARIABLE wideM8  4.5		// wide metal size needs larger space
VARIABLE dm2WM8  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M8
VARIABLE dmW_M8  1.2		// small DM8 width   
VARIABLE dmL_M8  1.2		// small DM8 length  
VARIABLE dmS_M8  0.8		// small DM8 spacing   
VARIABLE dm2M8   0.8		// small DM8 to real metal spacing 	
VARIABLE dmO_M8  0.2		// offset = space*(1/4)
VARIABLE MdmW_M8 1.2		// middle DM8 width   
VARIABLE MdmL_M8 1.2		// middle DM8 length  
VARIABLE MdmS_M8 0.8		// middle DM8 spacing   
VARIABLE Mdm2M8  0.8		// middle DM8 to real metal spacing 
VARIABLE MdmO_M8 0.2		// offset = space*(1/4)
VARIABLE WdmW_M8 2.0		// large DM8 width   
VARIABLE WdmL_M8 2.0		// large DM8 length  
VARIABLE WdmS_M8 0.8		// large DM8 spacing   
VARIABLE Wdm2M8  5.0		// large DM8 to real metal spacing 	
VARIABLE WdmO_M8 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M8  1.5	// ODM8 max width
VARIABLE maxOdmL_M8  6  	// ODM8 max length
VARIABLE OdmW_M8  0.8	// ODM8 width      
VARIABLE OdmL_M8  1.8	// ODM8 length
VARIABLE OdmS_M8  0.8	// ODM8 space
VARIABLE Odm2M8   0.8	// ODM8 to real metal
VARIABLE OdmO_M8  0.2	// offset = space*(1/4)
VARIABLE minD_M8  0.4	// M8 density for insertion
VARIABLE maxD_M8  0.8	// M8 density for remove inserted dummy
VARIABLE emptyD_M8 0.001	// M8 density for blank region selection
VARIABLE dm2DM8   0.8	// DM8 to existed dummy metal spacing
VARIABLE Odm2DM8  0.8	// ODM8 to existed dummy metal spacing
VARIABLE wideM8   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM8   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M8
VARIABLE dmW_M8  0.8		// small DM8 width   
VARIABLE dmL_M8  0.8		// small DM8 length  
VARIABLE dmS_M8  0.4		// small DM8 spacing   
VARIABLE dm2M8   0.6		// small DM8 to real metal spacing 	
VARIABLE dmO_M8  0.1		// offset = space*(1/4)
VARIABLE MdmW_M8 0.8		// middle DM8 width   
VARIABLE MdmL_M8 0.8		// middle DM8 length  
VARIABLE MdmS_M8 0.4		// middle DM8 spacing   
VARIABLE Mdm2M8  0.6		// middle DM8 to real metal spacing 
VARIABLE MdmO_M8 0.1		// offset = space*(1/4)
VARIABLE WdmW_M8 2.0		// large DM8 width   
VARIABLE WdmL_M8 2.0		// large DM8 length  
VARIABLE WdmS_M8 0.8		// large DM8 spacing   
VARIABLE Wdm2M8  5.0		// large DM8 to real metal spacing 	
VARIABLE WdmO_M8 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M8  1.5	// ODM8 max width
VARIABLE maxOdmL_M8  6  	// ODM8 max length
VARIABLE OdmW_M8  0.4	// ODM8 width
VARIABLE OdmL_M8  1.42	// ODM8 length
VARIABLE OdmS_M8  0.4	// ODM8 space
VARIABLE Odm2M8   0.6	// ODM8 to real metal
VARIABLE OdmO_M8  0.1	// offset = space*(1/4)
VARIABLE minD_M8  0.4	// M8 density for insertion
VARIABLE maxD_M8  0.8	// M8 density for remove inserted dummy
VARIABLE emptyD_M8 0.001	// M8 density for blank region selection
VARIABLE dm2DM8   0.4	// DM8 to existed dummy metal spacing
VARIABLE Odm2DM8  0.4	// ODM8 to existed dummy metal spacing
VARIABLE wideM8   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM8   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M8_CTMDMY  0.92  // DM8 spacing in CTMDMY 
VARIABLE dm2M8_CTMDMY   0.92  // DM8 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M8_CTMDMY  0.92  // min.DM8 width in CTMDMY
#ELSE
VARIABLE dmS_M8_CTMDMY  0.84  // DM8 spacing in CTMDMY 
VARIABLE dm2M8_CTMDMY   0.84  // DM8 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M8_CTMDMY  0.84  // min.DM8 width in CTMDMY
#ENDIF
VARIABLE dmS_M8_TFRDMY 0.84  //DM8 spacing in TFRDUMMY
VARIABLE dmO_M8_TFRDMY 0.21  //offset = space *(1/4)
VARIABLE dm2M8_TFRDMY 0.84   //DM8 to real metal spacing in TFRDUMMY
VARIABLE dmW_M8_TFRDMY 0.84  //DM8 width in TFRDUMMY
VARIABLE dmL_M8_TFRDMY 0.84  //DM8 length in TFRDUMMY
VARIABLE maxD_M8_TFRDMY 0.7  //M8 density in TFRDUMMY for remove inserted dummy metal
VARIABLE minD_M8_TFRDMY 0.5  //M8 density in TFRDUMMY for insertion
#ELSE
#IFDEF 5K_THICK_M8
VARIABLE dmW_M8  0.8		// small DM8 width   
VARIABLE dmL_M8  0.8		// small DM8 length  
VARIABLE dmS_M8  0.4		// small DM8 spacing   
VARIABLE dm2M8   0.6		// small DM8 to real metal spacing 	
VARIABLE dmO_M8  0.1		// offset = space*(1/4)
VARIABLE MdmW_M8 0.8		// middle DM8 width   
VARIABLE MdmL_M8 0.8		// middle DM8 length  
VARIABLE MdmS_M8 0.4		// middle DM8 spacing   
VARIABLE Mdm2M8  0.6		// middle DM8 to real metal spacing 
VARIABLE MdmO_M8 0.1		// offset = space*(1/4)
VARIABLE WdmW_M8 2.0		// large DM8 width   
VARIABLE WdmL_M8 2.0		// large DM8 length  
VARIABLE WdmS_M8 0.8		// large DM8 spacing   
VARIABLE Wdm2M8  5.0		// large DM8 to real metal spacing 	
VARIABLE WdmO_M8 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M8  1.5	// ODM8 max width
VARIABLE maxOdmL_M8  6  	// ODM8 max length
VARIABLE OdmW_M8  0.4	// ODM8 width      
VARIABLE OdmL_M8  1.42	// ODM8 length
VARIABLE OdmS_M8  0.4	// ODM8 space
VARIABLE Odm2M8   0.6	// ODM8 to real metal
VARIABLE OdmO_M8  0.1	// offset = space*(1/4)
VARIABLE minD_M8  0.4	// M8 density for insertion
VARIABLE maxD_M8  0.7	// M8 density for remove inserted dummy
VARIABLE emptyD_M8 0.001	// M8 density for blank region selection
VARIABLE dm2DM8   0.4	// DM8 to existed dummy metal spacing
VARIABLE Odm2DM8  0.4	// ODM8 to existed dummy metal spacing
VARIABLE wideM8   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM8   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM8_301  0.5	// SDM8 width   
VARIABLE LM8_301  0.5	// SDM8 length  
VARIABLE SM8_301  0.3	// SDM8 space   
VARIABLE DM8_301  0.3	// SDM8 to real metal 	
VARIABLE DM845_301  0.4	// SDM8 to 45 degree real metal 	
VARIABLE OM8_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM8V_3011  1	// DM8V max width, 0.5*2  
VARIABLE maxL_DM8V_3011  6  	// DM8V max length
VARIABLE minL_DM8V_3011  0.8	// DM8V min length
VARIABLE WM8_302  0.5	// MDM8 width   
VARIABLE LM8_302  1.2	// MDM8 length  
VARIABLE SM8_302  0.3	// MDM8 space   
VARIABLE DM8_302  0.3	// MDM8 to real metal 	
VARIABLE OM8_302  0.08	// offset = space*(1/4)
VARIABLE WM8_303  2.0	// BDM8 width   
VARIABLE LM8_303  2.0	// BDM8 length 
VARIABLE SM8_303  0.7	// BDM8 space  
VARIABLE DM8_303  1.5	// BDM8 to real metal	
VARIABLE OM8_303  0.2	// offset = space*(1/4)
VARIABLE minWM8_304  0.13	// ODM8 min width      
VARIABLE minLM8_304  0.6	// ODM8 min length
VARIABLE maxWM8_304  0.2	// ODM8 max width
VARIABLE maxLM8_304  6  	// ODM8 max length
VARIABLE SM8_304  0.13	// ODM8 space
VARIABLE DM8_304  0.3	// ODM8 to real metal
VARIABLE DM845_304  0.4	// ODM8 to 45 degree real metal
VARIABLE OM8_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM8_401  0.5	// SDM width   
VARIABLE LM8_401  0.5	// SDM length  
VARIABLE SM8_401  0.3	// SDM space   
VARIABLE DM8_401  0.3	// SDM to real metal 	
VARIABLE OM8_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM8V_4011  1	// DM8V max width, 0.5*2    
VARIABLE maxL_DM8V_4011  6  	// DM8V max length
VARIABLE minL_DM8V_4011  0.8	// DM8V min length
VARIABLE WM8_402  0.5	// MDM width    
VARIABLE LM8_402  1.2	// MDM length   
VARIABLE SM8_402  0.3	// MDM space    
VARIABLE DM8_402  0.3	// MDM to real metal  	
VARIABLE OM8_402  0.08	// offset = space*(1/4)  	
VARIABLE WM8_403  2.0	// BDM width   
VARIABLE LM8_403  2.0	// BDM length  
VARIABLE SM8_403  1.0	// BDM space   
VARIABLE DM8_403  1.5	// BDM to real metal 	
VARIABLE OM8_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM8_501  0.5	// SDM width   
VARIABLE LM8_501  0.5	// SDM length  
VARIABLE SM8_501  0.3	// SDM space   
VARIABLE DM8_501  0.3	// SDM to real metal 	
VARIABLE OM8_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM8V_5011  1	// DM8V max width, 0.5*2    
VARIABLE maxL_DM8V_5011  6  	// DM8V max length
VARIABLE minL_DM8V_5011  0.8	// DM8V min length
VARIABLE WM8_502  0.5	// MDM width   
VARIABLE LM8_502  1.2	// MDM length  
VARIABLE SM8_502  0.5	// MDM space   
VARIABLE DM8_502  0.3	// MDM to real metal 	
VARIABLE OM8_502  0.1	// offset = space*(1/4)  	
VARIABLE WM8_503  2.0	// BDM width    
VARIABLE LM8_503  2.0	// BDM length   
VARIABLE SM8_503  1.4	// BDM space    
VARIABLE DM8_503  1.5	// BDM to real metal  	
VARIABLE OM8_503  0.4	// offset = space*(1/3) 
VARIABLE DM8_S_1  0.3
VARIABLE maxD_M8  0.65	// M8 density for remove inserted dummy
VARIABLE emptyD_M8 0.001	// M8 density for blank region selection
VARIABLE dm2DM8   0.3	// DM8 to existed dummy metal spacing
VARIABLE Odm2DM8  0.3	// ODM8 to existed dummy metal spacing
VARIABLE wideM8   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM8_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM8_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM8_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM8     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM8_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM8_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM8_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM9 variable
#IFDEF 34K_THICK_M9
VARIABLE dmW_M9_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 width   
VARIABLE dmL_M9_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 length  
VARIABLE dmS_M9_ind_1  3		// DM9 spacing for MD inductor 
VARIABLE dmS_M9_ind_2  4.5		// DM9 spacing for HD inductor
VARIABLE dm2M9_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 to real metal spacing 	
VARIABLE dm452M9_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 to real metal spacing 	
VARIABLE dmO_M9_ind_1  dmS_M9_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M9_ind_2  dmS_M9_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M9
VARIABLE dmW_M9_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 width   
VARIABLE dmL_M9_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 length  
VARIABLE dmS_M9_ind_1  0.8		// DM9 spacing for MD inductor
VARIABLE dmS_M9_ind_2  0.9		// DM9 spacing for HD inductor 
VARIABLE dm2M9_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 to real metal spacing 	
VARIABLE dm452M9_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 to real metal spacing 	
VARIABLE dmO_M9_ind_1  dmS_M9_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M9_ind_2  dmS_M9_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M9
VARIABLE dmW_M9_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 width   
VARIABLE dmL_M9_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 length  
VARIABLE dmS_M9_ind_1  0.6		// DM9 spacing for MD inductor
VARIABLE dmS_M9_ind_2  0.7		// DM9 spacing for HD inductor
VARIABLE dm2M9_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 to real metal spacing 	
VARIABLE dm452M9_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM9 to real metal spacing 	
VARIABLE dmO_M9_ind_1  dmS_M9_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M9_ind_2  dmS_M9_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM9 variable
#IFDEF 34K_THICK_M9
VARIABLE dmW_M9  3.0		// small DM9 width   
VARIABLE dmL_M9  3.0		// small DM9 length  
VARIABLE dmS_M9  3.0		// small DM9 spacing   
VARIABLE dm2M9   3.0		// small DM9 to real metal spacing 	
VARIABLE dmO_M9  0.75		// offset = space*(1/4)
VARIABLE MdmW_M9 3.0		// middle DM9 width   
VARIABLE MdmL_M9 3.0		// middle DM9 length  
VARIABLE MdmS_M9 3.0		// middle DM9 spacing   
VARIABLE Mdm2M9  3.0		// middle DM9 to real metal spacing 
VARIABLE MdmO_M9 0.75		// offset = space*(1/4)
VARIABLE WdmW_M9 3.0		// large DM9 width   
VARIABLE WdmL_M9 3.0		// large DM9 length  
VARIABLE WdmS_M9 3.0		// large DM9 spacing   
VARIABLE Wdm2M9  3.0		// large DM9 to real metal spacing 	
VARIABLE WdmO_M9 0.75		// offset = space*(1/4)
VARIABLE minD_M9 0.4		// M9 density for insertion
VARIABLE maxD_M9 0.8		// M9 density for remove inserted dummy
VARIABLE emptyD_M9 0.001	// M9 density for blank region selection
VARIABLE dm2DM9  3.0		// DM9 to existed dummy metal spacing
VARIABLE wideM9  4.5		// wide metal size needs larger space
VARIABLE dm2WM9  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M9
VARIABLE dmW_M9  1.2		// small DM9 width   
VARIABLE dmL_M9  1.2		// small DM9 length  
VARIABLE dmS_M9  0.8		// small DM9 spacing   
VARIABLE dm2M9   0.8		// small DM9 to real metal spacing 	
VARIABLE dmO_M9  0.2		// offset = space*(1/4)
VARIABLE MdmW_M9 1.2		// middle DM9 width   
VARIABLE MdmL_M9 1.2		// middle DM9 length  
VARIABLE MdmS_M9 0.8		// middle DM9 spacing   
VARIABLE Mdm2M9  0.8		// middle DM9 to real metal spacing 
VARIABLE MdmO_M9 0.2		// offset = space*(1/4)
VARIABLE WdmW_M9 2.0		// large DM9 width   
VARIABLE WdmL_M9 2.0		// large DM9 length  
VARIABLE WdmS_M9 0.8		// large DM9 spacing   
VARIABLE Wdm2M9  5.0		// large DM9 to real metal spacing 	
VARIABLE WdmO_M9 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M9  1.5	// ODM9 max width
VARIABLE maxOdmL_M9  6  	// ODM9 max length
VARIABLE OdmW_M9  0.8	// ODM9 width      
VARIABLE OdmL_M9  1.8	// ODM9 length
VARIABLE OdmS_M9  0.8	// ODM9 space
VARIABLE Odm2M9   0.8	// ODM9 to real metal
VARIABLE OdmO_M9  0.2	// offset = space*(1/4)
VARIABLE minD_M9  0.4	// M9 density for insertion
VARIABLE maxD_M9  0.8	// M9 density for remove inserted dummy
VARIABLE emptyD_M9 0.001	// M9 density for blank region selection
VARIABLE dm2DM9   0.8	// DM9 to existed dummy metal spacing
VARIABLE Odm2DM9  0.8	// ODM9 to existed dummy metal spacing
VARIABLE wideM9   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM9   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M9
VARIABLE dmW_M9  0.8		// small DM9 width   
VARIABLE dmL_M9  0.8		// small DM9 length  
VARIABLE dmS_M9  0.4		// small DM9 spacing   
VARIABLE dm2M9   0.6		// small DM9 to real metal spacing 	
VARIABLE dmO_M9  0.1		// offset = space*(1/4)
VARIABLE MdmW_M9 0.8		// middle DM9 width   
VARIABLE MdmL_M9 0.8		// middle DM9 length  
VARIABLE MdmS_M9 0.4		// middle DM9 spacing   
VARIABLE Mdm2M9  0.6		// middle DM9 to real metal spacing 
VARIABLE MdmO_M9 0.1		// offset = space*(1/4)
VARIABLE WdmW_M9 2.0		// large DM9 width   
VARIABLE WdmL_M9 2.0		// large DM9 length  
VARIABLE WdmS_M9 0.8		// large DM9 spacing   
VARIABLE Wdm2M9  5.0		// large DM9 to real metal spacing 	
VARIABLE WdmO_M9 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M9  1.5	// ODM9 max width
VARIABLE maxOdmL_M9  6  	// ODM9 max length
VARIABLE OdmW_M9  0.4	// ODM9 width
VARIABLE OdmL_M9  1.42	// ODM9 length
VARIABLE OdmS_M9  0.4	// ODM9 space
VARIABLE Odm2M9   0.6	// ODM9 to real metal
VARIABLE OdmO_M9  0.1	// offset = space*(1/4)
VARIABLE minD_M9  0.4	// M9 density for insertion
VARIABLE maxD_M9  0.8	// M9 density for remove inserted dummy
VARIABLE emptyD_M9 0.001	// M9 density for blank region selection
VARIABLE dm2DM9   0.4	// DM9 to existed dummy metal spacing
VARIABLE Odm2DM9  0.4	// ODM9 to existed dummy metal spacing
VARIABLE wideM9   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM9   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M9_CTMDMY  0.92  // DM9 spacing in CTMDMY 
VARIABLE dm2M9_CTMDMY   0.92  // DM9 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M9_CTMDMY  0.92  // min.DM9 width in CTMDMY
#ELSE
VARIABLE dmS_M9_CTMDMY  0.84  // DM9 spacing in CTMDMY 
VARIABLE dm2M9_CTMDMY   0.84  // DM9 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M9_CTMDMY  0.84  // min.DM9 width in CTMDMY
#ENDIF
VARIABLE dmS_M9_TFRDMY 0.84  //DM9 spacing in TFRDUMMY
VARIABLE dmO_M9_TFRDMY 0.21  //offset = space *(1/4)
VARIABLE dm2M9_TFRDMY 0.84   //DM9 to real metal spacing in TFRDUMMY
VARIABLE dmW_M9_TFRDMY 0.84  //DM9 width in TFRDUMMY
VARIABLE dmL_M9_TFRDMY 0.84  //DM9 length in TFRDUMMY
VARIABLE maxD_M9_TFRDMY 0.7  //M9 density in TFRDUMMY for remove inserted dummy metal
VARIABLE minD_M9_TFRDMY 0.5  //M9 density in TFRDUMMY for insertion
#ELSE
#IFDEF 5K_THICK_M9
VARIABLE dmW_M9  0.8		// small DM9 width   
VARIABLE dmL_M9  0.8		// small DM9 length  
VARIABLE dmS_M9  0.4		// small DM9 spacing   
VARIABLE dm2M9   0.6		// small DM9 to real metal spacing 	
VARIABLE dmO_M9  0.1		// offset = space*(1/4)
VARIABLE MdmW_M9 0.8		// middle DM9 width   
VARIABLE MdmL_M9 0.8		// middle DM9 length  
VARIABLE MdmS_M9 0.4		// middle DM9 spacing   
VARIABLE Mdm2M9  0.6		// middle DM9 to real metal spacing 
VARIABLE MdmO_M9 0.1		// offset = space*(1/4)
VARIABLE WdmW_M9 2.0		// large DM9 width   
VARIABLE WdmL_M9 2.0		// large DM9 length  
VARIABLE WdmS_M9 0.8		// large DM9 spacing   
VARIABLE Wdm2M9  5.0		// large DM9 to real metal spacing 	
VARIABLE WdmO_M9 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M9  1.5	// ODM9 max width
VARIABLE maxOdmL_M9  6  	// ODM9 max length
VARIABLE OdmW_M9  0.4	// ODM9 width      
VARIABLE OdmL_M9  1.42	// ODM9 length
VARIABLE OdmS_M9  0.4	// ODM9 space
VARIABLE Odm2M9   0.6	// ODM9 to real metal
VARIABLE OdmO_M9  0.1	// offset = space*(1/4)
VARIABLE minD_M9  0.4	// M9 density for insertion
VARIABLE maxD_M9  0.7	// M9 density for remove inserted dummy
VARIABLE emptyD_M9 0.001	// M9 density for blank region selection
VARIABLE dm2DM9   0.4	// DM9 to existed dummy metal spacing
VARIABLE Odm2DM9  0.4	// ODM9 to existed dummy metal spacing
VARIABLE wideM9   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM9   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM9_301  0.5	// SDM9 width   
VARIABLE LM9_301  0.5	// SDM9 length  
VARIABLE SM9_301  0.3	// SDM9 space   
VARIABLE DM9_301  0.3	// SDM9 to real metal 	
VARIABLE DM945_301  0.4	// SDM9 to 45 degree real metal 	
VARIABLE OM9_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM9V_3011  1	// DM9V max width, 0.5*2  
VARIABLE maxL_DM9V_3011  6  	// DM9V max length
VARIABLE minL_DM9V_3011  0.8	// DM9V min length
VARIABLE WM9_302  1.2	// MDM9 width   
VARIABLE LM9_302  0.5	// MDM9 length
VARIABLE SM9_302  0.3	// MDM9 space   
VARIABLE DM9_302  0.3	// MDM9 to real metal 	
VARIABLE OM9_302  0.08	// offset = space*(1/4)
VARIABLE WM9_303  2.0	// BDM9 width   
VARIABLE LM9_303  2.0	// BDM9 length 
VARIABLE SM9_303  0.7	// BDM9 space  
VARIABLE DM9_303  1.5	// BDM9 to real metal	
VARIABLE OM9_303  0.2	// offset = space*(1/4)
VARIABLE minWM9_304  0.13	// ODM9 min width      
VARIABLE minLM9_304  0.6	// ODM9 min length
VARIABLE maxWM9_304  0.2	// ODM9 max width
VARIABLE maxLM9_304  6  	// ODM9 max length
VARIABLE SM9_304  0.13	// ODM9 space
VARIABLE DM9_304  0.3	// ODM9 to real metal
VARIABLE DM945_304  0.4	// ODM9 to 45 degree real metal
VARIABLE OM9_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM9_401  0.5	// SDM width   
VARIABLE LM9_401  0.5	// SDM length  
VARIABLE SM9_401  0.3	// SDM space   
VARIABLE DM9_401  0.3	// SDM to real metal 	
VARIABLE OM9_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM9V_4011  1	// DM9V max width, 0.5*2    
VARIABLE maxL_DM9V_4011  6  	// DM9V max length
VARIABLE minL_DM9V_4011  0.8	// DM9V min length
VARIABLE WM9_402  1.2	// MDM width    
VARIABLE LM9_402  0.5	// MDM length 
VARIABLE SM9_402  0.3	// MDM space    
VARIABLE DM9_402  0.3	// MDM to real metal  	
VARIABLE OM9_402  0.08	// offset = space*(1/4)  	
VARIABLE WM9_403  2.0	// BDM width   
VARIABLE LM9_403  2.0	// BDM length  
VARIABLE SM9_403  1.0	// BDM space   
VARIABLE DM9_403  1.5	// BDM to real metal 	
VARIABLE OM9_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM9_501  0.5	// SDM width   
VARIABLE LM9_501  0.5	// SDM length  
VARIABLE SM9_501  0.3	// SDM space   
VARIABLE DM9_501  0.3	// SDM to real metal 	
VARIABLE OM9_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM9V_5011  1	// DM9V max width, 0.5*2    
VARIABLE maxL_DM9V_5011  6  	// DM9V max length
VARIABLE minL_DM9V_5011  0.8	// DM9V min length
VARIABLE WM9_502  1.2	// MDM width   
VARIABLE LM9_502  0.5	// MDM length 
VARIABLE SM9_502  0.5	// MDM space   
VARIABLE DM9_502  0.3	// MDM to real metal 	
VARIABLE OM9_502  0.1	// offset = space*(1/4)  	
VARIABLE WM9_503  2.0	// BDM width    
VARIABLE LM9_503  2.0	// BDM length   
VARIABLE SM9_503  1.4	// BDM space    
VARIABLE DM9_503  1.5	// BDM to real metal  	
VARIABLE OM9_503  0.4	// offset = space*(1/3) 
VARIABLE DM9_S_1  0.3
VARIABLE maxD_M9  0.65	// M9 density for remove inserted dummy
VARIABLE emptyD_M9 0.001	// M9 density for blank region selection
VARIABLE dm2DM9   0.3	// DM9 to existed dummy metal spacing
VARIABLE Odm2DM9  0.3	// ODM9 to existed dummy metal spacing
VARIABLE wideM9   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM9_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM9_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM9_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM9     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM9_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM9_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM9_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM10 variable
#IFDEF 34K_THICK_M10
VARIABLE dmW_M10_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 width   
VARIABLE dmL_M10_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 length  
VARIABLE dmS_M10_ind_1  3		// DM10 spacing for MD inductor 
VARIABLE dmS_M10_ind_2  4.5		// DM10 spacing for HD inductor
VARIABLE dm2M10_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 to real metal spacing 	
VARIABLE dm452M10_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 to real metal spacing 	
VARIABLE dmO_M10_ind_1  dmS_M10_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M10_ind_2  dmS_M10_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M10
VARIABLE dmW_M10_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 width   
VARIABLE dmL_M10_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 length  
VARIABLE dmS_M10_ind_1  0.8		// DM10 spacing for MD inductor
VARIABLE dmS_M10_ind_2  0.9		// DM10 spacing for HD inductor 
VARIABLE dm2M10_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 to real metal spacing 	
VARIABLE dm452M10_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 to real metal spacing 	
VARIABLE dmO_M10_ind_1  dmS_M10_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M10_ind_2  dmS_M10_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M10
VARIABLE dmW_M10_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 width   
VARIABLE dmL_M10_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 length  
VARIABLE dmS_M10_ind_1  0.6		// DM10 spacing for MD inductor
VARIABLE dmS_M10_ind_2  0.7		// DM10 spacing for HD inductor
VARIABLE dm2M10_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 to real metal spacing 	
VARIABLE dm452M10_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM10 to real metal spacing 	
VARIABLE dmO_M10_ind_1  dmS_M10_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M10_ind_2  dmS_M10_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM10 variable
#IFDEF 34K_THICK_M10
VARIABLE dmW_M10  3.0		// small DM10 width   
VARIABLE dmL_M10  3.0		// small DM10 length  
VARIABLE dmS_M10  3.0		// small DM10 spacing   
VARIABLE dm2M10   3.0		// small DM10 to real metal spacing 	
VARIABLE dmO_M10  0.75		// offset = space*(1/4)
VARIABLE MdmW_M10 3.0		// middle DM10 width   
VARIABLE MdmL_M10 3.0		// middle DM10 length  
VARIABLE MdmS_M10 3.0		// middle DM10 spacing   
VARIABLE Mdm2M10  3.0		// middle DM10 to real metal spacing 
VARIABLE MdmO_M10 0.75		// offset = space*(1/4)
VARIABLE WdmW_M10 3.0		// large DM10 width   
VARIABLE WdmL_M10 3.0		// large DM10 length  
VARIABLE WdmS_M10 3.0		// large DM10 spacing   
VARIABLE Wdm2M10  3.0		// large DM10 to real metal spacing 	
VARIABLE WdmO_M10 0.75		// offset = space*(1/4)
VARIABLE minD_M10 0.4		// M10 density for insertion
VARIABLE maxD_M10 0.8		// M10 density for remove inserted dummy
VARIABLE emptyD_M10 0.001	// M10 density for blank region selection
VARIABLE dm2DM10  3.0		// DM10 to existed dummy metal spacing
VARIABLE wideM10  4.5		// wide metal size needs larger space
VARIABLE dm2WM10  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M10
VARIABLE dmW_M10  1.2		// small DM10 width   
VARIABLE dmL_M10  1.2		// small DM10 length  
VARIABLE dmS_M10  0.8		// small DM10 spacing   
VARIABLE dm2M10   0.8		// small DM10 to real metal spacing 	
VARIABLE dmO_M10  0.2		// offset = space*(1/4)
VARIABLE MdmW_M10 1.2		// middle DM10 width   
VARIABLE MdmL_M10 1.2		// middle DM10 length  
VARIABLE MdmS_M10 0.8		// middle DM10 spacing   
VARIABLE Mdm2M10  0.8		// middle DM10 to real metal spacing 
VARIABLE MdmO_M10 0.2		// offset = space*(1/4)
VARIABLE WdmW_M10 2.0		// large DM10 width   
VARIABLE WdmL_M10 2.0		// large DM10 length  
VARIABLE WdmS_M10 0.8		// large DM10 spacing   
VARIABLE Wdm2M10  5.0		// large DM10 to real metal spacing 	
VARIABLE WdmO_M10 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M10  1.5	// ODM10 max width
VARIABLE maxOdmL_M10  6  	// ODM10 max length
VARIABLE OdmW_M10  0.8	// ODM10 width      
VARIABLE OdmL_M10  1.8	// ODM10 length
VARIABLE OdmS_M10  0.8	// ODM10 space
VARIABLE Odm2M10   0.8	// ODM10 to real metal
VARIABLE OdmO_M10  0.2	// offset = space*(1/4)
VARIABLE minD_M10  0.4	// M10 density for insertion
VARIABLE maxD_M10  0.8	// M10 density for remove inserted dummy
VARIABLE emptyD_M10 0.001	// M10 density for blank region selection
VARIABLE dm2DM10   0.8	// DM10 to existed dummy metal spacing
VARIABLE Odm2DM10  0.8	// ODM10 to existed dummy metal spacing
VARIABLE wideM10   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM10   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M10
VARIABLE dmW_M10  0.8		// small DM10 width   
VARIABLE dmL_M10  0.8		// small DM10 length  
VARIABLE dmS_M10  0.4		// small DM10 spacing   
VARIABLE dm2M10   0.6		// small DM10 to real metal spacing 	
VARIABLE dmO_M10  0.1		// offset = space*(1/4)
VARIABLE MdmW_M10 0.8		// middle DM10 width   
VARIABLE MdmL_M10 0.8		// middle DM10 length  
VARIABLE MdmS_M10 0.4		// middle DM10 spacing   
VARIABLE Mdm2M10  0.6		// middle DM10 to real metal spacing 
VARIABLE MdmO_M10 0.1		// offset = space*(1/4)
VARIABLE WdmW_M10 2.0		// large DM10 width   
VARIABLE WdmL_M10 2.0		// large DM10 length  
VARIABLE WdmS_M10 0.8		// large DM10 spacing   
VARIABLE Wdm2M10  5.0		// large DM10 to real metal spacing 	
VARIABLE WdmO_M10 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M10  1.5	// ODM10 max width
VARIABLE maxOdmL_M10  6  	// ODM10 max length
VARIABLE OdmW_M10  0.4	// ODM10 width
VARIABLE OdmL_M10  1.42	// ODM10 length
VARIABLE OdmS_M10  0.4	// ODM10 space
VARIABLE Odm2M10   0.6	// ODM10 to real metal
VARIABLE OdmO_M10  0.1	// offset = space*(1/4)
VARIABLE minD_M10  0.4	// M10 density for insertion
VARIABLE maxD_M10  0.8	// M10 density for remove inserted dummy
VARIABLE emptyD_M10 0.001	// M10 density for blank region selection
VARIABLE dm2DM10   0.4	// DM10 to existed dummy metal spacing
VARIABLE Odm2DM10  0.4	// ODM10 to existed dummy metal spacing
VARIABLE wideM10   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM10   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M10_CTMDMY  0.92  // DM10 spacing in CTMDMY 
VARIABLE dm2M10_CTMDMY   0.92  // DM10 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M10_CTMDMY  0.92  // min.DM10 width in CTMDMY
#ELSE
VARIABLE dmS_M10_CTMDMY  0.84  // DM10 spacing in CTMDMY 
VARIABLE dm2M10_CTMDMY   0.84  // DM10 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M10_CTMDMY  0.84  // min.DM10 width in CTMDMY
#ENDIF
#ELSE
#IFDEF 5K_THICK_M10
VARIABLE dmW_M10  0.8		// small DM10 width   
VARIABLE dmL_M10  0.8		// small DM10 length  
VARIABLE dmS_M10  0.4		// small DM10 spacing   
VARIABLE dm2M10   0.6		// small DM10 to real metal spacing 	
VARIABLE dmO_M10  0.1		// offset = space*(1/4)
VARIABLE MdmW_M10 0.8		// middle DM10 width   
VARIABLE MdmL_M10 0.8		// middle DM10 length  
VARIABLE MdmS_M10 0.4		// middle DM10 spacing   
VARIABLE Mdm2M10  0.6		// middle DM10 to real metal spacing 
VARIABLE MdmO_M10 0.1		// offset = space*(1/4)
VARIABLE WdmW_M10 2.0		// large DM10 width   
VARIABLE WdmL_M10 2.0		// large DM10 length  
VARIABLE WdmS_M10 0.8		// large DM10 spacing   
VARIABLE Wdm2M10  5.0		// large DM10 to real metal spacing 	
VARIABLE WdmO_M10 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M10  1.5	// ODM10 max width
VARIABLE maxOdmL_M10  6  	// ODM10 max length
VARIABLE OdmW_M10  0.4	// ODM10 width      
VARIABLE OdmL_M10  1.42	// ODM10 length
VARIABLE OdmS_M10  0.4	// ODM10 space
VARIABLE Odm2M10   0.6	// ODM10 to real metal
VARIABLE OdmO_M10  0.1	// offset = space*(1/4)
VARIABLE minD_M10  0.4	// M10 density for insertion
VARIABLE maxD_M10  0.7	// M10 density for remove inserted dummy
VARIABLE emptyD_M10 0.001	// M10 density for blank region selection
VARIABLE dm2DM10   0.4	// DM10 to existed dummy metal spacing
VARIABLE Odm2DM10  0.4	// ODM10 to existed dummy metal spacing
VARIABLE wideM10   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM10   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM10_301  0.5	// SDM10 width   
VARIABLE LM10_301  0.5	// SDM10 length  
VARIABLE SM10_301  0.3	// SDM10 space   
VARIABLE DM10_301  0.3	// SDM10 to real metal 	
VARIABLE DM1045_301  0.4	// SDM10 to 45 degree real metal 	
VARIABLE OM10_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM10V_3011  1	// DM10V max width, 0.5*2  
VARIABLE maxL_DM10V_3011  6  	// DM10V max length
VARIABLE minL_DM10V_3011  0.8	// DM10V min length
VARIABLE WM10_302  0.5	// MDM10 width   
VARIABLE LM10_302  1.2	// MDM10 length  
VARIABLE SM10_302  0.3	// MDM10 space   
VARIABLE DM10_302  0.3	// MDM10 to real metal 	
VARIABLE OM10_302  0.08	// offset = space*(1/4)
VARIABLE WM10_303  2.0	// BDM10 width   
VARIABLE LM10_303  2.0	// BDM10 length 
VARIABLE SM10_303  0.7	// BDM10 space  
VARIABLE DM10_303  1.5	// BDM10 to real metal	
VARIABLE OM10_303  0.2	// offset = space*(1/4)
VARIABLE minWM10_304  0.13	// ODM10 min width      
VARIABLE minLM10_304  0.6	// ODM10 min length
VARIABLE maxWM10_304  0.2	// ODM10 max width
VARIABLE maxLM10_304  6  	// ODM10 max length
VARIABLE SM10_304  0.13	// ODM10 space
VARIABLE DM10_304  0.3	// ODM10 to real metal
VARIABLE DM1045_304  0.4	// ODM10 to 45 degree real metal
VARIABLE OM10_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM10_401  0.5	// SDM width   
VARIABLE LM10_401  0.5	// SDM length  
VARIABLE SM10_401  0.3	// SDM space   
VARIABLE DM10_401  0.3	// SDM to real metal 	
VARIABLE OM10_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM10V_4011  1	// DM10V max width, 0.5*2    
VARIABLE maxL_DM10V_4011  6  	// DM10V max length
VARIABLE minL_DM10V_4011  0.8	// DM10V min length
VARIABLE WM10_402  0.5	// MDM width    
VARIABLE LM10_402  1.2	// MDM length   
VARIABLE SM10_402  0.3	// MDM space    
VARIABLE DM10_402  0.3	// MDM to real metal  	
VARIABLE OM10_402  0.08	// offset = space*(1/4)  	
VARIABLE WM10_403  2.0	// BDM width   
VARIABLE LM10_403  2.0	// BDM length  
VARIABLE SM10_403  1.0	// BDM space   
VARIABLE DM10_403  1.5	// BDM to real metal 	
VARIABLE OM10_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM10_501  0.5	// SDM width   
VARIABLE LM10_501  0.5	// SDM length  
VARIABLE SM10_501  0.3	// SDM space   
VARIABLE DM10_501  0.3	// SDM to real metal 	
VARIABLE OM10_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM10V_5011  1	// DM10V max width, 0.5*2    
VARIABLE maxL_DM10V_5011  6  	// DM10V max length
VARIABLE minL_DM10V_5011  0.8	// DM10V min length
VARIABLE WM10_502  0.5	// MDM width   
VARIABLE LM10_502  1.2	// MDM length  
VARIABLE SM10_502  0.5	// MDM space   
VARIABLE DM10_502  0.3	// MDM to real metal 	
VARIABLE OM10_502  0.1	// offset = space*(1/4)  	
VARIABLE WM10_503  2.0	// BDM width    
VARIABLE LM10_503  2.0	// BDM length   
VARIABLE SM10_503  1.4	// BDM space    
VARIABLE DM10_503  1.5	// BDM to real metal  	
VARIABLE OM10_503  0.4	// offset = space*(1/3) 
VARIABLE DM10_S_1  0.3
VARIABLE maxD_M10  0.65	// M10 density for remove inserted dummy
VARIABLE emptyD_M10 0.001	// M10 density for blank region selection
VARIABLE dm2DM10   0.3	// DM10 to existed dummy metal spacing
VARIABLE Odm2DM10  0.3	// ODM10 to existed dummy metal spacing
VARIABLE wideM10   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM10_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM10_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM10_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM10     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM10_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM10_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM10_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF
// INDDMY DM11 variable
#IFDEF 34K_THICK_M11
VARIABLE dmW_M11_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 width   
VARIABLE dmL_M11_ind  3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 length  
VARIABLE dmS_M11_ind_1  3		// DM11 spacing for MD inductor 
VARIABLE dmS_M11_ind_2  4.5		// DM11 spacing for HD inductor
VARIABLE dm2M11_ind   3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 to real metal spacing 	
VARIABLE dm452M11_ind 3.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 to real metal spacing 	
VARIABLE dmO_M11_ind_1  dmS_M11_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M11_ind_2  dmS_M11_ind_2/4	// offset = space*(1/4) for HD inductor

#ELSE
#IFDEF 9K_THICK_M11
VARIABLE dmW_M11_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 width   
VARIABLE dmL_M11_ind  0.8		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 length  
VARIABLE dmS_M11_ind_1  0.8		// DM11 spacing for MD inductor
VARIABLE dmS_M11_ind_2  0.9		// DM11 spacing for HD inductor 
VARIABLE dm2M11_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 to real metal spacing 	
VARIABLE dm452M11_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 to real metal spacing 	
VARIABLE dmO_M11_ind_1  dmS_M11_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M11_ind_2  dmS_M11_ind_2/4	// offset = space*(1/4) for HD inductor
#ELSE  //3K_THICK_M11
VARIABLE dmW_M11_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 width   
VARIABLE dmL_M11_ind  0.6		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 length  
VARIABLE dmS_M11_ind_1  0.6		// DM11 spacing for MD inductor
VARIABLE dmS_M11_ind_2  0.7		// DM11 spacing for HD inductor
VARIABLE dm2M11_ind   2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 to real metal spacing 	
VARIABLE dm452M11_ind 2.0		// INDDMY_MD/INDDMY_HD/INDDMY_COIL DM11 to real metal spacing 	
VARIABLE dmO_M11_ind_1  dmS_M11_ind_1/4	// offset = space*(1/4) for MD inductor
VARIABLE dmO_M11_ind_2  dmS_M11_ind_2/4	// offset = space*(1/4) for HD inductor
#ENDIF
#ENDIF

// DM11 variable
#IFDEF 34K_THICK_M11
VARIABLE dmW_M11  3.0		// small DM11 width   
VARIABLE dmL_M11  3.0		// small DM11 length  
VARIABLE dmS_M11  3.0		// small DM11 spacing   
VARIABLE dm2M11   3.0		// small DM11 to real metal spacing 	
VARIABLE dmO_M11  0.75		// offset = space*(1/4)
VARIABLE MdmW_M11 3.0		// middle DM11 width   
VARIABLE MdmL_M11 3.0		// middle DM11 length  
VARIABLE MdmS_M11 3.0		// middle DM11 spacing   
VARIABLE Mdm2M11  3.0		// middle DM11 to real metal spacing 
VARIABLE MdmO_M11 0.75		// offset = space*(1/4)
VARIABLE WdmW_M11 3.0		// large DM11 width   
VARIABLE WdmL_M11 3.0		// large DM11 length  
VARIABLE WdmS_M11 3.0		// large DM11 spacing   
VARIABLE Wdm2M11  3.0		// large DM11 to real metal spacing 	
VARIABLE WdmO_M11 0.75		// offset = space*(1/4)
VARIABLE minD_M11 0.4		// M11 density for insertion
VARIABLE maxD_M11 0.8		// M11 density for remove inserted dummy
VARIABLE emptyD_M11 0.001	// M11 density for blank region selection
VARIABLE dm2DM11  3.0		// DM11 to existed dummy metal spacing
VARIABLE wideM11  4.5		// wide metal size needs larger space
VARIABLE dm2WM11  3.0		// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 12K_THICK_M11
VARIABLE dmW_M11  1.2		// small DM11 width   
VARIABLE dmL_M11  1.2		// small DM11 length  
VARIABLE dmS_M11  0.8		// small DM11 spacing   
VARIABLE dm2M11   0.8		// small DM11 to real metal spacing 	
VARIABLE dmO_M11  0.2		// offset = space*(1/4)
VARIABLE MdmW_M11 1.2		// middle DM11 width   
VARIABLE MdmL_M11 1.2		// middle DM11 length  
VARIABLE MdmS_M11 0.8		// middle DM11 spacing   
VARIABLE Mdm2M11  0.8		// middle DM11 to real metal spacing 
VARIABLE MdmO_M11 0.2		// offset = space*(1/4)
VARIABLE WdmW_M11 2.0		// large DM11 width   
VARIABLE WdmL_M11 2.0		// large DM11 length  
VARIABLE WdmS_M11 0.8		// large DM11 spacing   
VARIABLE Wdm2M11  5.0		// large DM11 to real metal spacing 	
VARIABLE WdmO_M11 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M11  1.5	// ODM11 max width
VARIABLE maxOdmL_M11  6  	// ODM11 max length
VARIABLE OdmW_M11  0.8	// ODM11 width      
VARIABLE OdmL_M11  1.8	// ODM11 length
VARIABLE OdmS_M11  0.8	// ODM11 space
VARIABLE Odm2M11   0.8	// ODM11 to real metal
VARIABLE OdmO_M11  0.2	// offset = space*(1/4)
VARIABLE minD_M11  0.4	// M11 density for insertion
VARIABLE maxD_M11  0.8	// M11 density for remove inserted dummy
VARIABLE emptyD_M11 0.001	// M11 density for blank region selection
VARIABLE dm2DM11   0.8	// DM11 to existed dummy metal spacing
VARIABLE Odm2DM11  0.8	// ODM11 to existed dummy metal spacing
VARIABLE wideM11   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM11   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
#IFDEF 9K_THICK_M11
VARIABLE dmW_M11  0.8		// small DM11 width   
VARIABLE dmL_M11  0.8		// small DM11 length  
VARIABLE dmS_M11  0.4		// small DM11 spacing   
VARIABLE dm2M11   0.6		// small DM11 to real metal spacing 	
VARIABLE dmO_M11  0.1		// offset = space*(1/4)
VARIABLE MdmW_M11 0.8		// middle DM11 width   
VARIABLE MdmL_M11 0.8		// middle DM11 length  
VARIABLE MdmS_M11 0.4		// middle DM11 spacing   
VARIABLE Mdm2M11  0.6		// middle DM11 to real metal spacing 
VARIABLE MdmO_M11 0.1		// offset = space*(1/4)
VARIABLE WdmW_M11 2.0		// large DM11 width   
VARIABLE WdmL_M11 2.0		// large DM11 length  
VARIABLE WdmS_M11 0.8		// large DM11 spacing   
VARIABLE Wdm2M11  5.0		// large DM11 to real metal spacing 	
VARIABLE WdmO_M11 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M11  1.5	// ODM11 max width
VARIABLE maxOdmL_M11  6  	// ODM11 max length
VARIABLE OdmW_M11  0.4	// ODM11 width
VARIABLE OdmL_M11  1.42	// ODM11 length
VARIABLE OdmS_M11  0.4	// ODM11 space
VARIABLE Odm2M11   0.6	// ODM11 to real metal
VARIABLE OdmO_M11  0.1	// offset = space*(1/4)
VARIABLE minD_M11  0.4	// M11 density for insertion
VARIABLE maxD_M11  0.8	// M11 density for remove inserted dummy
VARIABLE emptyD_M11 0.001	// M11 density for blank region selection
VARIABLE dm2DM11   0.4	// DM11 to existed dummy metal spacing
VARIABLE Odm2DM11  0.4	// ODM11 to existed dummy metal spacing
VARIABLE wideM11   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM11   1.5	// pattern to wide metal(>4.5um) spacing
#IFDEF N55HV
VARIABLE dmS_M11_CTMDMY  0.92  // DM11 spacing in CTMDMY 
VARIABLE dm2M11_CTMDMY   0.92  // DM11 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M11_CTMDMY  0.92  // min.DM11 width in CTMDMY
#ELSE
VARIABLE dmS_M11_CTMDMY  0.84  // DM11 spacing in CTMDMY 
VARIABLE dm2M11_CTMDMY   0.84  // DM11 to real metal spacing in CTMDMY	
VARIABLE min_dmW_M11_CTMDMY  0.84  // min.DM11 width in CTMDMY
#ENDIF
#ELSE
#IFDEF 5K_THICK_M11
VARIABLE dmW_M11  0.8		// small DM11 width   
VARIABLE dmL_M11  0.8		// small DM11 length  
VARIABLE dmS_M11  0.4		// small DM11 spacing   
VARIABLE dm2M11   0.6		// small DM11 to real metal spacing 	
VARIABLE dmO_M11  0.1		// offset = space*(1/4)
VARIABLE MdmW_M11 0.8		// middle DM11 width   
VARIABLE MdmL_M11 0.8		// middle DM11 length  
VARIABLE MdmS_M11 0.4		// middle DM11 spacing   
VARIABLE Mdm2M11  0.6		// middle DM11 to real metal spacing 
VARIABLE MdmO_M11 0.1		// offset = space*(1/4)
VARIABLE WdmW_M11 2.0		// large DM11 width   
VARIABLE WdmL_M11 2.0		// large DM11 length  
VARIABLE WdmS_M11 0.8		// large DM11 spacing   
VARIABLE Wdm2M11  5.0		// large DM11 to real metal spacing 	
VARIABLE WdmO_M11 0.2		// offset = space*(1/4)
VARIABLE maxOdmW_M11  1.5	// ODM11 max width
VARIABLE maxOdmL_M11  6  	// ODM11 max length
VARIABLE OdmW_M11  0.4	// ODM11 width      
VARIABLE OdmL_M11  1.42	// ODM11 length
VARIABLE OdmS_M11  0.4	// ODM11 space
VARIABLE Odm2M11   0.6	// ODM11 to real metal
VARIABLE OdmO_M11  0.1	// offset = space*(1/4)
VARIABLE minD_M11  0.4	// M11 density for insertion
VARIABLE maxD_M11  0.7	// M11 density for remove inserted dummy
VARIABLE emptyD_M11 0.001	// M11 density for blank region selection
VARIABLE dm2DM11   0.4	// DM11 to existed dummy metal spacing
VARIABLE Odm2DM11  0.4	// ODM11 to existed dummy metal spacing
VARIABLE wideM11   4.5	// 4.5um wide metal size needs larger space
VARIABLE dm2WM11   1.5	// pattern to wide metal(>4.5um) spacing
#ELSE
// density <= 20% stage
VARIABLE WM11_301  0.5	// SDM11 width   
VARIABLE LM11_301  0.5	// SDM11 length  
VARIABLE SM11_301  0.3	// SDM11 space   
VARIABLE DM11_301  0.3	// SDM11 to real metal 	
VARIABLE DM1145_301  0.4	// SDM11 to 45 degree real metal 	
VARIABLE OM11_301  0.08	// offset = space*(1/4)	
VARIABLE maxW_DM11V_3011  1	// DM11V max width, 0.5*2  
VARIABLE maxL_DM11V_3011  6  	// DM11V max length
VARIABLE minL_DM11V_3011  0.8	// DM11V min length
VARIABLE WM11_302  1.2	// MDM11 width   
VARIABLE LM11_302  0.5	// MDM11 length
VARIABLE SM11_302  0.3	// MDM11 space   
VARIABLE DM11_302  0.3	// MDM11 to real metal 	
VARIABLE OM11_302  0.08	// offset = space*(1/4)
VARIABLE WM11_303  2.0	// BDM11 width   
VARIABLE LM11_303  2.0	// BDM11 length 
VARIABLE SM11_303  0.7	// BDM11 space  
VARIABLE DM11_303  1.5	// BDM11 to real metal	
VARIABLE OM11_303  0.2	// offset = space*(1/4)
VARIABLE minWM11_304  0.13	// ODM11 min width      
VARIABLE minLM11_304  0.6	// ODM11 min length
VARIABLE maxWM11_304  0.2	// ODM11 max width
VARIABLE maxLM11_304  6  	// ODM11 max length
VARIABLE SM11_304  0.13	// ODM11 space
VARIABLE DM11_304  0.3	// ODM11 to real metal
VARIABLE DM1145_304  0.4	// ODM11 to 45 degree real metal
VARIABLE OM11_304  0		// offset = 0
// density <= 30% stage
VARIABLE WM11_401  0.5	// SDM width   
VARIABLE LM11_401  0.5	// SDM length  
VARIABLE SM11_401  0.3	// SDM space   
VARIABLE DM11_401  0.3	// SDM to real metal 	
VARIABLE OM11_401  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM11V_4011  1	// DM11V max width, 0.5*2    
VARIABLE maxL_DM11V_4011  6  	// DM11V max length
VARIABLE minL_DM11V_4011  0.8	// DM11V min length
VARIABLE WM11_402  1.2	// MDM width    
VARIABLE LM11_402  0.5	// MDM length 
VARIABLE SM11_402  0.3	// MDM space    
VARIABLE DM11_402  0.3	// MDM to real metal  	
VARIABLE OM11_402  0.08	// offset = space*(1/4)  	
VARIABLE WM11_403  2.0	// BDM width   
VARIABLE LM11_403  2.0	// BDM length  
VARIABLE SM11_403  1.0	// BDM space   
VARIABLE DM11_403  1.5	// BDM to real metal 	
VARIABLE OM11_403  0.25	// offset = space*(1/4) 
// density <= 40% stage
VARIABLE WM11_501  0.5	// SDM width   
VARIABLE LM11_501  0.5	// SDM length  
VARIABLE SM11_501  0.3	// SDM space   
VARIABLE DM11_501  0.3	// SDM to real metal 	
VARIABLE OM11_501  0.08	// offset = space*(1/4) 	
VARIABLE maxW_DM11V_5011  1	// DM11V max width, 0.5*2    
VARIABLE maxL_DM11V_5011  6  	// DM11V max length
VARIABLE minL_DM11V_5011  0.8	// DM11V min length
VARIABLE WM11_502  1.2	// MDM width   
VARIABLE LM11_502  0.5	// MDM length 
VARIABLE SM11_502  0.5	// MDM space   
VARIABLE DM11_502  0.3	// MDM to real metal 	
VARIABLE OM11_502  0.1	// offset = space*(1/4)  	
VARIABLE WM11_503  2.0	// BDM width    
VARIABLE LM11_503  2.0	// BDM length   
VARIABLE SM11_503  1.4	// BDM space    
VARIABLE DM11_503  1.5	// BDM to real metal  	
VARIABLE OM11_503  0.4	// offset = space*(1/3) 
VARIABLE DM11_S_1  0.3
VARIABLE maxD_M11  0.65	// M11 density for remove inserted dummy
VARIABLE emptyD_M11 0.001	// M11 density for blank region selection
VARIABLE dm2DM11   0.3	// DM11 to existed dummy metal spacing
VARIABLE Odm2DM11  0.3	// ODM11 to existed dummy metal spacing
VARIABLE wideM11   4.5	// 4.5um wide metal size needs larger space
VARIABLE wideM11_W2  1.5	// 1.5um wide metal size needs larger space
VARIABLE wideM11_W11 0.38	// 0.38um wide metal size needs larger space
VARIABLE wideM11_W1  0.2	// 0.2um wide metal size needs larger space
VARIABLE dm2WM11     1.5	// pattern to wide metal(>4.5um) spacing
VARIABLE dm2WM11_W2  0.5	// pattern to wide metal(>1.5um) spacing
VARIABLE dm2WM11_W11 0.16	// pattern to wide metal(>0.38um) spacing
VARIABLE dm2WM11_W1  0.12	// pattern to wide metal(>0.2um) spacing
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_AP
VARIABLE dap_W      3.0         // dummy AP width
VARIABLE dap_L      3.0         // dummy AP length
VARIABLE dap_S      3.0         // dummy AP space
VARIABLE dap_O      0.75	// offset = space*(1/4)
VARIABLE dap2AP     3.0         // dummy AP space to existed AP
VARIABLE dap2CB     5.0         // dummy AP space to CB/RV/CBD/CB2/PM
VARIABLE minD_AP    0.3  	// AP density for insertion
VARIABLE maxD_AP    0.5	        // AP density for remove inserted dummy
#ENDIF


//***********************************************************************************************************
// begin generation process : filling pattern
//***********************************************************************************************************

#IFDEF FILL_DM1

#IFDEF 34K_THICK_M1
	minOPENM1 = DENSITY M1x < minD_M1 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den
	emptyOPENM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M1Empty.den
        #IFDEF FILL_IN_SLOT
       	M1ExcHole  = COPY EMPTY	
        #ELSE
   	M1InnerHole = HOLES M1i INNER
	M1BigHole = SIZE M1InnerHole BY - excludeHoleSize/2
	M1ExcHole = (M1InnerHole OUTSIDE M1BigHole) NOT M1i
        #ENDIF	
        BLOCK1    = SIZE DM1EXCL BY (dm2DMEXCL + grid)
        FRAMEA1   = SIZE M1i BY (dm2M1 + grid)
	M1mid     = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i
	M1wide    = (SIZE M1mid BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i
	FRAMEB1   = SIZE M1wide BY (dm2WM1 + grid) // DM1 to 4.5um wide metal 3um
	FRAMEC1   = SIZE DUM1 BY (dm2DM1 + grid)    
	FRAME1Pre = ((FRAMEA1 OR FRAMEB1) OR FRAMEC1) OR M1ExcHole
	#IFDEF CBM_OVER_M1
        FRAME1 = ((((FRAME1Pre OR BLOCK1) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M1  
	#ELSE
	    FRAME1 = (((FRAME1Pre OR BLOCK1) OR NFILL) OR HVxx) OR OD_RDG_M1
	#ENDIF	
	OPENM1 = PUSH ((minOPENM1 OR emptyOPENM1) AND CHIP)
	FILL1 = OPENM1 NOT FRAME1
	FILLW1pre = SIZE FILL1 BY - (Wdm2M1 + grid)
	FILLW1 = (SIZE FILLW1pre BY (WdmW_M1 - grid) UNDEROVER TRUNCATE WdmW_M1) AND FILLW1pre
	M1FW = RECTANGLES WdmW_M1 WdmL_M1 WdmS_M1 OFFSET WdmO_M1 INSIDE OF LAYER FILLW1
	M1FW_EXP = SIZE M1FW BY (WdmS_M1 /2 + grid) OVERUNDER	// merge the gaps
	FILLM1pre = FILL1 NOT (SIZE M1FW_EXP BY (MdmS_M1 + grid))
	FILLM1 = (SIZE FILLM1pre BY (MdmW_M1 - grid) UNDEROVER TRUNCATE MdmW_M1) AND FILLM1pre
	M1F1 = RECTANGLES MdmW_M1 MdmL_M1 MdmS_M1 OFFSET MdmO_M1 INSIDE OF LAYER FILLM1
	M1R1pre = FILLM1pre NOT (SIZE M1F1 BY (dmS_M1 + grid))
	M1R1 = (SIZE M1R1pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R1pre

	M1F2 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R1
	M1R2pre = M1R1 NOT (SIZE M1F2 BY (dmS_M1 + grid))
	M1R2 = (SIZE M1R2pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R2pre

	M1F3 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R2
	M1R3pre = M1R2 NOT (SIZE M1F3 BY (dmS_M1 + grid))
	M1R3 = (SIZE M1R3pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R3pre
	
	M1F4 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 INSIDE OF LAYER M1R3 

	M1F = (((M1F1 OR M1F2) OR M1F3) OR M1F4) OR M1FW
	FM1 = M1F NOT INTERACT (EXT M1F < dmS_M1 ABUT SINGULAR REGION)

	maxOPENM1 = DENSITY M1x FM1 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Max.den
		       
	DM1F = FM1 OUTSIDE maxOPENM1

#ELSE
#IFDEF 12K_THICK_M1
	
	minOPENM1 = DENSITY M1x < minD_M1 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den
	emptyOPENM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M1Empty.den
#IFDEF FILL_IN_SLOT
       	M1ExcHole  = COPY EMPTY	
#ELSE
   	M1InnerHole = HOLES M1i INNER
	M1BigHole = SIZE M1InnerHole BY - excludeHoleSize/2 
	M1ExcHole = (M1InnerHole OUTSIDE M1BigHole) NOT M1i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK1 = SIZE DM1EXCL BY (dm2DMEXCL + grid)	// DM1 to DM1EXCL
    
        FRAMEA1 = SIZE M1i BY (dm2M1 + grid) // DM1 to metal
	M1mid = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i
	M1wide = (SIZE M1mid BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i
	FRAMEB1 = SIZE M1wide BY (dm2WM1 + grid) // DM1 to 4.5um wide metal, 1.5um
	FRAMEC1 = SIZE DUM1 BY (dm2DM1 + grid)   // ODM1 or DM1 to existed dummy metal 0.6um 
	FRAME1Pre = ((FRAMEA1 OR FRAMEB1) OR FRAMEC1) OR M1ExcHole
        #IFDEF CBM_OVER_M1
	   FRAME1 = ((((FRAME1Pre OR BLOCK1) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M1	// wrong setting will add nothing
        #ELSE 
	   FRAME1 = (((FRAME1Pre OR BLOCK1) OR NFILL) OR HVxx) OR OD_RDG_M1
        #ENDIF 

	OPENM1 = PUSH ((minOPENM1 OR emptyOPENM1) AND CHIP)
	FILL1 = OPENM1 NOT FRAME1
	FILLW1pre = SIZE FILL1 BY - (Wdm2M1 + grid)
	FILLW1 = (SIZE FILLW1pre BY (WdmW_M1 - grid) UNDEROVER TRUNCATE WdmW_M1) AND FILLW1pre
	M1FW = RECTANGLES WdmW_M1 WdmL_M1 WdmS_M1 OFFSET WdmO_M1 INSIDE OF LAYER FILLW1
	M1FW_EXP = SIZE M1FW BY (WdmS_M1 /2 + grid) OVERUNDER //merge the gaps 
	FILLM1pre = FILL1 NOT (SIZE M1FW_EXP BY (MdmS_M1 + grid))
	FILLM1 = (SIZE FILLM1pre BY (MdmW_M1 - grid) UNDEROVER TRUNCATE MdmW_M1) AND FILLM1pre
	M1F1 = RECTANGLES MdmW_M1 MdmL_M1 MdmS_M1 OFFSET MdmO_M1 INSIDE OF LAYER FILLM1
	M1R1pre = FILLM1pre NOT (SIZE M1F1 BY (dmS_M1 + grid))
	M1R1 = (SIZE M1R1pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R1pre

	M1F2 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R1
	M1R2pre = M1R1 NOT (SIZE M1F2 BY (dmS_M1 + grid))
	M1R2 = (SIZE M1R2pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R2pre

	M1F3 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R2
	M1R3pre = M1R2 NOT (SIZE M1F3 BY (dmS_M1 + grid))
	M1R3 = (SIZE M1R3pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R3pre
	
	M1F4 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 INSIDE OF LAYER M1R3

	M1F = (((M1F1 OR M1F2) OR M1F3) OR M1F4) OR M1FW
	FM1 = M1F NOT INTERACT (EXT M1F < dmS_M1 ABUT SINGULAR REGION)
    
	maxOPENM1 = DENSITY M1x FM1 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Max.den
		       
	FM1F = FM1 OUTSIDE maxOPENM1

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M1 = DENSITY M1x FM1F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den

	RM1EXC = SIZE FM1F BY (Odm2DM1 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M1pM = ((((PUSH D25M1) NOT FRAME1) NOT RM1EXC) NOT CTMDMY) AND CHIP
	D25M1pM_1 = (SIZE D25M1pM BY (OdmW_M1 /2 - grid) UNDEROVER TRUNCATE OdmW_M1) AND D25M1pM 
		
	RM1p1 = RECTANGLES OdmW_M1 OdmL_M1 OdmS_M1 INSIDE OF LAYER D25M1pM_1
	D25M1pM_2 = D25M1pM_1 NOT (SIZE RM1p1 BY (OdmS_M1 + grid))
	RM1p2 = RECTANGLES OdmL_M1 OdmW_M1 OdmS_M1 INSIDE OF LAYER D25M1pM_2

	D25M1pM_3pre = D25M1pM_2 NOT (SIZE RM1p2 BY (OdmS_M1 + grid))
	D25M1pM_3 = (SNAP (SIZE D25M1pM_3pre BY -grid) 5) AND D25M1pM_3pre
	RM1p3a = (INT D25M1pM_3 >=OdmW_M1 <=maxOdmW_M1 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M1pM_3 
	RM1p3b = RECTANGLE RM1p3a >= OdmW_M1 BY >= OdmL_M1 ORTHOGONAL ONLY // 1*1.44
	RM1p3  = RECTANGLE RM1p3b <= maxOdmW_M1 BY <= maxOdmL_M1 ORTHOGONAL ONLY// 1.5*6
	RM1A = (((RM1p1 OR RM1p2) OR RM1p3) OUTSIDE RM1EXC) OUTSIDE FRAME1
	RM1  = RM1A NOT INTERACT (EXT RM1A < OdmS_M1 ABUT SINGULAR REGION)
	
	DM1F = FM1F OR RM1

#ELSE
#IFDEF 9K_THICK_M1
	minOPENM1 = DENSITY M1x < minD_M1 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den
	emptyOPENM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M1Empty.den

#IFDEF FILL_IN_SLOT
       	M1ExcHole  = COPY EMPTY	
#ELSE
   	M1InnerHole = HOLES M1i INNER
	M1BigHole = SIZE M1InnerHole BY - excludeHoleSize/2 
	M1ExcHole = (M1InnerHole OUTSIDE M1BigHole) NOT M1i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK1 = SIZE DM1EXCL BY (dm2DMEXCL + grid)	// DM1 to DM1EXCL
	FRAMEA1 = SIZE M1i BY (dm2M1 + grid) // DM1 to metal

    
	M1mid = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i
	M1wide = (SIZE M1mid BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i
	FRAMEB1 = SIZE M1wide BY (dm2WM1 + grid) // DM1 to 4.5um wide metal, 1.5um
	FRAMEC1 = SIZE DUM1 BY (dm2DM1 + grid)   // DM1 to existed dummy metal 0.6um 
	FRAME1Pre = ((FRAMEA1 OR FRAMEB1) OR FRAMEC1) OR M1ExcHole
	#IFDEF CBM_OVER_M1
	    FRAME1 = (((((FRAME1Pre OR BLOCK1) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M1
	#ELSE
	    FRAME1 = ((((FRAME1Pre OR BLOCK1) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M1
    #ENDIF    
	OPENM1 = PUSH ((minOPENM1 OR emptyOPENM1) AND CHIP)
        FILL1 = OPENM1 NOT FRAME1

	FILLW1pre = SIZE FILL1 BY - (Wdm2M1 + grid)
	FILLW1 = (SIZE FILLW1pre BY (WdmW_M1 - grid) UNDEROVER TRUNCATE WdmW_M1) AND FILLW1pre
	M1FW = RECTANGLES WdmW_M1 WdmL_M1 WdmS_M1 OFFSET WdmO_M1 INSIDE OF LAYER FILLW1
	M1FW_EXP = SIZE M1FW BY (WdmS_M1 /2 + grid) OVERUNDER //merge the gaps 
	FILLM1pre = FILL1 NOT (SIZE M1FW_EXP BY (MdmS_M1 + grid))
	FILLM1 = (SIZE FILLM1pre BY (MdmW_M1 - grid) UNDEROVER TRUNCATE MdmW_M1) AND FILLM1pre
	M1F1 = RECTANGLES MdmW_M1 MdmL_M1 MdmS_M1 OFFSET MdmO_M1 INSIDE OF LAYER FILLM1
	M1R1pre = FILLM1pre NOT (SIZE M1F1 BY (dmS_M1 + grid))
	M1R1 = (SIZE M1R1pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R1pre

	M1F2 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R1
	M1R2pre = M1R1 NOT (SIZE M1F2 BY (dmS_M1 + grid))
	M1R2 = (SIZE M1R2pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R2pre

	M1F3 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R2
	M1R3pre = M1R2 NOT (SIZE M1F3 BY (dmS_M1 + grid))
	M1R3 = (SIZE M1R3pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R3pre
	
	M1F4 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 INSIDE OF LAYER M1R3

	M1F = ((((M1F1 OR M1F2) OR M1F3) OR M1F4) OR M1FW) NOT INTERACT IND_COIL_EXD
	FM1 = M1F NOT INTERACT (EXT M1F < dmS_M1 ABUT SINGULAR REGION)
    
	maxOPENM1 = DENSITY M1x FM1 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Max.den
		       
	FM1F = FM1 OUTSIDE maxOPENM1

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M1 = DENSITY M1x FM1F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den

	RM1EXC = SIZE FM1F BY (Odm2DM1 + grid)
// do not fill DMz_S over CTMDMY 
	D25M1pM = ((((PUSH D25M1) NOT FRAME1) NOT RM1EXC) NOT CTMDMY) AND CHIP
	D25M1pM_1 = (SIZE D25M1pM BY (OdmW_M1 /2 - grid) UNDEROVER TRUNCATE OdmW_M1) AND D25M1pM 

	RM1p1 = RECTANGLES OdmW_M1 OdmL_M1 OdmS_M1 INSIDE OF LAYER D25M1pM_1
	D25M1pM_2 = D25M1pM_1 NOT (SIZE RM1p1 BY (OdmS_M1 + grid))
	RM1p2 = RECTANGLES OdmL_M1 OdmW_M1 OdmS_M1 INSIDE OF LAYER D25M1pM_2

	D25M1pM_3pre = D25M1pM_2 NOT (SIZE RM1p2 BY (OdmS_M1 + grid))
	D25M1pM_3 = (SNAP (SIZE D25M1pM_3pre BY -grid) 5) AND D25M1pM_3pre
	RM1p3a = (INT D25M1pM_3 >=OdmW_M1 <=maxOdmW_M1 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M1pM_3 
	RM1p3b = RECTANGLE RM1p3a >= OdmW_M1 BY >= OdmL_M1 ORTHOGONAL ONLY// 0.4*1.42
	RM1p3  = RECTANGLE RM1p3b <= maxOdmW_M1 BY <= maxOdmL_M1 ORTHOGONAL ONLY// 1.5*6
	RM1A = ((((RM1p1 OR RM1p2) OR RM1p3) OUTSIDE RM1EXC) OUTSIDE FRAME1) NOT INTERACT IND_COIL_EXD
	RM1  = RM1A NOT INTERACT (EXT RM1A < OdmS_M1 ABUT SINGULAR REGION)
        DM1F_pre = FM1F OR RM1
        DM1F = COPY DM1F_pre
#ELSE	
#IFDEF 5K_THICK_M1
	minOPENM1 = DENSITY M1x < minD_M1 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den
	emptyOPENM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M1Empty.den

#IFDEF FILL_IN_SLOT
       	M1ExcHole  = COPY EMPTY	
#ELSE
   	M1InnerHole = HOLES M1i INNER
	M1BigHole = SIZE M1InnerHole BY - excludeHoleSize/2 
	M1ExcHole = (M1InnerHole OUTSIDE M1BigHole) NOT M1i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK1 = SIZE DM1EXCL BY (dm2DMEXCL + grid)	// DM1 to DM1EXCL
    
        FRAMEA1 = SIZE M1i BY (dm2M1 + grid) // DM1 to metal
	M1mid = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i
	M1wide = (SIZE M1mid BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i
	FRAMEB1 = SIZE M1wide BY (dm2WM1 + grid) // DM1 to 4.5um wide metal, 1.5um
	FRAMEC1 = SIZE DUM1 BY (dm2DM1 + grid)   // ODM1 or DM1 to existed dummy metal 0.6um 
	FRAME1Pre = ((FRAMEA1 OR FRAMEB1) OR FRAMEC1) OR M1ExcHole
	#IFDEF CBM_OVER_M1
	   FRAME1 = ((((FRAME1Pre OR BLOCK1) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M1
        #ELSE
	   FRAME1 = (((FRAME1Pre OR BLOCK1) OR NFILL) OR HVxx) OR OD_RDG_M1
        #ENDIF
	OPENM1 = PUSH ((minOPENM1 OR emptyOPENM1) AND CHIP)
	FILL1 = OPENM1 NOT FRAME1
	FILLW1pre = SIZE FILL1 BY - (Wdm2M1 + grid)
	FILLW1 = (SIZE FILLW1pre BY (WdmW_M1 - grid) UNDEROVER TRUNCATE WdmW_M1) AND FILLW1pre
	M1FW = RECTANGLES WdmW_M1 WdmL_M1 WdmS_M1 OFFSET WdmO_M1 INSIDE OF LAYER FILLW1
	M1FW_EXP = SIZE M1FW BY (WdmS_M1 /2 + grid) OVERUNDER //merge the gaps 
	FILLM1pre = FILL1 NOT (SIZE M1FW_EXP BY (MdmS_M1 + grid))
	FILLM1 = (SIZE FILLM1pre BY (MdmW_M1 - grid) UNDEROVER TRUNCATE MdmW_M1) AND FILLM1pre
	M1F1 = RECTANGLES MdmW_M1 MdmL_M1 MdmS_M1 OFFSET MdmO_M1 INSIDE OF LAYER FILLM1
	M1R1pre = FILLM1pre NOT (SIZE M1F1 BY (dmS_M1 + grid))
	M1R1 = (SIZE M1R1pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R1pre

	M1F2 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R1
	M1R2pre = M1R1 NOT (SIZE M1F2 BY (dmS_M1 + grid))
	M1R2 = (SIZE M1R2pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R2pre

	M1F3 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 OFFSET dmO_M1 INSIDE OF LAYER M1R2
	M1R3pre = M1R2 NOT (SIZE M1F3 BY (dmS_M1 + grid))
	M1R3 = (SIZE M1R3pre BY (dmW_M1/2 - grid) UNDEROVER TRUNCATE dmW_M1) AND M1R3pre
	
	M1F4 = RECTANGLES dmW_M1 dmL_M1 dmS_M1 INSIDE OF LAYER M1R3

	M1F = (((M1F1 OR M1F2) OR M1F3) OR M1F4) OR M1FW
	FM1 = M1F NOT INTERACT (EXT M1F < dmS_M1 ABUT SINGULAR REGION)
    
	maxOPENM1 = DENSITY M1x FM1 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Max.den
		       
	FM1F = FM1 OUTSIDE maxOPENM1

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M1 = DENSITY M1x FM1F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den

	RM1EXC = SIZE FM1F BY (Odm2DM1 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M1pM = ((((PUSH D25M1) NOT FRAME1) NOT RM1EXC) NOT CTMDMY) AND CHIP
	D25M1pM_1 = (SIZE D25M1pM BY (OdmW_M1 /2 - grid) UNDEROVER TRUNCATE OdmW_M1) AND D25M1pM 
		
	RM1p1 = RECTANGLES OdmW_M1 OdmL_M1 OdmS_M1 INSIDE OF LAYER D25M1pM_1
	D25M1pM_2 = D25M1pM_1 NOT (SIZE RM1p1 BY (OdmS_M1 + grid))
	RM1p2 = RECTANGLES OdmL_M1 OdmW_M1 OdmS_M1 INSIDE OF LAYER D25M1pM_2

	D25M1pM_3pre = D25M1pM_2 NOT (SIZE RM1p2 BY (OdmS_M1 + grid))
	D25M1pM_3 = (SNAP (SIZE D25M1pM_3pre BY -grid) 5) AND D25M1pM_3pre
	RM1p3a = (INT D25M1pM_3 >=OdmW_M1 <=maxOdmW_M1 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M1pM_3 
	RM1p3b = RECTANGLE RM1p3a >= OdmW_M1 BY >= OdmL_M1 ORTHOGONAL ONLY// 0.8*1.42
	RM1p3  = RECTANGLE RM1p3b <= maxOdmW_M1 BY <= maxOdmL_M1 ORTHOGONAL ONLY// 1.5*6
	RM1A = (((RM1p1 OR RM1p2) OR RM1p3) OUTSIDE RM1EXC) OUTSIDE FRAME1
	RM1  = RM1A NOT INTERACT (EXT RM1A < OdmS_M1 ABUT SINGULAR REGION)
	
	DM1F = FM1F OR RM1

#ELSE
	D30M1 = DENSITY M1x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M1.den30
	D40M1 = DENSITY M1x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M1.den40
	D50M1 = DENSITY M1x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M1.den50
	emptyM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M1.den_empty

#IFDEF FILL_IN_SLOT
       	M1ExcHole  = COPY EMPTY	
#ELSE
   	M1InnerHole = HOLES M1i INNER
	M1BigHole = SIZE M1InnerHole BY - excludeHoleSize/2 
	M1ExcHole = (M1InnerHole OUTSIDE M1BigHole) NOT M1i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK1 = SIZE DM1EXCL BY (dm2DMEXCL + grid)	// DM1 to DM1EXCL
	
        FRAMEA1 = SIZE M1i BY (DM1_301 + grid)	  // DM1 to real metal
        FRAMEA1RM = SIZE M1i BY (DM1_304 + grid)	  // RM1 to real metal

	FRAMEA1_45 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (DM145_301 + grid) // DM1 to 45 degree metal
	FRAMEA1RM_45 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (DM145_304 + grid) // DM1 to 45 degree real metal
        
	M1mid = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i
	
	M1wide_W1 = (SIZE M1mid BY wideM1_W1/2 UNDEROVER TRUNCATE wideM1_W1/2) AND M1i	
	M1wide_W11 = (SIZE M1wide_W1 BY wideM1_W11/2 UNDEROVER TRUNCATE wideM1_W11/2) AND M1i
	M1wide_W2 = (SIZE M1wide_W1 BY wideM1_W2/2 UNDEROVER TRUNCATE wideM1_W2/2) AND M1i
	M1wide = (SIZE M1wide_W2 BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i

	FRAMEB1 = SIZE M1wide BY (dm2WM1 + grid) // DM1 to wide metal 4.5
	FRAMEB1_W2 = SIZE M1wide_W2 BY (dm2WM1_W2 + grid) // DM1 to 1.5um wide metal 0.5
	FRAMEB1_W1 = SIZE M1wide_W1 BY (dm2WM1_W1 + grid) // DM1 to 0.21um wide metal
	FRAMEB1_W11 = SIZE M1wide_W11 BY (dm2WM1_W11 + grid) // DM1 to 0.38um wide metal
    
	FRAMEC1 = SIZE DUM1 BY (dm2DM1 + grid)   // DM1 to existed dummy metal 0.4
	FRAMEC1RM = SIZE DUM1 BY (Odm2DM1 + grid)   // ODM1 to existed dummy metal 0.6 
	FRAME1Pre = ((((FRAMEA1 OR FRAMEB1) OR FRAMEC1) OR M1ExcHole) OR FRAMEB1_W2) OR FRAMEA1_45
	FRAME1PreRM = ((((((FRAMEA1RM OR FRAMEB1) OR FRAMEC1RM) OR M1ExcHole) OR FRAMEB1_W2) OR FRAMEB1_W1) OR FRAMEB1_W11) OR FRAMEA1RM_45
	
	#IFDEF CBM_OVER_M1
	    FRAME1 = (((((FRAME1Pre OR BLOCK1) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M1
	    FRAME1RM = ((((FRAME1PreRM OR BLOCK1) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M1
	#ELSE
        FRAME1 = ((((FRAME1Pre OR BLOCK1) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M1
	    FRAME1RM = (((FRAME1PreRM OR BLOCK1) OR NFILLRM) OR HVxx) OR OD_RDG_M1
	#ENDIF

//****************************************************************************

	D30M1p = (PUSH D30M1) NOT FRAME1
	O30M1pre = D30M1p AND CHIP
	FD21M1s = COPY FRAME1

	O30M1preA = SIZE O30M1pre BY - (DM1_303 + grid)
	O30M1preB = (SIZE O30M1preA BY (WM1_303 - grid) UNDEROVER TRUNCATE WM1_303) AND O30M1preA

	// 1st 2*2
	F303M1 = (RECTANGLES WM1_303 LM1_303 SM1_303 OFFSET OM1_303  INSIDE OF LAYER O30M1preB) NOT INTERACT IND_COIL_EXD

	
	F303M1_EXP = SIZE F303M1 BY ( WM1_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M1preF1 = O30M1pre NOT (SIZE F303M1_EXP BY (SM1_302 + grid))
	O30M1preF = (SNAP (SIZE O30M1preF1 BY -grid) 5) AND O30M1preF1

	B30M1pre = (INT O30M1preF >= WM1_301 <= maxW_DM1V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M1preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M1pre2 = RECTANGLE B30M1pre >= WM1_301 BY >= minL_DM1V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M1pre3 = RECTANGLE B30M1pre2 <= maxW_DM1V_3011 BY <= maxL_DM1V_3011 ORTHOGONAL ONLY

	B30M1 = (B30M1pre3 NOT INTERACT (EXT B30M1pre3 < SM1_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M1s = ((SIZE B30M1 BY (SM1_301 + grid)) OR FD21M1s) OR (SIZE F303M1_EXP BY (SM1_302 + grid))
	O30M1 = O30M1preF NOT B30M1s

	
	// 3rd, 0.5*1.2
	F302M1 = (RECTANGLES WM1_302 LM1_302 SM1_302 OFFSET OM1_302 INSIDE OF LAYER O30M1) NOT INTERACT IND_COIL_EXD
	F302M1s = (SIZE F302M1 BY (SM1_301 + grid)) OR B30M1s
	R302M1pre = O30M1 NOT F302M1s
	R302M1 = (SIZE R302M1pre BY (WM1_301/2 + grid) UNDEROVER TRUNCATE WM1_301) AND R302M1pre

	// 4th, 0.5*0.5
	F3012M1 = (RECTANGLES WM1_301 LM1_301 SM1_301 OFFSET OM1_301 INSIDE OF LAYER R302M1) NOT INTERACT IND_COIL_EXD
	F3012M1s = (SIZE F3012M1 BY (SM1_301 + grid)) OR F302M1s
	R3012M1pre = R302M1pre NOT F3012M1s
	R3012M1 = (SIZE R3012M1pre BY (WM1_301/2 + grid) UNDEROVER TRUNCATE WM1_301) AND R3012M1pre

	// 5th, regular 0.5*0.5
	F301M1 = (RECTANGLES WM1_301 LM1_301 SM1_301 INSIDE OF LAYER R3012M1) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M1s = (SIZE F301M1 BY (SM1_301 + grid)) OR F3012M1s

	F30M1 = (((B30M1 OR F302M1) OR F3012M1) OR F301M1) OR F303M1
	O40M1pre = (((PUSH D40M1) NOT FRAME1) NOT F301M1s) AND CHIP


	O40M1preA = SIZE O40M1pre BY - (DM1_403 + grid)
	O40M1preB = (SIZE O40M1preA BY (WM1_403 - grid) UNDEROVER TRUNCATE WM1_403) AND O40M1preA

	// 1st 2*2
	F403M1 = RECTANGLES WM1_403 LM1_403 SM1_403 OFFSET OM1_403  INSIDE OF LAYER O40M1preB

	
	F403M1_EXP = SIZE F403M1 BY ( WM1_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M1preF1 = O40M1pre NOT (SIZE F403M1_EXP BY (SM1_402 + grid))
	O40M1preF = (SNAP (SIZE O40M1preF1 BY -grid) 5) AND O40M1preF1

	B40M1pre = (INT O40M1preF >= WM1_401 <= maxW_DM1V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M1preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M1pre2 = RECTANGLE B40M1pre >= WM1_401 BY >= minL_DM1V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M1pre3 = RECTANGLE B40M1pre2 <= maxW_DM1V_4011 BY <= maxL_DM1V_4011 ORTHOGONAL ONLY

	B40M1 = (B40M1pre3 NOT INTERACT (EXT B40M1pre3 < SM1_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M1s = ((SIZE B40M1 BY (SM1_401 + grid)) OR F301M1s) OR (SIZE F403M1_EXP BY (SM1_402 + grid))
	O40M1 = O40M1preF NOT B40M1s

	
	// 3rd, 0.5*1.2
	F402M1 = (RECTANGLES WM1_402 LM1_402 SM1_402 OFFSET OM1_402 INSIDE OF LAYER O40M1) NOT INTERACT IND_COIL_EXD
	F402M1s = (SIZE F402M1 BY (SM1_401 + grid)) OR B40M1s
	R402M1pre = O40M1 NOT F402M1s
	R402M1 = (SIZE R402M1pre BY (WM1_401/2 + grid) UNDEROVER TRUNCATE WM1_401) AND R402M1pre

	// 4th, 0.5*0.5
	F4012M1 = (RECTANGLES WM1_401 LM1_401 SM1_401 OFFSET OM1_401 INSIDE OF LAYER R402M1) NOT INTERACT IND_COIL_EXD
	F4012M1s = (SIZE F4012M1 BY (SM1_401 + grid)) OR F402M1s
	R4012M1pre = R402M1pre NOT F4012M1s
	R4012M1 = (SIZE R4012M1pre BY (WM1_401/2 + grid) UNDEROVER TRUNCATE WM1_401) AND R4012M1pre

	// 5th, regular 0.5*0.5
	F401M1 = (RECTANGLES WM1_401 LM1_401 SM1_401 INSIDE OF LAYER R4012M1) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M1s = (SIZE F401M1 BY (SM1_401 + grid)) OR F4012M1s

	F40M1 = (((B40M1 OR F402M1) OR F4012M1) OR F401M1) OR F403M1
	O50M1pre = (((PUSH (D50M1 OR emptyM1)) NOT FRAME1) NOT F401M1s) AND CHIP


	O50M1preA = SIZE O50M1pre BY - (DM1_503 + grid)
	O50M1preB = (SIZE O50M1preA BY (WM1_503 - grid) UNDEROVER TRUNCATE WM1_503) AND O50M1preA

	// 1st 2*2
	F503M1 = RECTANGLES WM1_503 LM1_503 SM1_503 OFFSET OM1_503  INSIDE OF LAYER O50M1preB

	
	F503M1_EXP = SIZE F503M1 BY ( WM1_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M1preF1 = O50M1pre NOT (SIZE F503M1_EXP BY (SM1_502 + grid))
	O50M1preF = (SNAP (SIZE O50M1preF1 BY -grid) 5) AND O50M1preF1

	B50M1pre = (INT O50M1preF >= WM1_501 <= maxW_DM1V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M1preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M1pre2 = RECTANGLE B50M1pre >= WM1_501 BY >= minL_DM1V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M1pre3 = RECTANGLE B50M1pre2 <= maxW_DM1V_5011 BY <= maxL_DM1V_5011 ORTHOGONAL ONLY

	B50M1 = (B50M1pre3 NOT INTERACT (EXT B50M1pre3 < SM1_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M1s = ((SIZE B50M1 BY (SM1_501 + grid)) OR F401M1s) OR (SIZE F503M1_EXP BY (SM1_502 + grid))
	O50M1 = O50M1preF NOT B50M1s

	
	// 3rd, 0.5*1.2
	F502M1 = (RECTANGLES WM1_502 LM1_502 SM1_502 OFFSET OM1_502 INSIDE OF LAYER O50M1) NOT INTERACT IND_COIL_EXD
	F502M1s = (SIZE F502M1 BY (SM1_501 + grid)) OR B50M1s
	R502M1pre = O50M1 NOT F502M1s
	R502M1 = (SIZE R502M1pre BY (WM1_501/2 + grid) UNDEROVER TRUNCATE WM1_501) AND R502M1pre

	// 4th, 0.5*0.5
	F5012M1 = (RECTANGLES WM1_501 LM1_501 SM1_501 OFFSET OM1_501 INSIDE OF LAYER R502M1) NOT INTERACT IND_COIL_EXD
	F5012M1s = (SIZE F5012M1 BY (SM1_501 + grid)) OR F502M1s
	R5012M1pre = R502M1pre NOT F5012M1s
	R5012M1 = (SIZE R5012M1pre BY (WM1_501/2 + grid) UNDEROVER TRUNCATE WM1_501) AND R5012M1pre

	// 5th, regular 0.5*0.5
	F501M1 = (RECTANGLES WM1_501 LM1_501 SM1_501 INSIDE OF LAYER R5012M1) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M1s = (SIZE F501M1 BY (SM1_501 + grid)) OR F5012M1s

	F50M1 = (((B50M1 OR F502M1) OR F5012M1) OR F501M1) OR F503M1

//****************************************************************************
    
	exceedM1 = DENSITY M1x F30M1 F40M1 F50M1 > maxD_M1 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M1.den_exceed
	exceedM1DN2 = DENSITY M1x F30M1 F40M1 F50M1 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M1.DN.2.den_exceed

	removeM1R = ((PUSH (exceedM1 AND (D50M1 OR emptyM1))) NOT FRAME1) AND CHIP 
	removeM1 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM1R
	
	F30M1x = (F30M1 NOT INTERACT exceedM1DN2) NOT INTERACT removeM1
	F40M1x = (F40M1 NOT INTERACT exceedM1DN2) NOT INTERACT removeM1
	F50M1x = (F50M1 NOT INTERACT exceedM1DN2) NOT INTERACT removeM1
	FM1xA  = (F30M1x OR F40M1x) OR F50M1x
	FM1x   = FM1xA NOT INTERACT (EXT FM1xA < DM1_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM1
	lackM1 = DENSITY M1x FM1x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M1.den_lack
	RM1EXC = SIZE (((FM1x OR F303M1_EXP) OR F403M1_EXP) OR F503M1_EXP) BY (DM1_301 + grid)
	BigemptyM1 = PUSH ((SIZE emptyM1 BY 25 UNDEROVER) AND emptyM1)
    
	lackM1pRM = (((((PUSH lackM1) NOT RM1EXC) NOT BigemptyM1) NOT exceedM1) NOT FRAME1RM ) AND CHIP
	lackM1pRM_1 = WITH WIDTH lackM1pRM >= minWM1_304
	RM1p1 = RECTANGLES minLM1_304 minWM1_304 SM1_304 OFFSET OM1_304 INSIDE OF LAYER lackM1pRM_1
	lackM1pRM_2 = WITH WIDTH (lackM1pRM_1 NOT (SIZE RM1p1 BY (SM1_304 + grid))) >= minWM1_304
	RM1p2 = RECTANGLES minWM1_304 minLM1_304 SM1_304 OFFSET OM1_304 INSIDE OF LAYER lackM1pRM_2
        lackM1pRM_3pre = lackM1pRM_2 NOT (SIZE RM1p2 BY (SM1_304 + grid))
	lackM1pRM_3 = (SNAP (SIZE lackM1pRM_3pre BY -grid) 5) AND lackM1pRM_3pre 
	       
	RM1p3pre = (INT lackM1pRM_3 >= minWM1_304 <= maxWM1_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM1pRM_3 
	RM1p3pre2 = RECTANGLE RM1p3pre >= minWM1_304 BY >= minLM1_304 ORTHOGONAL ONLY// 0.13*0.6
	RM1p3 = RECTANGLE RM1p3pre2 <= maxWM1_304 BY <= maxLM1_304 ORTHOGONAL ONLY// 0.2*6

	RM1A = ((((RM1p1 OR RM1p2) OR RM1p3) OUTSIDE RM1EXC) OUTSIDE FRAME1RM) NOT INTERACT IND_COIL_EXD
	RM1F = RM1A NOT INTERACT (EXT RM1A < SM1_304 ABUT SINGULAR REGION)

#ENDIF

DM1F = COPY FM1x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM2

#IFDEF 34K_THICK_M2
	minOPENM2 = DENSITY M2x < minD_M2 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den
	emptyOPENM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M2Empty.den
        #IFDEF FILL_IN_SLOT
       	M2ExcHole  = COPY EMPTY	
        #ELSE
   	M2InnerHole = HOLES M2i INNER
	M2BigHole = SIZE M2InnerHole BY - excludeHoleSize/2
	M2ExcHole = (M2InnerHole OUTSIDE M2BigHole) NOT M2i
        #ENDIF	
        BLOCK2    = SIZE DM2EXCL BY (dm2DMEXCL + grid)
        FRAMEA2   = SIZE M2i BY (dm2M2 + grid)
	M2mid     = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i
	M2wide    = (SIZE M2mid BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i
	FRAMEB2   = SIZE M2wide BY (dm2WM2 + grid) // DM2 to 4.5um wide metal 3um
	FRAMEC2   = SIZE DUM2 BY (dm2DM2 + grid)    
	FRAME2Pre = ((FRAMEA2 OR FRAMEB2) OR FRAMEC2) OR M2ExcHole
	#IFDEF CBM_OVER_M2
        FRAME2 = ((((FRAME2Pre OR BLOCK2) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M2  
	#ELSE
	    FRAME2 = (((FRAME2Pre OR BLOCK2) OR NFILL) OR HVxx) OR OD_RDG_M2
	#ENDIF	
	OPENM2 = PUSH ((minOPENM2 OR emptyOPENM2) AND CHIP)
	FILL2 = OPENM2 NOT FRAME2
	FILLW2pre = SIZE FILL2 BY - (Wdm2M2 + grid)
	FILLW2 = (SIZE FILLW2pre BY (WdmW_M2 - grid) UNDEROVER TRUNCATE WdmW_M2) AND FILLW2pre
	M2FW = RECTANGLES WdmW_M2 WdmL_M2 WdmS_M2 OFFSET WdmO_M2 INSIDE OF LAYER FILLW2
	M2FW_EXP = SIZE M2FW BY (WdmS_M2 /2 + grid) OVERUNDER	// merge the gaps
	FILLM2pre = FILL2 NOT (SIZE M2FW_EXP BY (MdmS_M2 + grid))
	FILLM2 = (SIZE FILLM2pre BY (MdmW_M2 - grid) UNDEROVER TRUNCATE MdmW_M2) AND FILLM2pre
	M2F1 = RECTANGLES MdmW_M2 MdmL_M2 MdmS_M2 OFFSET MdmO_M2 INSIDE OF LAYER FILLM2
	M2R1pre = FILLM2pre NOT (SIZE M2F1 BY (dmS_M2 + grid))
	M2R1 = (SIZE M2R1pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R1pre

	M2F2 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R1
	M2R2pre = M2R1 NOT (SIZE M2F2 BY (dmS_M2 + grid))
	M2R2 = (SIZE M2R2pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R2pre

	M2F3 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R2
	M2R3pre = M2R2 NOT (SIZE M2F3 BY (dmS_M2 + grid))
	M2R3 = (SIZE M2R3pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R3pre
	
	M2F4 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 INSIDE OF LAYER M2R3 

	M2F = (((M2F1 OR M2F2) OR M2F3) OR M2F4) OR M2FW
	FM2 = M2F NOT INTERACT (EXT M2F < dmS_M2 ABUT SINGULAR REGION)

	maxOPENM2 = DENSITY M2x FM2 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Max.den
		       
	DM2F = FM2 OUTSIDE maxOPENM2

#ELSE
#IFDEF 12K_THICK_M2
	
	minOPENM2 = DENSITY M2x < minD_M2 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den
	emptyOPENM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M2Empty.den
#IFDEF FILL_IN_SLOT
       	M2ExcHole  = COPY EMPTY	
#ELSE
   	M2InnerHole = HOLES M2i INNER
	M2BigHole = SIZE M2InnerHole BY - excludeHoleSize/2 
	M2ExcHole = (M2InnerHole OUTSIDE M2BigHole) NOT M2i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK2 = SIZE DM2EXCL BY (dm2DMEXCL + grid)	// DM2 to DM2EXCL
    
        FRAMEA2 = SIZE M2i BY (dm2M2 + grid) // DM2 to metal
	M2mid = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i
	M2wide = (SIZE M2mid BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i
	FRAMEB2 = SIZE M2wide BY (dm2WM2 + grid) // DM2 to 4.5um wide metal, 1.5um
	FRAMEC2 = SIZE DUM2 BY (dm2DM2 + grid)   // ODM2 or DM2 to existed dummy metal 0.6um 
	FRAME2Pre = ((FRAMEA2 OR FRAMEB2) OR FRAMEC2) OR M2ExcHole
        #IFDEF CBM_OVER_M2
	   FRAME2 = ((((FRAME2Pre OR BLOCK2) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M2	// wrong setting will add nothing
        #ELSE 
	   FRAME2 = (((FRAME2Pre OR BLOCK2) OR NFILL) OR HVxx) OR OD_RDG_M2
        #ENDIF 

	OPENM2 = PUSH ((minOPENM2 OR emptyOPENM2) AND CHIP)
	FILL2 = OPENM2 NOT FRAME2
	FILLW2pre = SIZE FILL2 BY - (Wdm2M2 + grid)
	FILLW2 = (SIZE FILLW2pre BY (WdmW_M2 - grid) UNDEROVER TRUNCATE WdmW_M2) AND FILLW2pre
	M2FW = RECTANGLES WdmW_M2 WdmL_M2 WdmS_M2 OFFSET WdmO_M2 INSIDE OF LAYER FILLW2
	M2FW_EXP = SIZE M2FW BY (WdmS_M2 /2 + grid) OVERUNDER //merge the gaps 
	FILLM2pre = FILL2 NOT (SIZE M2FW_EXP BY (MdmS_M2 + grid))
	FILLM2 = (SIZE FILLM2pre BY (MdmW_M2 - grid) UNDEROVER TRUNCATE MdmW_M2) AND FILLM2pre
	M2F1 = RECTANGLES MdmW_M2 MdmL_M2 MdmS_M2 OFFSET MdmO_M2 INSIDE OF LAYER FILLM2
	M2R1pre = FILLM2pre NOT (SIZE M2F1 BY (dmS_M2 + grid))
	M2R1 = (SIZE M2R1pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R1pre

	M2F2 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R1
	M2R2pre = M2R1 NOT (SIZE M2F2 BY (dmS_M2 + grid))
	M2R2 = (SIZE M2R2pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R2pre

	M2F3 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R2
	M2R3pre = M2R2 NOT (SIZE M2F3 BY (dmS_M2 + grid))
	M2R3 = (SIZE M2R3pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R3pre
	
	M2F4 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 INSIDE OF LAYER M2R3

	M2F = (((M2F1 OR M2F2) OR M2F3) OR M2F4) OR M2FW
	FM2 = M2F NOT INTERACT (EXT M2F < dmS_M2 ABUT SINGULAR REGION)
    
	maxOPENM2 = DENSITY M2x FM2 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Max.den
		       
	FM2F = FM2 OUTSIDE maxOPENM2

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M2 = DENSITY M2x FM2F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den

	RM2EXC = SIZE FM2F BY (Odm2DM2 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M2pM = ((((PUSH D25M2) NOT FRAME2) NOT RM2EXC) NOT CTMDMY) AND CHIP
	D25M2pM_1 = (SIZE D25M2pM BY (OdmW_M2 /2 - grid) UNDEROVER TRUNCATE OdmW_M2) AND D25M2pM 
		
	RM2p1 = RECTANGLES OdmW_M2 OdmL_M2 OdmS_M2 INSIDE OF LAYER D25M2pM_1
	D25M2pM_2 = D25M2pM_1 NOT (SIZE RM2p1 BY (OdmS_M2 + grid))
	RM2p2 = RECTANGLES OdmL_M2 OdmW_M2 OdmS_M2 INSIDE OF LAYER D25M2pM_2

	D25M2pM_3pre = D25M2pM_2 NOT (SIZE RM2p2 BY (OdmS_M2 + grid))
	D25M2pM_3 = (SNAP (SIZE D25M2pM_3pre BY -grid) 5) AND D25M2pM_3pre
	RM2p3a = (INT D25M2pM_3 >=OdmW_M2 <=maxOdmW_M2 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M2pM_3 
	RM2p3b = RECTANGLE RM2p3a >= OdmW_M2 BY >= OdmL_M2 ORTHOGONAL ONLY // 1*1.44
	RM2p3  = RECTANGLE RM2p3b <= maxOdmW_M2 BY <= maxOdmL_M2 ORTHOGONAL ONLY// 1.5*6
	RM2A = (((RM2p1 OR RM2p2) OR RM2p3) OUTSIDE RM2EXC) OUTSIDE FRAME2
	RM2  = RM2A NOT INTERACT (EXT RM2A < OdmS_M2 ABUT SINGULAR REGION)
	
	DM2F = FM2F OR RM2

#ELSE
#IFDEF 9K_THICK_M2
	minOPENM2 = DENSITY M2x < minD_M2 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den
	emptyOPENM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M2Empty.den

#IFDEF FILL_IN_SLOT
       	M2ExcHole  = COPY EMPTY	
#ELSE
   	M2InnerHole = HOLES M2i INNER
	M2BigHole = SIZE M2InnerHole BY - excludeHoleSize/2 
	M2ExcHole = (M2InnerHole OUTSIDE M2BigHole) NOT M2i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK2 = SIZE DM2EXCL BY (dm2DMEXCL + grid)	// DM2 to DM2EXCL
	FRAMEA2 = SIZE M2i BY (dm2M2 + grid) // DM2 to metal

    
	M2mid = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i
	M2wide = (SIZE M2mid BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i
	FRAMEB2 = SIZE M2wide BY (dm2WM2 + grid) // DM2 to 4.5um wide metal, 1.5um
	FRAMEC2 = SIZE DUM2 BY (dm2DM2 + grid)   // DM2 to existed dummy metal 0.6um 
	FRAME2Pre = ((FRAMEA2 OR FRAMEB2) OR FRAMEC2) OR M2ExcHole
	#IFDEF CBM_OVER_M2
	    FRAME2 = (((((FRAME2Pre OR BLOCK2) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M2
	#ELSE
	    FRAME2 = ((((FRAME2Pre OR BLOCK2) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M2
    #ENDIF    
	OPENM2 = PUSH ((minOPENM2 OR emptyOPENM2) AND CHIP)
    #IFDEF CBM_OVER_M1
        CTMDMY_BLOCK1 = SIZE M2x_CTMDMY BY (dm2M2_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
	    FILL2 = (OPENM2 NOT FRAME2) NOT CTMDMY_BLOCK
	#ELSE
        FILL2 = OPENM2 NOT FRAME2
    #ENDIF

	FILLW2pre = SIZE FILL2 BY - (Wdm2M2 + grid)
	FILLW2 = (SIZE FILLW2pre BY (WdmW_M2 - grid) UNDEROVER TRUNCATE WdmW_M2) AND FILLW2pre
	M2FW = RECTANGLES WdmW_M2 WdmL_M2 WdmS_M2 OFFSET WdmO_M2 INSIDE OF LAYER FILLW2
	M2FW_EXP = SIZE M2FW BY (WdmS_M2 /2 + grid) OVERUNDER //merge the gaps 
	FILLM2pre = FILL2 NOT (SIZE M2FW_EXP BY (MdmS_M2 + grid))
	FILLM2 = (SIZE FILLM2pre BY (MdmW_M2 - grid) UNDEROVER TRUNCATE MdmW_M2) AND FILLM2pre
	M2F1 = RECTANGLES MdmW_M2 MdmL_M2 MdmS_M2 OFFSET MdmO_M2 INSIDE OF LAYER FILLM2
	M2R1pre = FILLM2pre NOT (SIZE M2F1 BY (dmS_M2 + grid))
	M2R1 = (SIZE M2R1pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R1pre

	M2F2 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R1
	M2R2pre = M2R1 NOT (SIZE M2F2 BY (dmS_M2 + grid))
	M2R2 = (SIZE M2R2pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R2pre

	M2F3 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R2
	M2R3pre = M2R2 NOT (SIZE M2F3 BY (dmS_M2 + grid))
	M2R3 = (SIZE M2R3pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R3pre
	
	M2F4 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 INSIDE OF LAYER M2R3

	M2F = ((((M2F1 OR M2F2) OR M2F3) OR M2F4) OR M2FW) NOT INTERACT IND_COIL_EXD
	FM2 = M2F NOT INTERACT (EXT M2F < dmS_M2 ABUT SINGULAR REGION)
    
	maxOPENM2 = DENSITY M2x FM2 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Max.den
		       
	FM2F = FM2 OUTSIDE maxOPENM2

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M2 = DENSITY M2x FM2F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den

	RM2EXC = SIZE FM2F BY (Odm2DM2 + grid)
// do not fill DMz_S over CTMDMY 
	D25M2pM = ((((PUSH D25M2) NOT FRAME2) NOT RM2EXC) NOT CTMDMY) AND CHIP
	D25M2pM_1 = (SIZE D25M2pM BY (OdmW_M2 /2 - grid) UNDEROVER TRUNCATE OdmW_M2) AND D25M2pM 

	RM2p1 = RECTANGLES OdmW_M2 OdmL_M2 OdmS_M2 INSIDE OF LAYER D25M2pM_1
	D25M2pM_2 = D25M2pM_1 NOT (SIZE RM2p1 BY (OdmS_M2 + grid))
	RM2p2 = RECTANGLES OdmL_M2 OdmW_M2 OdmS_M2 INSIDE OF LAYER D25M2pM_2

	D25M2pM_3pre = D25M2pM_2 NOT (SIZE RM2p2 BY (OdmS_M2 + grid))
	D25M2pM_3 = (SNAP (SIZE D25M2pM_3pre BY -grid) 5) AND D25M2pM_3pre
	RM2p3a = (INT D25M2pM_3 >=OdmW_M2 <=maxOdmW_M2 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M2pM_3 
	RM2p3b = RECTANGLE RM2p3a >= OdmW_M2 BY >= OdmL_M2 ORTHOGONAL ONLY// 0.4*1.42
	RM2p3  = RECTANGLE RM2p3b <= maxOdmW_M2 BY <= maxOdmL_M2 ORTHOGONAL ONLY// 1.5*6
	RM2A = ((((RM2p1 OR RM2p2) OR RM2p3) OUTSIDE RM2EXC) OUTSIDE FRAME2) NOT INTERACT IND_COIL_EXD
	RM2  = RM2A NOT INTERACT (EXT RM2A < OdmS_M2 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M1
        FILLM2_CTMDMY = (CTMDMY NOT (SIZE ((FM2F OR RM2) OR (M2x NOT OUTSIDE CTMDMY)) BY (dmS_M2_CTMDMY + grid))) NOT FRAME2
 	    M2F1_CTMDMY = RECTANGLES WdmW_M2 WdmL_M2 dmS_M2_CTMDMY OFFSET WdmO_M2 INSIDE OF LAYER FILLM2_CTMDMY
        M2R1_CTMDMY = FILLM2_CTMDMY NOT (SIZE M2F1_CTMDMY BY (dmS_M2_CTMDMY + grid))
        M2F2_CTMDMY = RECTANGLES WdmW_M2 WdmL_M2 dmS_M2_CTMDMY OFFSET WdmO_M2 INSIDE OF LAYER M2R1_CTMDMY
        M2R2_CTMDMY = WITH WIDTH (M2R1_CTMDMY NOT (SIZE M2F2_CTMDMY BY (dmS_M2_CTMDMY + grid))) >= min_dmW_M2_CTMDMY
        M2F3_CTMDMY = RECTANGLES min_dmW_M2_CTMDMY min_dmW_M2_CTMDMY dmS_M2_CTMDMY OFFSET dmO_M2 INSIDE OF LAYER M2R2_CTMDMY
	    M2R3_CTMDMY = WITH WIDTH (M2R2_CTMDMY NOT (SIZE M2F3_CTMDMY BY (dmS_M2_CTMDMY + grid))) >= min_dmW_M2_CTMDMY
        M2F4_CTMDMY = RECTANGLES min_dmW_M2_CTMDMY min_dmW_M2_CTMDMY dmS_M2_CTMDMY OFFSET dmO_M2 INSIDE OF LAYER M2R3_CTMDMY
	    M2F_CTMDMY_A = ((M2F1_CTMDMY OR M2F2_CTMDMY) OR M2F3_CTMDMY) OR  M2F4_CTMDMY
	    M2F_CTMDMY = M2F_CTMDMY_A NOT INTERACT (EXT M2F_CTMDMY_A < dmS_M2_CTMDMY ABUT SINGULAR REGION)
	    DM2F_pre = (FM2F OR RM2) OR M2F_CTMDMY
    #ELSE
        DM2F_pre = FM2F OR RM2
    #ENDIF
        DM2F = COPY DM2F_pre
#ELSE	
#IFDEF 5K_THICK_M2
	minOPENM2 = DENSITY M2x < minD_M2 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den
	emptyOPENM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M2Empty.den

#IFDEF FILL_IN_SLOT
       	M2ExcHole  = COPY EMPTY	
#ELSE
   	M2InnerHole = HOLES M2i INNER
	M2BigHole = SIZE M2InnerHole BY - excludeHoleSize/2 
	M2ExcHole = (M2InnerHole OUTSIDE M2BigHole) NOT M2i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK2 = SIZE DM2EXCL BY (dm2DMEXCL + grid)	// DM2 to DM2EXCL
    
        FRAMEA2 = SIZE M2i BY (dm2M2 + grid) // DM2 to metal
	M2mid = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i
	M2wide = (SIZE M2mid BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i
	FRAMEB2 = SIZE M2wide BY (dm2WM2 + grid) // DM2 to 4.5um wide metal, 1.5um
	FRAMEC2 = SIZE DUM2 BY (dm2DM2 + grid)   // ODM2 or DM2 to existed dummy metal 0.6um 
	FRAME2Pre = ((FRAMEA2 OR FRAMEB2) OR FRAMEC2) OR M2ExcHole
	#IFDEF CBM_OVER_M2
	   FRAME2 = ((((FRAME2Pre OR BLOCK2) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M2
        #ELSE
	   FRAME2 = (((FRAME2Pre OR BLOCK2) OR NFILL) OR HVxx) OR OD_RDG_M2
        #ENDIF
	OPENM2 = PUSH ((minOPENM2 OR emptyOPENM2) AND CHIP)
	FILL2 = OPENM2 NOT FRAME2
	FILLW2pre = SIZE FILL2 BY - (Wdm2M2 + grid)
	FILLW2 = (SIZE FILLW2pre BY (WdmW_M2 - grid) UNDEROVER TRUNCATE WdmW_M2) AND FILLW2pre
	M2FW = RECTANGLES WdmW_M2 WdmL_M2 WdmS_M2 OFFSET WdmO_M2 INSIDE OF LAYER FILLW2
	M2FW_EXP = SIZE M2FW BY (WdmS_M2 /2 + grid) OVERUNDER //merge the gaps 
	FILLM2pre = FILL2 NOT (SIZE M2FW_EXP BY (MdmS_M2 + grid))
	FILLM2 = (SIZE FILLM2pre BY (MdmW_M2 - grid) UNDEROVER TRUNCATE MdmW_M2) AND FILLM2pre
	M2F1 = RECTANGLES MdmW_M2 MdmL_M2 MdmS_M2 OFFSET MdmO_M2 INSIDE OF LAYER FILLM2
	M2R1pre = FILLM2pre NOT (SIZE M2F1 BY (dmS_M2 + grid))
	M2R1 = (SIZE M2R1pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R1pre

	M2F2 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R1
	M2R2pre = M2R1 NOT (SIZE M2F2 BY (dmS_M2 + grid))
	M2R2 = (SIZE M2R2pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R2pre

	M2F3 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 OFFSET dmO_M2 INSIDE OF LAYER M2R2
	M2R3pre = M2R2 NOT (SIZE M2F3 BY (dmS_M2 + grid))
	M2R3 = (SIZE M2R3pre BY (dmW_M2/2 - grid) UNDEROVER TRUNCATE dmW_M2) AND M2R3pre
	
	M2F4 = RECTANGLES dmW_M2 dmL_M2 dmS_M2 INSIDE OF LAYER M2R3

	M2F = (((M2F1 OR M2F2) OR M2F3) OR M2F4) OR M2FW
	FM2 = M2F NOT INTERACT (EXT M2F < dmS_M2 ABUT SINGULAR REGION)
    
	maxOPENM2 = DENSITY M2x FM2 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Max.den
		       
	FM2F = FM2 OUTSIDE maxOPENM2

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M2 = DENSITY M2x FM2F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den

	RM2EXC = SIZE FM2F BY (Odm2DM2 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M2pM = ((((PUSH D25M2) NOT FRAME2) NOT RM2EXC) NOT CTMDMY) AND CHIP
	D25M2pM_1 = (SIZE D25M2pM BY (OdmW_M2 /2 - grid) UNDEROVER TRUNCATE OdmW_M2) AND D25M2pM 
		
	RM2p1 = RECTANGLES OdmW_M2 OdmL_M2 OdmS_M2 INSIDE OF LAYER D25M2pM_1
	D25M2pM_2 = D25M2pM_1 NOT (SIZE RM2p1 BY (OdmS_M2 + grid))
	RM2p2 = RECTANGLES OdmL_M2 OdmW_M2 OdmS_M2 INSIDE OF LAYER D25M2pM_2

	D25M2pM_3pre = D25M2pM_2 NOT (SIZE RM2p2 BY (OdmS_M2 + grid))
	D25M2pM_3 = (SNAP (SIZE D25M2pM_3pre BY -grid) 5) AND D25M2pM_3pre
	RM2p3a = (INT D25M2pM_3 >=OdmW_M2 <=maxOdmW_M2 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M2pM_3 
	RM2p3b = RECTANGLE RM2p3a >= OdmW_M2 BY >= OdmL_M2 ORTHOGONAL ONLY// 0.8*1.42
	RM2p3  = RECTANGLE RM2p3b <= maxOdmW_M2 BY <= maxOdmL_M2 ORTHOGONAL ONLY// 1.5*6
	RM2A = (((RM2p1 OR RM2p2) OR RM2p3) OUTSIDE RM2EXC) OUTSIDE FRAME2
	RM2  = RM2A NOT INTERACT (EXT RM2A < OdmS_M2 ABUT SINGULAR REGION)
	
	DM2F = FM2F OR RM2

#ELSE
	D30M2 = DENSITY M2x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M2.den30
	D40M2 = DENSITY M2x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M2.den40
	D50M2 = DENSITY M2x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M2.den50
	emptyM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M2.den_empty

#IFDEF FILL_IN_SLOT
       	M2ExcHole  = COPY EMPTY	
#ELSE
   	M2InnerHole = HOLES M2i INNER
	M2BigHole = SIZE M2InnerHole BY - excludeHoleSize/2 
	M2ExcHole = (M2InnerHole OUTSIDE M2BigHole) NOT M2i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK2 = SIZE DM2EXCL BY (dm2DMEXCL + grid)	// DM2 to DM2EXCL
	
        FRAMEA2 = SIZE M2i BY (DM2_301 + grid)	  // DM2 to real metal
        FRAMEA2RM = SIZE M2i BY (DM2_304 + grid)	  // RM2 to real metal

	FRAMEA2_45 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (DM245_301 + grid) // DM2 to 45 degree metal
	FRAMEA2RM_45 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (DM245_304 + grid) // DM2 to 45 degree real metal
        
	M2mid = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i
	
	M2wide_W1 = (SIZE M2mid BY wideM2_W1/2 UNDEROVER TRUNCATE wideM2_W1/2) AND M2i	
	M2wide_W11 = (SIZE M2wide_W1 BY wideM2_W11/2 UNDEROVER TRUNCATE wideM2_W11/2) AND M2i
	M2wide_W2 = (SIZE M2wide_W1 BY wideM2_W2/2 UNDEROVER TRUNCATE wideM2_W2/2) AND M2i
	M2wide = (SIZE M2wide_W2 BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i

	FRAMEB2 = SIZE M2wide BY (dm2WM2 + grid) // DM2 to wide metal 4.5
	FRAMEB2_W2 = SIZE M2wide_W2 BY (dm2WM2_W2 + grid) // DM2 to 1.5um wide metal 0.5
	FRAMEB2_W1 = SIZE M2wide_W1 BY (dm2WM2_W1 + grid) // DM2 to 0.21um wide metal
	FRAMEB2_W11 = SIZE M2wide_W11 BY (dm2WM2_W11 + grid) // DM2 to 0.38um wide metal
    
	FRAMEC2 = SIZE DUM2 BY (dm2DM2 + grid)   // DM2 to existed dummy metal 0.4
	FRAMEC2RM = SIZE DUM2 BY (Odm2DM2 + grid)   // ODM2 to existed dummy metal 0.6 
	FRAME2Pre = ((((FRAMEA2 OR FRAMEB2) OR FRAMEC2) OR M2ExcHole) OR FRAMEB2_W2) OR FRAMEA2_45
	FRAME2PreRM = ((((((FRAMEA2RM OR FRAMEB2) OR FRAMEC2RM) OR M2ExcHole) OR FRAMEB2_W2) OR FRAMEB2_W1) OR FRAMEB2_W11) OR FRAMEA2RM_45
	
	#IFDEF CBM_OVER_M2
	    FRAME2 = (((((FRAME2Pre OR BLOCK2) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M2
	    FRAME2RM = ((((FRAME2PreRM OR BLOCK2) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M2
	#ELSE
        FRAME2 = ((((FRAME2Pre OR BLOCK2) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M2
	    FRAME2RM = (((FRAME2PreRM OR BLOCK2) OR NFILLRM) OR HVxx) OR OD_RDG_M2
	#ENDIF

//****************************************************************************

	D30M2p = (PUSH D30M2) NOT FRAME2
	O30M2pre = D30M2p AND CHIP
	FD21M2s = COPY FRAME2

	O30M2preA = SIZE O30M2pre BY - (DM2_303 + grid)
	O30M2preB = (SIZE O30M2preA BY (WM2_303 - grid) UNDEROVER TRUNCATE WM2_303) AND O30M2preA

	// 1st 2*2
	F303M2 = (RECTANGLES WM2_303 LM2_303 SM2_303 OFFSET OM2_303  INSIDE OF LAYER O30M2preB) NOT INTERACT IND_COIL_EXD

	
	F303M2_EXP = SIZE F303M2 BY ( WM2_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M2preF1 = O30M2pre NOT (SIZE F303M2_EXP BY (SM2_302 + grid))
	O30M2preF = (SNAP (SIZE O30M2preF1 BY -grid) 5) AND O30M2preF1

	B30M2pre = (INT O30M2preF >= WM2_301 <= maxW_DM2V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M2preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M2pre2 = RECTANGLE B30M2pre >= WM2_301 BY >= minL_DM2V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M2pre3 = RECTANGLE B30M2pre2 <= maxW_DM2V_3011 BY <= maxL_DM2V_3011 ORTHOGONAL ONLY

	B30M2 = (B30M2pre3 NOT INTERACT (EXT B30M2pre3 < SM2_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M2s = ((SIZE B30M2 BY (SM2_301 + grid)) OR FD21M2s) OR (SIZE F303M2_EXP BY (SM2_302 + grid))
	O30M2 = O30M2preF NOT B30M2s

	
	// 3rd, 0.5*1.2
	F302M2 = (RECTANGLES WM2_302 LM2_302 SM2_302 OFFSET OM2_302 INSIDE OF LAYER O30M2) NOT INTERACT IND_COIL_EXD
	F302M2s = (SIZE F302M2 BY (SM2_301 + grid)) OR B30M2s
	R302M2pre = O30M2 NOT F302M2s
	R302M2 = (SIZE R302M2pre BY (WM2_301/2 + grid) UNDEROVER TRUNCATE WM2_301) AND R302M2pre

	// 4th, 0.5*0.5
	F3012M2 = (RECTANGLES WM2_301 LM2_301 SM2_301 OFFSET OM2_301 INSIDE OF LAYER R302M2) NOT INTERACT IND_COIL_EXD
	F3012M2s = (SIZE F3012M2 BY (SM2_301 + grid)) OR F302M2s
	R3012M2pre = R302M2pre NOT F3012M2s
	R3012M2 = (SIZE R3012M2pre BY (WM2_301/2 + grid) UNDEROVER TRUNCATE WM2_301) AND R3012M2pre

	// 5th, regular 0.5*0.5
	F301M2 = (RECTANGLES WM2_301 LM2_301 SM2_301 INSIDE OF LAYER R3012M2) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M2s = (SIZE F301M2 BY (SM2_301 + grid)) OR F3012M2s

	F30M2 = (((B30M2 OR F302M2) OR F3012M2) OR F301M2) OR F303M2
	O40M2pre = (((PUSH D40M2) NOT FRAME2) NOT F301M2s) AND CHIP


	O40M2preA = SIZE O40M2pre BY - (DM2_403 + grid)
	O40M2preB = (SIZE O40M2preA BY (WM2_403 - grid) UNDEROVER TRUNCATE WM2_403) AND O40M2preA

	// 1st 2*2
	F403M2 = RECTANGLES WM2_403 LM2_403 SM2_403 OFFSET OM2_403  INSIDE OF LAYER O40M2preB

	
	F403M2_EXP = SIZE F403M2 BY ( WM2_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M2preF1 = O40M2pre NOT (SIZE F403M2_EXP BY (SM2_402 + grid))
	O40M2preF = (SNAP (SIZE O40M2preF1 BY -grid) 5) AND O40M2preF1

	B40M2pre = (INT O40M2preF >= WM2_401 <= maxW_DM2V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M2preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M2pre2 = RECTANGLE B40M2pre >= WM2_401 BY >= minL_DM2V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M2pre3 = RECTANGLE B40M2pre2 <= maxW_DM2V_4011 BY <= maxL_DM2V_4011 ORTHOGONAL ONLY

	B40M2 = (B40M2pre3 NOT INTERACT (EXT B40M2pre3 < SM2_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M2s = ((SIZE B40M2 BY (SM2_401 + grid)) OR F301M2s) OR (SIZE F403M2_EXP BY (SM2_402 + grid))
	O40M2 = O40M2preF NOT B40M2s

	
	// 3rd, 0.5*1.2
	F402M2 = (RECTANGLES WM2_402 LM2_402 SM2_402 OFFSET OM2_402 INSIDE OF LAYER O40M2) NOT INTERACT IND_COIL_EXD
	F402M2s = (SIZE F402M2 BY (SM2_401 + grid)) OR B40M2s
	R402M2pre = O40M2 NOT F402M2s
	R402M2 = (SIZE R402M2pre BY (WM2_401/2 + grid) UNDEROVER TRUNCATE WM2_401) AND R402M2pre

	// 4th, 0.5*0.5
	F4012M2 = (RECTANGLES WM2_401 LM2_401 SM2_401 OFFSET OM2_401 INSIDE OF LAYER R402M2) NOT INTERACT IND_COIL_EXD
	F4012M2s = (SIZE F4012M2 BY (SM2_401 + grid)) OR F402M2s
	R4012M2pre = R402M2pre NOT F4012M2s
	R4012M2 = (SIZE R4012M2pre BY (WM2_401/2 + grid) UNDEROVER TRUNCATE WM2_401) AND R4012M2pre

	// 5th, regular 0.5*0.5
	F401M2 = (RECTANGLES WM2_401 LM2_401 SM2_401 INSIDE OF LAYER R4012M2) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M2s = (SIZE F401M2 BY (SM2_401 + grid)) OR F4012M2s

	F40M2 = (((B40M2 OR F402M2) OR F4012M2) OR F401M2) OR F403M2
	O50M2pre = (((PUSH (D50M2 OR emptyM2)) NOT FRAME2) NOT F401M2s) AND CHIP


	O50M2preA = SIZE O50M2pre BY - (DM2_503 + grid)
	O50M2preB = (SIZE O50M2preA BY (WM2_503 - grid) UNDEROVER TRUNCATE WM2_503) AND O50M2preA

	// 1st 2*2
	F503M2 = RECTANGLES WM2_503 LM2_503 SM2_503 OFFSET OM2_503  INSIDE OF LAYER O50M2preB

	
	F503M2_EXP = SIZE F503M2 BY ( WM2_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M2preF1 = O50M2pre NOT (SIZE F503M2_EXP BY (SM2_502 + grid))
	O50M2preF = (SNAP (SIZE O50M2preF1 BY -grid) 5) AND O50M2preF1

	B50M2pre = (INT O50M2preF >= WM2_501 <= maxW_DM2V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M2preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M2pre2 = RECTANGLE B50M2pre >= WM2_501 BY >= minL_DM2V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M2pre3 = RECTANGLE B50M2pre2 <= maxW_DM2V_5011 BY <= maxL_DM2V_5011 ORTHOGONAL ONLY

	B50M2 = (B50M2pre3 NOT INTERACT (EXT B50M2pre3 < SM2_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M2s = ((SIZE B50M2 BY (SM2_501 + grid)) OR F401M2s) OR (SIZE F503M2_EXP BY (SM2_502 + grid))
	O50M2 = O50M2preF NOT B50M2s

	
	// 3rd, 0.5*1.2
	F502M2 = (RECTANGLES WM2_502 LM2_502 SM2_502 OFFSET OM2_502 INSIDE OF LAYER O50M2) NOT INTERACT IND_COIL_EXD
	F502M2s = (SIZE F502M2 BY (SM2_501 + grid)) OR B50M2s
	R502M2pre = O50M2 NOT F502M2s
	R502M2 = (SIZE R502M2pre BY (WM2_501/2 + grid) UNDEROVER TRUNCATE WM2_501) AND R502M2pre

	// 4th, 0.5*0.5
	F5012M2 = (RECTANGLES WM2_501 LM2_501 SM2_501 OFFSET OM2_501 INSIDE OF LAYER R502M2) NOT INTERACT IND_COIL_EXD
	F5012M2s = (SIZE F5012M2 BY (SM2_501 + grid)) OR F502M2s
	R5012M2pre = R502M2pre NOT F5012M2s
	R5012M2 = (SIZE R5012M2pre BY (WM2_501/2 + grid) UNDEROVER TRUNCATE WM2_501) AND R5012M2pre

	// 5th, regular 0.5*0.5
	F501M2 = (RECTANGLES WM2_501 LM2_501 SM2_501 INSIDE OF LAYER R5012M2) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M2s = (SIZE F501M2 BY (SM2_501 + grid)) OR F5012M2s

	F50M2 = (((B50M2 OR F502M2) OR F5012M2) OR F501M2) OR F503M2

//****************************************************************************
    
	exceedM2 = DENSITY M2x F30M2 F40M2 F50M2 > maxD_M2 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M2.den_exceed
	exceedM2DN2 = DENSITY M2x F30M2 F40M2 F50M2 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M2.DN.2.den_exceed

	removeM2R = ((PUSH (exceedM2 AND (D50M2 OR emptyM2))) NOT FRAME2) AND CHIP 
	removeM2 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM2R
	
	F30M2x = (F30M2 NOT INTERACT exceedM2DN2) NOT INTERACT removeM2
	F40M2x = (F40M2 NOT INTERACT exceedM2DN2) NOT INTERACT removeM2
	F50M2x = (F50M2 NOT INTERACT exceedM2DN2) NOT INTERACT removeM2
	FM2xA  = (F30M2x OR F40M2x) OR F50M2x
	FM2x   = FM2xA NOT INTERACT (EXT FM2xA < DM2_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM2
	lackM2 = DENSITY M2x FM2x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M2.den_lack
	RM2EXC = SIZE (((FM2x OR F303M2_EXP) OR F403M2_EXP) OR F503M2_EXP) BY (DM2_301 + grid)
	BigemptyM2 = PUSH ((SIZE emptyM2 BY 25 UNDEROVER) AND emptyM2)
    
	lackM2pRM = (((((PUSH lackM2) NOT RM2EXC) NOT BigemptyM2) NOT exceedM2) NOT FRAME2RM ) AND CHIP
	lackM2pRM_1 = WITH WIDTH lackM2pRM >= minWM2_304
        RM2p1 = RECTANGLES minWM2_304 minLM2_304 SM2_304 OFFSET OM2_304 INSIDE OF LAYER lackM2pRM_1
	lackM2pRM_2 = WITH WIDTH (lackM2pRM_1 NOT (SIZE RM2p1 BY (SM2_304 + grid))) >= minWM2_304
        RM2p2 = RECTANGLES minLM2_304 minWM2_304 SM2_304 OFFSET OM2_304 INSIDE OF LAYER lackM2pRM_2
        lackM2pRM_3pre = lackM2pRM_2 NOT (SIZE RM2p2 BY (SM2_304 + grid))
	lackM2pRM_3 = (SNAP (SIZE lackM2pRM_3pre BY -grid) 5) AND lackM2pRM_3pre 
	       
	RM2p3pre = (INT lackM2pRM_3 >= minWM2_304 <= maxWM2_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM2pRM_3 
	RM2p3pre2 = RECTANGLE RM2p3pre >= minWM2_304 BY >= minLM2_304 ORTHOGONAL ONLY// 0.13*0.6
	RM2p3 = RECTANGLE RM2p3pre2 <= maxWM2_304 BY <= maxLM2_304 ORTHOGONAL ONLY// 0.2*6

	RM2A = ((((RM2p1 OR RM2p2) OR RM2p3) OUTSIDE RM2EXC) OUTSIDE FRAME2RM) NOT INTERACT IND_COIL_EXD
	RM2F = RM2A NOT INTERACT (EXT RM2A < SM2_304 ABUT SINGULAR REGION)

#ENDIF

DM2F = COPY FM2x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM3

#IFDEF 34K_THICK_M3
	minOPENM3 = DENSITY M3x < minD_M3 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den
	emptyOPENM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M3Empty.den
        #IFDEF FILL_IN_SLOT
       	M3ExcHole  = COPY EMPTY	
        #ELSE
   	M3InnerHole = HOLES M3i INNER
	M3BigHole = SIZE M3InnerHole BY - excludeHoleSize/2
	M3ExcHole = (M3InnerHole OUTSIDE M3BigHole) NOT M3i
        #ENDIF	
        BLOCK3    = SIZE DM3EXCL BY (dm2DMEXCL + grid)
        FRAMEA3   = SIZE M3i BY (dm2M3 + grid)
	M3mid     = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i
	M3wide    = (SIZE M3mid BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i
	FRAMEB3   = SIZE M3wide BY (dm2WM3 + grid) // DM3 to 4.5um wide metal 3um
	FRAMEC3   = SIZE DUM3 BY (dm2DM3 + grid)    
	FRAME3Pre = ((FRAMEA3 OR FRAMEB3) OR FRAMEC3) OR M3ExcHole
	#IFDEF CBM_OVER_M3
        FRAME3 = ((((FRAME3Pre OR BLOCK3) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M3  
	#ELSE
	    FRAME3 = (((FRAME3Pre OR BLOCK3) OR NFILL) OR HVxx) OR OD_RDG_M3
	#ENDIF	
	OPENM3 = PUSH ((minOPENM3 OR emptyOPENM3) AND CHIP)
	FILL3 = OPENM3 NOT FRAME3
	FILLW3pre = SIZE FILL3 BY - (Wdm2M3 + grid)
	FILLW3 = (SIZE FILLW3pre BY (WdmW_M3 - grid) UNDEROVER TRUNCATE WdmW_M3) AND FILLW3pre
	M3FW = RECTANGLES WdmW_M3 WdmL_M3 WdmS_M3 OFFSET WdmO_M3 INSIDE OF LAYER FILLW3
	M3FW_EXP = SIZE M3FW BY (WdmS_M3 /2 + grid) OVERUNDER	// merge the gaps
	FILLM3pre = FILL3 NOT (SIZE M3FW_EXP BY (MdmS_M3 + grid))
	FILLM3 = (SIZE FILLM3pre BY (MdmW_M3 - grid) UNDEROVER TRUNCATE MdmW_M3) AND FILLM3pre
	M3F1 = RECTANGLES MdmW_M3 MdmL_M3 MdmS_M3 OFFSET MdmO_M3 INSIDE OF LAYER FILLM3
	M3R1pre = FILLM3pre NOT (SIZE M3F1 BY (dmS_M3 + grid))
	M3R1 = (SIZE M3R1pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R1pre

	M3F2 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R1
	M3R2pre = M3R1 NOT (SIZE M3F2 BY (dmS_M3 + grid))
	M3R2 = (SIZE M3R2pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R2pre

	M3F3 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R2
	M3R3pre = M3R2 NOT (SIZE M3F3 BY (dmS_M3 + grid))
	M3R3 = (SIZE M3R3pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R3pre
	
	M3F4 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 INSIDE OF LAYER M3R3 

	M3F = (((M3F1 OR M3F2) OR M3F3) OR M3F4) OR M3FW
	FM3 = M3F NOT INTERACT (EXT M3F < dmS_M3 ABUT SINGULAR REGION)

	maxOPENM3 = DENSITY M3x FM3 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Max.den
		       
	DM3F = FM3 OUTSIDE maxOPENM3

#ELSE
#IFDEF 12K_THICK_M3
	
	minOPENM3 = DENSITY M3x < minD_M3 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den
	emptyOPENM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M3Empty.den
#IFDEF FILL_IN_SLOT
       	M3ExcHole  = COPY EMPTY	
#ELSE
   	M3InnerHole = HOLES M3i INNER
	M3BigHole = SIZE M3InnerHole BY - excludeHoleSize/2 
	M3ExcHole = (M3InnerHole OUTSIDE M3BigHole) NOT M3i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK3 = SIZE DM3EXCL BY (dm2DMEXCL + grid)	// DM3 to DM3EXCL
    
        FRAMEA3 = SIZE M3i BY (dm2M3 + grid) // DM3 to metal
	M3mid = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i
	M3wide = (SIZE M3mid BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i
	FRAMEB3 = SIZE M3wide BY (dm2WM3 + grid) // DM3 to 4.5um wide metal, 1.5um
	FRAMEC3 = SIZE DUM3 BY (dm2DM3 + grid)   // ODM3 or DM3 to existed dummy metal 0.6um 
	FRAME3Pre = ((FRAMEA3 OR FRAMEB3) OR FRAMEC3) OR M3ExcHole
        #IFDEF CBM_OVER_M3
	   FRAME3 = ((((FRAME3Pre OR BLOCK3) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M3	// wrong setting will add nothing
        #ELSE 
	   FRAME3 = (((FRAME3Pre OR BLOCK3) OR NFILL) OR HVxx) OR OD_RDG_M3
        #ENDIF 

	OPENM3 = PUSH ((minOPENM3 OR emptyOPENM3) AND CHIP)
	FILL3 = OPENM3 NOT FRAME3
	FILLW3pre = SIZE FILL3 BY - (Wdm2M3 + grid)
	FILLW3 = (SIZE FILLW3pre BY (WdmW_M3 - grid) UNDEROVER TRUNCATE WdmW_M3) AND FILLW3pre
	M3FW = RECTANGLES WdmW_M3 WdmL_M3 WdmS_M3 OFFSET WdmO_M3 INSIDE OF LAYER FILLW3
	M3FW_EXP = SIZE M3FW BY (WdmS_M3 /2 + grid) OVERUNDER //merge the gaps 
	FILLM3pre = FILL3 NOT (SIZE M3FW_EXP BY (MdmS_M3 + grid))
	FILLM3 = (SIZE FILLM3pre BY (MdmW_M3 - grid) UNDEROVER TRUNCATE MdmW_M3) AND FILLM3pre
	M3F1 = RECTANGLES MdmW_M3 MdmL_M3 MdmS_M3 OFFSET MdmO_M3 INSIDE OF LAYER FILLM3
	M3R1pre = FILLM3pre NOT (SIZE M3F1 BY (dmS_M3 + grid))
	M3R1 = (SIZE M3R1pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R1pre

	M3F2 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R1
	M3R2pre = M3R1 NOT (SIZE M3F2 BY (dmS_M3 + grid))
	M3R2 = (SIZE M3R2pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R2pre

	M3F3 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R2
	M3R3pre = M3R2 NOT (SIZE M3F3 BY (dmS_M3 + grid))
	M3R3 = (SIZE M3R3pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R3pre
	
	M3F4 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 INSIDE OF LAYER M3R3

	M3F = (((M3F1 OR M3F2) OR M3F3) OR M3F4) OR M3FW
	FM3 = M3F NOT INTERACT (EXT M3F < dmS_M3 ABUT SINGULAR REGION)
    
	maxOPENM3 = DENSITY M3x FM3 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Max.den
		       
	FM3F = FM3 OUTSIDE maxOPENM3

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M3 = DENSITY M3x FM3F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den

	RM3EXC = SIZE FM3F BY (Odm2DM3 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M3pM = ((((PUSH D25M3) NOT FRAME3) NOT RM3EXC) NOT CTMDMY) AND CHIP
	D25M3pM_1 = (SIZE D25M3pM BY (OdmW_M3 /2 - grid) UNDEROVER TRUNCATE OdmW_M3) AND D25M3pM 
		
	RM3p1 = RECTANGLES OdmW_M3 OdmL_M3 OdmS_M3 INSIDE OF LAYER D25M3pM_1
	D25M3pM_2 = D25M3pM_1 NOT (SIZE RM3p1 BY (OdmS_M3 + grid))
	RM3p2 = RECTANGLES OdmL_M3 OdmW_M3 OdmS_M3 INSIDE OF LAYER D25M3pM_2

	D25M3pM_3pre = D25M3pM_2 NOT (SIZE RM3p2 BY (OdmS_M3 + grid))
	D25M3pM_3 = (SNAP (SIZE D25M3pM_3pre BY -grid) 5) AND D25M3pM_3pre
	RM3p3a = (INT D25M3pM_3 >=OdmW_M3 <=maxOdmW_M3 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M3pM_3 
	RM3p3b = RECTANGLE RM3p3a >= OdmW_M3 BY >= OdmL_M3 ORTHOGONAL ONLY // 1*1.44
	RM3p3  = RECTANGLE RM3p3b <= maxOdmW_M3 BY <= maxOdmL_M3 ORTHOGONAL ONLY// 1.5*6
	RM3A = (((RM3p1 OR RM3p2) OR RM3p3) OUTSIDE RM3EXC) OUTSIDE FRAME3
	RM3  = RM3A NOT INTERACT (EXT RM3A < OdmS_M3 ABUT SINGULAR REGION)
	
	DM3F = FM3F OR RM3

#ELSE
#IFDEF 9K_THICK_M3
	minOPENM3 = DENSITY M3x < minD_M3 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den
	emptyOPENM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M3Empty.den

#IFDEF FILL_IN_SLOT
       	M3ExcHole  = COPY EMPTY	
#ELSE
   	M3InnerHole = HOLES M3i INNER
	M3BigHole = SIZE M3InnerHole BY - excludeHoleSize/2 
	M3ExcHole = (M3InnerHole OUTSIDE M3BigHole) NOT M3i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK3 = SIZE DM3EXCL BY (dm2DMEXCL + grid)	// DM3 to DM3EXCL
	FRAMEA3 = SIZE M3i BY (dm2M3 + grid) // DM3 to metal

    
	M3mid = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i
	M3wide = (SIZE M3mid BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i
	FRAMEB3 = SIZE M3wide BY (dm2WM3 + grid) // DM3 to 4.5um wide metal, 1.5um
	FRAMEC3 = SIZE DUM3 BY (dm2DM3 + grid)   // DM3 to existed dummy metal 0.6um 
	FRAME3Pre = ((FRAMEA3 OR FRAMEB3) OR FRAMEC3) OR M3ExcHole
	#IFDEF CBM_OVER_M3
	    FRAME3 = (((((FRAME3Pre OR BLOCK3) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M3
	#ELSE
	    FRAME3 = ((((FRAME3Pre OR BLOCK3) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M3
    #ENDIF    
	OPENM3 = PUSH ((minOPENM3 OR emptyOPENM3) AND CHIP)
    #IFDEF CBM_OVER_M2
        CTMDMY_BLOCK1 = SIZE M3x_CTMDMY BY (dm2M3_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
        TFRDUMMY_BLOCK3_1 = SIZE M3x_TFRDMY_3 BY (dm2M3_TFRDMY + grid)
        TFRDUMMY_BLOCK3 = TFRDUMMY_BLOCK3_1 OR TFRDUMMY_3
	    FILL3 = ((OPENM3 NOT FRAME3) NOT CTMDMY_BLOCK) NOT TFRDUMMY_BLOCK3
	#ELSE
        TFRDUMMY_BLOCK3_1 = SIZE M3x_TFRDMY_3 BY (dm2M3_TFRDMY + grid)
        TFRDUMMY_BLOCK3 = TFRDUMMY_BLOCK3_1 OR TFRDUMMY_3
        FILL3 = (OPENM3 NOT FRAME3) NOT TFRDUMMY_BLOCK3
    #ENDIF

	FILLW3pre = SIZE FILL3 BY - (Wdm2M3 + grid)
	FILLW3 = (SIZE FILLW3pre BY (WdmW_M3 - grid) UNDEROVER TRUNCATE WdmW_M3) AND FILLW3pre
	M3FW = RECTANGLES WdmW_M3 WdmL_M3 WdmS_M3 OFFSET WdmO_M3 INSIDE OF LAYER FILLW3
	M3FW_EXP = SIZE M3FW BY (WdmS_M3 /2 + grid) OVERUNDER //merge the gaps 
	FILLM3pre = FILL3 NOT (SIZE M3FW_EXP BY (MdmS_M3 + grid))
	FILLM3 = (SIZE FILLM3pre BY (MdmW_M3 - grid) UNDEROVER TRUNCATE MdmW_M3) AND FILLM3pre
	M3F1 = RECTANGLES MdmW_M3 MdmL_M3 MdmS_M3 OFFSET MdmO_M3 INSIDE OF LAYER FILLM3
	M3R1pre = FILLM3pre NOT (SIZE M3F1 BY (dmS_M3 + grid))
	M3R1 = (SIZE M3R1pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R1pre

	M3F2 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R1
	M3R2pre = M3R1 NOT (SIZE M3F2 BY (dmS_M3 + grid))
	M3R2 = (SIZE M3R2pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R2pre

	M3F3 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R2
	M3R3pre = M3R2 NOT (SIZE M3F3 BY (dmS_M3 + grid))
	M3R3 = (SIZE M3R3pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R3pre
	
	M3F4 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 INSIDE OF LAYER M3R3

	M3F = ((((M3F1 OR M3F2) OR M3F3) OR M3F4) OR M3FW) NOT INTERACT IND_COIL_EXD
	FM3 = M3F NOT INTERACT (EXT M3F < dmS_M3 ABUT SINGULAR REGION)
    
	maxOPENM3 = DENSITY M3x FM3 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Max.den
		       
	FM3F = FM3 OUTSIDE maxOPENM3

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M3 = DENSITY M3x FM3F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den

	RM3EXC = SIZE FM3F BY (Odm2DM3 + grid)
// do not fill DMz_S over CTMDMY 
	D25M3pM = (((((PUSH D25M3) NOT FRAME3) NOT RM3EXC) NOT CTMDMY) NOT TFRDUMMY_3) AND CHIP
	D25M3pM_1 = (SIZE D25M3pM BY (OdmW_M3 /2 - grid) UNDEROVER TRUNCATE OdmW_M3) AND D25M3pM 

	RM3p1 = RECTANGLES OdmW_M3 OdmL_M3 OdmS_M3 INSIDE OF LAYER D25M3pM_1
	D25M3pM_2 = D25M3pM_1 NOT (SIZE RM3p1 BY (OdmS_M3 + grid))
	RM3p2 = RECTANGLES OdmL_M3 OdmW_M3 OdmS_M3 INSIDE OF LAYER D25M3pM_2

	D25M3pM_3pre = D25M3pM_2 NOT (SIZE RM3p2 BY (OdmS_M3 + grid))
	D25M3pM_3 = (SNAP (SIZE D25M3pM_3pre BY -grid) 5) AND D25M3pM_3pre
	RM3p3a = (INT D25M3pM_3 >=OdmW_M3 <=maxOdmW_M3 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M3pM_3 
	RM3p3b = RECTANGLE RM3p3a >= OdmW_M3 BY >= OdmL_M3 ORTHOGONAL ONLY// 0.4*1.42
	RM3p3  = RECTANGLE RM3p3b <= maxOdmW_M3 BY <= maxOdmL_M3 ORTHOGONAL ONLY// 1.5*6
	RM3A = ((((RM3p1 OR RM3p2) OR RM3p3) OUTSIDE RM3EXC) OUTSIDE FRAME3) NOT INTERACT IND_COIL_EXD
	RM3  = RM3A NOT INTERACT (EXT RM3A < OdmS_M3 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M2
        FILLM3_CTMDMY = (CTMDMY NOT (SIZE ((FM3F OR RM3) OR (M3x NOT OUTSIDE CTMDMY)) BY (dmS_M3_CTMDMY + grid))) NOT FRAME3
 	    M3F1_CTMDMY = RECTANGLES WdmW_M3 WdmL_M3 dmS_M3_CTMDMY OFFSET WdmO_M3 INSIDE OF LAYER FILLM3_CTMDMY
        M3R1_CTMDMY = FILLM3_CTMDMY NOT (SIZE M3F1_CTMDMY BY (dmS_M3_CTMDMY + grid))
        M3F2_CTMDMY = RECTANGLES WdmW_M3 WdmL_M3 dmS_M3_CTMDMY OFFSET WdmO_M3 INSIDE OF LAYER M3R1_CTMDMY
        M3R2_CTMDMY = WITH WIDTH (M3R1_CTMDMY NOT (SIZE M3F2_CTMDMY BY (dmS_M3_CTMDMY + grid))) >= min_dmW_M3_CTMDMY
        M3F3_CTMDMY = RECTANGLES min_dmW_M3_CTMDMY min_dmW_M3_CTMDMY dmS_M3_CTMDMY OFFSET dmO_M3 INSIDE OF LAYER M3R2_CTMDMY
	    M3R3_CTMDMY = WITH WIDTH (M3R2_CTMDMY NOT (SIZE M3F3_CTMDMY BY (dmS_M3_CTMDMY + grid))) >= min_dmW_M3_CTMDMY
        M3F4_CTMDMY = RECTANGLES min_dmW_M3_CTMDMY min_dmW_M3_CTMDMY dmS_M3_CTMDMY OFFSET dmO_M3 INSIDE OF LAYER M3R3_CTMDMY
	    M3F_CTMDMY_A = ((M3F1_CTMDMY OR M3F2_CTMDMY) OR M3F3_CTMDMY) OR  M3F4_CTMDMY
	    M3F_CTMDMY = M3F_CTMDMY_A NOT INTERACT (EXT M3F_CTMDMY_A < dmS_M3_CTMDMY ABUT SINGULAR REGION)
	    DM3F_pre = (FM3F OR RM3) OR M3F_CTMDMY
    #ELSE
        DM3F_pre = FM3F OR RM3
    #ENDIF
        FILLM3_TFRDMY = (TFRDUMMY_3 NOT (SIZE ((FM3F OR RM3) OR (M3x NOT OUTSIDE TFRDUMMY_3)) BY (dmS_M3_TFRDMY + grid))) NOT FRAME3
     	M3F1_TFRDMY = RECTANGLES dmW_M3_TFRDMY dmL_M3_TFRDMY dmS_M3_TFRDMY OFFSET dmO_M3_TFRDMY INSIDE OF LAYER FILLM3_TFRDMY
        M3R1_TFRDMY = FILLM3_TFRDMY NOT (SIZE M3F1_TFRDMY BY (dmS_M3_TFRDMY + grid))
        M3F2_TFRDMY = RECTANGLES dmW_M3_TFRDMY dmL_M3_TFRDMY dmS_M3_TFRDMY OFFSET dmO_M3_TFRDMY INSIDE OF LAYER M3R1_TFRDMY
        M3R2_TFRDMY = M3R1_TFRDMY NOT (SIZE M3F2_TFRDMY BY (dmS_M3_TFRDMY + grid))
        M3F3_TFRDMY = RECTANGLES dmW_M3_TFRDMY dmL_M3_TFRDMY dmS_M3_TFRDMY OFFSET dmO_M3_TFRDMY INSIDE OF LAYER M3R2_TFRDMY
        M3R3_TFRDMY = M3R2_TFRDMY NOT (SIZE M3F3_TFRDMY BY (dmS_M3_TFRDMY + grid))
        M3F4_TFRDMY = RECTANGLES dmW_M3_TFRDMY dmL_M3_TFRDMY dmS_M3_TFRDMY OFFSET dmO_M3_TFRDMY INSIDE OF LAYER M3R3_TFRDMY
	    M3F_TFRDMY_A = ((M3F1_TFRDMY OR M3F2_TFRDMY) OR M3F3_TFRDMY) OR  M3F4_TFRDMY
	    M3F_TFRDMY = M3F_TFRDMY_A NOT INTERACT (EXT M3F_TFRDMY_A < dmS_M3_TFRDMY ABUT SINGULAR REGION)
        DM3F = DM3F_pre OR M3F_TFRDMY
#ELSE	
#IFDEF 5K_THICK_M3
	minOPENM3 = DENSITY M3x < minD_M3 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den
	emptyOPENM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M3Empty.den

#IFDEF FILL_IN_SLOT
       	M3ExcHole  = COPY EMPTY	
#ELSE
   	M3InnerHole = HOLES M3i INNER
	M3BigHole = SIZE M3InnerHole BY - excludeHoleSize/2 
	M3ExcHole = (M3InnerHole OUTSIDE M3BigHole) NOT M3i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK3 = SIZE DM3EXCL BY (dm2DMEXCL + grid)	// DM3 to DM3EXCL
    
        FRAMEA3 = SIZE M3i BY (dm2M3 + grid) // DM3 to metal
	M3mid = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i
	M3wide = (SIZE M3mid BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i
	FRAMEB3 = SIZE M3wide BY (dm2WM3 + grid) // DM3 to 4.5um wide metal, 1.5um
	FRAMEC3 = SIZE DUM3 BY (dm2DM3 + grid)   // ODM3 or DM3 to existed dummy metal 0.6um 
	FRAME3Pre = ((FRAMEA3 OR FRAMEB3) OR FRAMEC3) OR M3ExcHole
	#IFDEF CBM_OVER_M3
	   FRAME3 = ((((FRAME3Pre OR BLOCK3) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M3
        #ELSE
	   FRAME3 = (((FRAME3Pre OR BLOCK3) OR NFILL) OR HVxx) OR OD_RDG_M3
        #ENDIF
	OPENM3 = PUSH ((minOPENM3 OR emptyOPENM3) AND CHIP)
	FILL3 = OPENM3 NOT FRAME3
	FILLW3pre = SIZE FILL3 BY - (Wdm2M3 + grid)
	FILLW3 = (SIZE FILLW3pre BY (WdmW_M3 - grid) UNDEROVER TRUNCATE WdmW_M3) AND FILLW3pre
	M3FW = RECTANGLES WdmW_M3 WdmL_M3 WdmS_M3 OFFSET WdmO_M3 INSIDE OF LAYER FILLW3
	M3FW_EXP = SIZE M3FW BY (WdmS_M3 /2 + grid) OVERUNDER //merge the gaps 
	FILLM3pre = FILL3 NOT (SIZE M3FW_EXP BY (MdmS_M3 + grid))
	FILLM3 = (SIZE FILLM3pre BY (MdmW_M3 - grid) UNDEROVER TRUNCATE MdmW_M3) AND FILLM3pre
	M3F1 = RECTANGLES MdmW_M3 MdmL_M3 MdmS_M3 OFFSET MdmO_M3 INSIDE OF LAYER FILLM3
	M3R1pre = FILLM3pre NOT (SIZE M3F1 BY (dmS_M3 + grid))
	M3R1 = (SIZE M3R1pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R1pre

	M3F2 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R1
	M3R2pre = M3R1 NOT (SIZE M3F2 BY (dmS_M3 + grid))
	M3R2 = (SIZE M3R2pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R2pre

	M3F3 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 OFFSET dmO_M3 INSIDE OF LAYER M3R2
	M3R3pre = M3R2 NOT (SIZE M3F3 BY (dmS_M3 + grid))
	M3R3 = (SIZE M3R3pre BY (dmW_M3/2 - grid) UNDEROVER TRUNCATE dmW_M3) AND M3R3pre
	
	M3F4 = RECTANGLES dmW_M3 dmL_M3 dmS_M3 INSIDE OF LAYER M3R3

	M3F = (((M3F1 OR M3F2) OR M3F3) OR M3F4) OR M3FW
	FM3 = M3F NOT INTERACT (EXT M3F < dmS_M3 ABUT SINGULAR REGION)
    
	maxOPENM3 = DENSITY M3x FM3 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Max.den
		       
	FM3F = FM3 OUTSIDE maxOPENM3

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M3 = DENSITY M3x FM3F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den

	RM3EXC = SIZE FM3F BY (Odm2DM3 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M3pM = ((((PUSH D25M3) NOT FRAME3) NOT RM3EXC) NOT CTMDMY) AND CHIP
	D25M3pM_1 = (SIZE D25M3pM BY (OdmW_M3 /2 - grid) UNDEROVER TRUNCATE OdmW_M3) AND D25M3pM 
		
	RM3p1 = RECTANGLES OdmW_M3 OdmL_M3 OdmS_M3 INSIDE OF LAYER D25M3pM_1
	D25M3pM_2 = D25M3pM_1 NOT (SIZE RM3p1 BY (OdmS_M3 + grid))
	RM3p2 = RECTANGLES OdmL_M3 OdmW_M3 OdmS_M3 INSIDE OF LAYER D25M3pM_2

	D25M3pM_3pre = D25M3pM_2 NOT (SIZE RM3p2 BY (OdmS_M3 + grid))
	D25M3pM_3 = (SNAP (SIZE D25M3pM_3pre BY -grid) 5) AND D25M3pM_3pre
	RM3p3a = (INT D25M3pM_3 >=OdmW_M3 <=maxOdmW_M3 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M3pM_3 
	RM3p3b = RECTANGLE RM3p3a >= OdmW_M3 BY >= OdmL_M3 ORTHOGONAL ONLY// 0.8*1.42
	RM3p3  = RECTANGLE RM3p3b <= maxOdmW_M3 BY <= maxOdmL_M3 ORTHOGONAL ONLY// 1.5*6
	RM3A = (((RM3p1 OR RM3p2) OR RM3p3) OUTSIDE RM3EXC) OUTSIDE FRAME3
	RM3  = RM3A NOT INTERACT (EXT RM3A < OdmS_M3 ABUT SINGULAR REGION)
	
	DM3F = FM3F OR RM3

#ELSE
	D30M3 = DENSITY M3x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M3.den30
	D40M3 = DENSITY M3x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M3.den40
	D50M3 = DENSITY M3x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M3.den50
	emptyM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M3.den_empty

#IFDEF FILL_IN_SLOT
       	M3ExcHole  = COPY EMPTY	
#ELSE
   	M3InnerHole = HOLES M3i INNER
	M3BigHole = SIZE M3InnerHole BY - excludeHoleSize/2 
	M3ExcHole = (M3InnerHole OUTSIDE M3BigHole) NOT M3i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK3 = SIZE DM3EXCL BY (dm2DMEXCL + grid)	// DM3 to DM3EXCL
	
        FRAMEA3 = SIZE M3i BY (DM3_301 + grid)	  // DM3 to real metal
        FRAMEA3RM = SIZE M3i BY (DM3_304 + grid)	  // RM3 to real metal

	FRAMEA3_45 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (DM345_301 + grid) // DM3 to 45 degree metal
	FRAMEA3RM_45 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (DM345_304 + grid) // DM3 to 45 degree real metal
        
	M3mid = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i
	
	M3wide_W1 = (SIZE M3mid BY wideM3_W1/2 UNDEROVER TRUNCATE wideM3_W1/2) AND M3i	
	M3wide_W11 = (SIZE M3wide_W1 BY wideM3_W11/2 UNDEROVER TRUNCATE wideM3_W11/2) AND M3i
	M3wide_W2 = (SIZE M3wide_W1 BY wideM3_W2/2 UNDEROVER TRUNCATE wideM3_W2/2) AND M3i
	M3wide = (SIZE M3wide_W2 BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i

	FRAMEB3 = SIZE M3wide BY (dm2WM3 + grid) // DM3 to wide metal 4.5
	FRAMEB3_W2 = SIZE M3wide_W2 BY (dm2WM3_W2 + grid) // DM3 to 1.5um wide metal 0.5
	FRAMEB3_W1 = SIZE M3wide_W1 BY (dm2WM3_W1 + grid) // DM3 to 0.21um wide metal
	FRAMEB3_W11 = SIZE M3wide_W11 BY (dm2WM3_W11 + grid) // DM3 to 0.38um wide metal
    
	FRAMEC3 = SIZE DUM3 BY (dm2DM3 + grid)   // DM3 to existed dummy metal 0.4
	FRAMEC3RM = SIZE DUM3 BY (Odm2DM3 + grid)   // ODM3 to existed dummy metal 0.6 
	FRAME3Pre = ((((FRAMEA3 OR FRAMEB3) OR FRAMEC3) OR M3ExcHole) OR FRAMEB3_W2) OR FRAMEA3_45
	FRAME3PreRM = ((((((FRAMEA3RM OR FRAMEB3) OR FRAMEC3RM) OR M3ExcHole) OR FRAMEB3_W2) OR FRAMEB3_W1) OR FRAMEB3_W11) OR FRAMEA3RM_45
	
	#IFDEF CBM_OVER_M3
	    FRAME3 = (((((FRAME3Pre OR BLOCK3) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M3
	    FRAME3RM = ((((FRAME3PreRM OR BLOCK3) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M3
	#ELSE
        FRAME3 = ((((FRAME3Pre OR BLOCK3) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M3
	    FRAME3RM = (((FRAME3PreRM OR BLOCK3) OR NFILLRM) OR HVxx) OR OD_RDG_M3
	#ENDIF

//****************************************************************************

	D30M3p = (PUSH D30M3) NOT FRAME3
	O30M3pre = D30M3p AND CHIP
	FD21M3s = COPY FRAME3

	O30M3preA = SIZE O30M3pre BY - (DM3_303 + grid)
	O30M3preB = (SIZE O30M3preA BY (WM3_303 - grid) UNDEROVER TRUNCATE WM3_303) AND O30M3preA

	// 1st 2*2
	F303M3 = (RECTANGLES WM3_303 LM3_303 SM3_303 OFFSET OM3_303  INSIDE OF LAYER O30M3preB) NOT INTERACT IND_COIL_EXD

	
	F303M3_EXP = SIZE F303M3 BY ( WM3_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M3preF1 = O30M3pre NOT (SIZE F303M3_EXP BY (SM3_302 + grid))
	O30M3preF = (SNAP (SIZE O30M3preF1 BY -grid) 5) AND O30M3preF1

	B30M3pre = (INT O30M3preF >= WM3_301 <= maxW_DM3V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M3preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M3pre2 = RECTANGLE B30M3pre >= WM3_301 BY >= minL_DM3V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M3pre3 = RECTANGLE B30M3pre2 <= maxW_DM3V_3011 BY <= maxL_DM3V_3011 ORTHOGONAL ONLY

	B30M3 = (B30M3pre3 NOT INTERACT (EXT B30M3pre3 < SM3_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M3s = ((SIZE B30M3 BY (SM3_301 + grid)) OR FD21M3s) OR (SIZE F303M3_EXP BY (SM3_302 + grid))
	O30M3 = O30M3preF NOT B30M3s

	
	// 3rd, 0.5*1.2
	F302M3 = (RECTANGLES WM3_302 LM3_302 SM3_302 OFFSET OM3_302 INSIDE OF LAYER O30M3) NOT INTERACT IND_COIL_EXD
	F302M3s = (SIZE F302M3 BY (SM3_301 + grid)) OR B30M3s
	R302M3pre = O30M3 NOT F302M3s
	R302M3 = (SIZE R302M3pre BY (WM3_301/2 + grid) UNDEROVER TRUNCATE WM3_301) AND R302M3pre

	// 4th, 0.5*0.5
	F3012M3 = (RECTANGLES WM3_301 LM3_301 SM3_301 OFFSET OM3_301 INSIDE OF LAYER R302M3) NOT INTERACT IND_COIL_EXD
	F3012M3s = (SIZE F3012M3 BY (SM3_301 + grid)) OR F302M3s
	R3012M3pre = R302M3pre NOT F3012M3s
	R3012M3 = (SIZE R3012M3pre BY (WM3_301/2 + grid) UNDEROVER TRUNCATE WM3_301) AND R3012M3pre

	// 5th, regular 0.5*0.5
	F301M3 = (RECTANGLES WM3_301 LM3_301 SM3_301 INSIDE OF LAYER R3012M3) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M3s = (SIZE F301M3 BY (SM3_301 + grid)) OR F3012M3s

	F30M3 = (((B30M3 OR F302M3) OR F3012M3) OR F301M3) OR F303M3
	O40M3pre = (((PUSH D40M3) NOT FRAME3) NOT F301M3s) AND CHIP


	O40M3preA = SIZE O40M3pre BY - (DM3_403 + grid)
	O40M3preB = (SIZE O40M3preA BY (WM3_403 - grid) UNDEROVER TRUNCATE WM3_403) AND O40M3preA

	// 1st 2*2
	F403M3 = RECTANGLES WM3_403 LM3_403 SM3_403 OFFSET OM3_403  INSIDE OF LAYER O40M3preB

	
	F403M3_EXP = SIZE F403M3 BY ( WM3_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M3preF1 = O40M3pre NOT (SIZE F403M3_EXP BY (SM3_402 + grid))
	O40M3preF = (SNAP (SIZE O40M3preF1 BY -grid) 5) AND O40M3preF1

	B40M3pre = (INT O40M3preF >= WM3_401 <= maxW_DM3V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M3preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M3pre2 = RECTANGLE B40M3pre >= WM3_401 BY >= minL_DM3V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M3pre3 = RECTANGLE B40M3pre2 <= maxW_DM3V_4011 BY <= maxL_DM3V_4011 ORTHOGONAL ONLY

	B40M3 = (B40M3pre3 NOT INTERACT (EXT B40M3pre3 < SM3_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M3s = ((SIZE B40M3 BY (SM3_401 + grid)) OR F301M3s) OR (SIZE F403M3_EXP BY (SM3_402 + grid))
	O40M3 = O40M3preF NOT B40M3s

	
	// 3rd, 0.5*1.2
	F402M3 = (RECTANGLES WM3_402 LM3_402 SM3_402 OFFSET OM3_402 INSIDE OF LAYER O40M3) NOT INTERACT IND_COIL_EXD
	F402M3s = (SIZE F402M3 BY (SM3_401 + grid)) OR B40M3s
	R402M3pre = O40M3 NOT F402M3s
	R402M3 = (SIZE R402M3pre BY (WM3_401/2 + grid) UNDEROVER TRUNCATE WM3_401) AND R402M3pre

	// 4th, 0.5*0.5
	F4012M3 = (RECTANGLES WM3_401 LM3_401 SM3_401 OFFSET OM3_401 INSIDE OF LAYER R402M3) NOT INTERACT IND_COIL_EXD
	F4012M3s = (SIZE F4012M3 BY (SM3_401 + grid)) OR F402M3s
	R4012M3pre = R402M3pre NOT F4012M3s
	R4012M3 = (SIZE R4012M3pre BY (WM3_401/2 + grid) UNDEROVER TRUNCATE WM3_401) AND R4012M3pre

	// 5th, regular 0.5*0.5
	F401M3 = (RECTANGLES WM3_401 LM3_401 SM3_401 INSIDE OF LAYER R4012M3) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M3s = (SIZE F401M3 BY (SM3_401 + grid)) OR F4012M3s

	F40M3 = (((B40M3 OR F402M3) OR F4012M3) OR F401M3) OR F403M3
	O50M3pre = (((PUSH (D50M3 OR emptyM3)) NOT FRAME3) NOT F401M3s) AND CHIP


	O50M3preA = SIZE O50M3pre BY - (DM3_503 + grid)
	O50M3preB = (SIZE O50M3preA BY (WM3_503 - grid) UNDEROVER TRUNCATE WM3_503) AND O50M3preA

	// 1st 2*2
	F503M3 = RECTANGLES WM3_503 LM3_503 SM3_503 OFFSET OM3_503  INSIDE OF LAYER O50M3preB

	
	F503M3_EXP = SIZE F503M3 BY ( WM3_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M3preF1 = O50M3pre NOT (SIZE F503M3_EXP BY (SM3_502 + grid))
	O50M3preF = (SNAP (SIZE O50M3preF1 BY -grid) 5) AND O50M3preF1

	B50M3pre = (INT O50M3preF >= WM3_501 <= maxW_DM3V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M3preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M3pre2 = RECTANGLE B50M3pre >= WM3_501 BY >= minL_DM3V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M3pre3 = RECTANGLE B50M3pre2 <= maxW_DM3V_5011 BY <= maxL_DM3V_5011 ORTHOGONAL ONLY

	B50M3 = (B50M3pre3 NOT INTERACT (EXT B50M3pre3 < SM3_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M3s = ((SIZE B50M3 BY (SM3_501 + grid)) OR F401M3s) OR (SIZE F503M3_EXP BY (SM3_502 + grid))
	O50M3 = O50M3preF NOT B50M3s

	
	// 3rd, 0.5*1.2
	F502M3 = (RECTANGLES WM3_502 LM3_502 SM3_502 OFFSET OM3_502 INSIDE OF LAYER O50M3) NOT INTERACT IND_COIL_EXD
	F502M3s = (SIZE F502M3 BY (SM3_501 + grid)) OR B50M3s
	R502M3pre = O50M3 NOT F502M3s
	R502M3 = (SIZE R502M3pre BY (WM3_501/2 + grid) UNDEROVER TRUNCATE WM3_501) AND R502M3pre

	// 4th, 0.5*0.5
	F5012M3 = (RECTANGLES WM3_501 LM3_501 SM3_501 OFFSET OM3_501 INSIDE OF LAYER R502M3) NOT INTERACT IND_COIL_EXD
	F5012M3s = (SIZE F5012M3 BY (SM3_501 + grid)) OR F502M3s
	R5012M3pre = R502M3pre NOT F5012M3s
	R5012M3 = (SIZE R5012M3pre BY (WM3_501/2 + grid) UNDEROVER TRUNCATE WM3_501) AND R5012M3pre

	// 5th, regular 0.5*0.5
	F501M3 = (RECTANGLES WM3_501 LM3_501 SM3_501 INSIDE OF LAYER R5012M3) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M3s = (SIZE F501M3 BY (SM3_501 + grid)) OR F5012M3s

	F50M3 = (((B50M3 OR F502M3) OR F5012M3) OR F501M3) OR F503M3

//****************************************************************************
    
	exceedM3 = DENSITY M3x F30M3 F40M3 F50M3 > maxD_M3 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M3.den_exceed
	exceedM3DN2 = DENSITY M3x F30M3 F40M3 F50M3 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M3.DN.2.den_exceed

	removeM3R = ((PUSH (exceedM3 AND (D50M3 OR emptyM3))) NOT FRAME3) AND CHIP 
	removeM3 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM3R
	
	F30M3x = (F30M3 NOT INTERACT exceedM3DN2) NOT INTERACT removeM3
	F40M3x = (F40M3 NOT INTERACT exceedM3DN2) NOT INTERACT removeM3
	F50M3x = (F50M3 NOT INTERACT exceedM3DN2) NOT INTERACT removeM3
	FM3xA  = (F30M3x OR F40M3x) OR F50M3x
	FM3x   = FM3xA NOT INTERACT (EXT FM3xA < DM3_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM3
	lackM3 = DENSITY M3x FM3x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M3.den_lack
	RM3EXC = SIZE (((FM3x OR F303M3_EXP) OR F403M3_EXP) OR F503M3_EXP) BY (DM3_301 + grid)
	BigemptyM3 = PUSH ((SIZE emptyM3 BY 25 UNDEROVER) AND emptyM3)
    
	lackM3pRM = (((((PUSH lackM3) NOT RM3EXC) NOT BigemptyM3) NOT exceedM3) NOT FRAME3RM ) AND CHIP
	lackM3pRM_1 = WITH WIDTH lackM3pRM >= minWM3_304
	RM3p1 = RECTANGLES minLM3_304 minWM3_304 SM3_304 OFFSET OM3_304 INSIDE OF LAYER lackM3pRM_1
	lackM3pRM_2 = WITH WIDTH (lackM3pRM_1 NOT (SIZE RM3p1 BY (SM3_304 + grid))) >= minWM3_304
	RM3p2 = RECTANGLES minWM3_304 minLM3_304 SM3_304 OFFSET OM3_304 INSIDE OF LAYER lackM3pRM_2
        lackM3pRM_3pre = lackM3pRM_2 NOT (SIZE RM3p2 BY (SM3_304 + grid))
	lackM3pRM_3 = (SNAP (SIZE lackM3pRM_3pre BY -grid) 5) AND lackM3pRM_3pre 
	       
	RM3p3pre = (INT lackM3pRM_3 >= minWM3_304 <= maxWM3_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM3pRM_3 
	RM3p3pre2 = RECTANGLE RM3p3pre >= minWM3_304 BY >= minLM3_304 ORTHOGONAL ONLY// 0.13*0.6
	RM3p3 = RECTANGLE RM3p3pre2 <= maxWM3_304 BY <= maxLM3_304 ORTHOGONAL ONLY// 0.2*6

	RM3A = ((((RM3p1 OR RM3p2) OR RM3p3) OUTSIDE RM3EXC) OUTSIDE FRAME3RM) NOT INTERACT IND_COIL_EXD
	RM3F = RM3A NOT INTERACT (EXT RM3A < SM3_304 ABUT SINGULAR REGION)

#ENDIF

DM3F = COPY FM3x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM4

#IFDEF 34K_THICK_M4
	minOPENM4 = DENSITY M4x < minD_M4 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den
	emptyOPENM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M4Empty.den
        #IFDEF FILL_IN_SLOT
       	M4ExcHole  = COPY EMPTY	
        #ELSE
   	M4InnerHole = HOLES M4i INNER
	M4BigHole = SIZE M4InnerHole BY - excludeHoleSize/2
	M4ExcHole = (M4InnerHole OUTSIDE M4BigHole) NOT M4i
        #ENDIF	
        BLOCK4    = SIZE DM4EXCL BY (dm2DMEXCL + grid)
        FRAMEA4   = SIZE M4i BY (dm2M4 + grid)
	M4mid     = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i
	M4wide    = (SIZE M4mid BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i
	FRAMEB4   = SIZE M4wide BY (dm2WM4 + grid) // DM4 to 4.5um wide metal 3um
	FRAMEC4   = SIZE DUM4 BY (dm2DM4 + grid)    
	FRAME4Pre = ((FRAMEA4 OR FRAMEB4) OR FRAMEC4) OR M4ExcHole
	#IFDEF CBM_OVER_M4
        FRAME4 = ((((FRAME4Pre OR BLOCK4) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M4  
	#ELSE
	    FRAME4 = (((FRAME4Pre OR BLOCK4) OR NFILL) OR HVxx) OR OD_RDG_M4
	#ENDIF	
	OPENM4 = PUSH ((minOPENM4 OR emptyOPENM4) AND CHIP)
	FILL4 = OPENM4 NOT FRAME4
	FILLW4pre = SIZE FILL4 BY - (Wdm2M4 + grid)
	FILLW4 = (SIZE FILLW4pre BY (WdmW_M4 - grid) UNDEROVER TRUNCATE WdmW_M4) AND FILLW4pre
	M4FW = RECTANGLES WdmW_M4 WdmL_M4 WdmS_M4 OFFSET WdmO_M4 INSIDE OF LAYER FILLW4
	M4FW_EXP = SIZE M4FW BY (WdmS_M4 /2 + grid) OVERUNDER	// merge the gaps
	FILLM4pre = FILL4 NOT (SIZE M4FW_EXP BY (MdmS_M4 + grid))
	FILLM4 = (SIZE FILLM4pre BY (MdmW_M4 - grid) UNDEROVER TRUNCATE MdmW_M4) AND FILLM4pre
	M4F1 = RECTANGLES MdmW_M4 MdmL_M4 MdmS_M4 OFFSET MdmO_M4 INSIDE OF LAYER FILLM4
	M4R1pre = FILLM4pre NOT (SIZE M4F1 BY (dmS_M4 + grid))
	M4R1 = (SIZE M4R1pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R1pre

	M4F2 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R1
	M4R2pre = M4R1 NOT (SIZE M4F2 BY (dmS_M4 + grid))
	M4R2 = (SIZE M4R2pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R2pre

	M4F3 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R2
	M4R3pre = M4R2 NOT (SIZE M4F3 BY (dmS_M4 + grid))
	M4R3 = (SIZE M4R3pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R3pre
	
	M4F4 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 INSIDE OF LAYER M4R3 

	M4F = (((M4F1 OR M4F2) OR M4F3) OR M4F4) OR M4FW
	FM4 = M4F NOT INTERACT (EXT M4F < dmS_M4 ABUT SINGULAR REGION)

	maxOPENM4 = DENSITY M4x FM4 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Max.den
		       
	DM4F = FM4 OUTSIDE maxOPENM4

#ELSE
#IFDEF 12K_THICK_M4
	
	minOPENM4 = DENSITY M4x < minD_M4 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den
	emptyOPENM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M4Empty.den
#IFDEF FILL_IN_SLOT
       	M4ExcHole  = COPY EMPTY	
#ELSE
   	M4InnerHole = HOLES M4i INNER
	M4BigHole = SIZE M4InnerHole BY - excludeHoleSize/2 
	M4ExcHole = (M4InnerHole OUTSIDE M4BigHole) NOT M4i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK4 = SIZE DM4EXCL BY (dm2DMEXCL + grid)	// DM4 to DM4EXCL
    
        FRAMEA4 = SIZE M4i BY (dm2M4 + grid) // DM4 to metal
	M4mid = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i
	M4wide = (SIZE M4mid BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i
	FRAMEB4 = SIZE M4wide BY (dm2WM4 + grid) // DM4 to 4.5um wide metal, 1.5um
	FRAMEC4 = SIZE DUM4 BY (dm2DM4 + grid)   // ODM4 or DM4 to existed dummy metal 0.6um 
	FRAME4Pre = ((FRAMEA4 OR FRAMEB4) OR FRAMEC4) OR M4ExcHole
        #IFDEF CBM_OVER_M4
	   FRAME4 = ((((FRAME4Pre OR BLOCK4) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M4	// wrong setting will add nothing
        #ELSE 
	   FRAME4 = (((FRAME4Pre OR BLOCK4) OR NFILL) OR HVxx) OR OD_RDG_M4
        #ENDIF 

	OPENM4 = PUSH ((minOPENM4 OR emptyOPENM4) AND CHIP)
	FILL4 = OPENM4 NOT FRAME4
	FILLW4pre = SIZE FILL4 BY - (Wdm2M4 + grid)
	FILLW4 = (SIZE FILLW4pre BY (WdmW_M4 - grid) UNDEROVER TRUNCATE WdmW_M4) AND FILLW4pre
	M4FW = RECTANGLES WdmW_M4 WdmL_M4 WdmS_M4 OFFSET WdmO_M4 INSIDE OF LAYER FILLW4
	M4FW_EXP = SIZE M4FW BY (WdmS_M4 /2 + grid) OVERUNDER //merge the gaps 
	FILLM4pre = FILL4 NOT (SIZE M4FW_EXP BY (MdmS_M4 + grid))
	FILLM4 = (SIZE FILLM4pre BY (MdmW_M4 - grid) UNDEROVER TRUNCATE MdmW_M4) AND FILLM4pre
	M4F1 = RECTANGLES MdmW_M4 MdmL_M4 MdmS_M4 OFFSET MdmO_M4 INSIDE OF LAYER FILLM4
	M4R1pre = FILLM4pre NOT (SIZE M4F1 BY (dmS_M4 + grid))
	M4R1 = (SIZE M4R1pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R1pre

	M4F2 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R1
	M4R2pre = M4R1 NOT (SIZE M4F2 BY (dmS_M4 + grid))
	M4R2 = (SIZE M4R2pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R2pre

	M4F3 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R2
	M4R3pre = M4R2 NOT (SIZE M4F3 BY (dmS_M4 + grid))
	M4R3 = (SIZE M4R3pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R3pre
	
	M4F4 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 INSIDE OF LAYER M4R3

	M4F = (((M4F1 OR M4F2) OR M4F3) OR M4F4) OR M4FW
	FM4 = M4F NOT INTERACT (EXT M4F < dmS_M4 ABUT SINGULAR REGION)
    
	maxOPENM4 = DENSITY M4x FM4 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Max.den
		       
	FM4F = FM4 OUTSIDE maxOPENM4

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M4 = DENSITY M4x FM4F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den

	RM4EXC = SIZE FM4F BY (Odm2DM4 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M4pM = ((((PUSH D25M4) NOT FRAME4) NOT RM4EXC) NOT CTMDMY) AND CHIP
	D25M4pM_1 = (SIZE D25M4pM BY (OdmW_M4 /2 - grid) UNDEROVER TRUNCATE OdmW_M4) AND D25M4pM 
		
	RM4p1 = RECTANGLES OdmW_M4 OdmL_M4 OdmS_M4 INSIDE OF LAYER D25M4pM_1
	D25M4pM_2 = D25M4pM_1 NOT (SIZE RM4p1 BY (OdmS_M4 + grid))
	RM4p2 = RECTANGLES OdmL_M4 OdmW_M4 OdmS_M4 INSIDE OF LAYER D25M4pM_2

	D25M4pM_3pre = D25M4pM_2 NOT (SIZE RM4p2 BY (OdmS_M4 + grid))
	D25M4pM_3 = (SNAP (SIZE D25M4pM_3pre BY -grid) 5) AND D25M4pM_3pre
	RM4p3a = (INT D25M4pM_3 >=OdmW_M4 <=maxOdmW_M4 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M4pM_3 
	RM4p3b = RECTANGLE RM4p3a >= OdmW_M4 BY >= OdmL_M4 ORTHOGONAL ONLY // 1*1.44
	RM4p3  = RECTANGLE RM4p3b <= maxOdmW_M4 BY <= maxOdmL_M4 ORTHOGONAL ONLY// 1.5*6
	RM4A = (((RM4p1 OR RM4p2) OR RM4p3) OUTSIDE RM4EXC) OUTSIDE FRAME4
	RM4  = RM4A NOT INTERACT (EXT RM4A < OdmS_M4 ABUT SINGULAR REGION)
	
	DM4F = FM4F OR RM4

#ELSE
#IFDEF 9K_THICK_M4
	minOPENM4 = DENSITY M4x < minD_M4 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den
	emptyOPENM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M4Empty.den

#IFDEF FILL_IN_SLOT
       	M4ExcHole  = COPY EMPTY	
#ELSE
   	M4InnerHole = HOLES M4i INNER
	M4BigHole = SIZE M4InnerHole BY - excludeHoleSize/2 
	M4ExcHole = (M4InnerHole OUTSIDE M4BigHole) NOT M4i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK4 = SIZE DM4EXCL BY (dm2DMEXCL + grid)	// DM4 to DM4EXCL
	FRAMEA4 = SIZE M4i BY (dm2M4 + grid) // DM4 to metal

    
	M4mid = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i
	M4wide = (SIZE M4mid BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i
	FRAMEB4 = SIZE M4wide BY (dm2WM4 + grid) // DM4 to 4.5um wide metal, 1.5um
	FRAMEC4 = SIZE DUM4 BY (dm2DM4 + grid)   // DM4 to existed dummy metal 0.6um 
	FRAME4Pre = ((FRAMEA4 OR FRAMEB4) OR FRAMEC4) OR M4ExcHole
	#IFDEF CBM_OVER_M4
	    FRAME4 = (((((FRAME4Pre OR BLOCK4) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M4
	#ELSE
	    FRAME4 = ((((FRAME4Pre OR BLOCK4) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M4
    #ENDIF    
	OPENM4 = PUSH ((minOPENM4 OR emptyOPENM4) AND CHIP)
    #IFDEF CBM_OVER_M3
        CTMDMY_BLOCK1 = SIZE M4x_CTMDMY BY (dm2M4_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
        TFRDUMMY_BLOCK4_1 = SIZE M4x_TFRDMY_4 BY (dm2M4_TFRDMY + grid)
        TFRDUMMY_BLOCK4 = TFRDUMMY_BLOCK4_1 OR TFRDUMMY_4
	    FILL4 = ((OPENM4 NOT FRAME4) NOT CTMDMY_BLOCK) NOT TFRDUMMY_BLOCK4
	#ELSE
        TFRDUMMY_BLOCK4_1 = SIZE M4x_TFRDMY_4 BY (dm2M4_TFRDMY + grid)
        TFRDUMMY_BLOCK4 = TFRDUMMY_BLOCK4_1 OR TFRDUMMY_4
        FILL4 = (OPENM4 NOT FRAME4) NOT TFRDUMMY_BLOCK4
    #ENDIF

	FILLW4pre = SIZE FILL4 BY - (Wdm2M4 + grid)
	FILLW4 = (SIZE FILLW4pre BY (WdmW_M4 - grid) UNDEROVER TRUNCATE WdmW_M4) AND FILLW4pre
	M4FW = RECTANGLES WdmW_M4 WdmL_M4 WdmS_M4 OFFSET WdmO_M4 INSIDE OF LAYER FILLW4
	M4FW_EXP = SIZE M4FW BY (WdmS_M4 /2 + grid) OVERUNDER //merge the gaps 
	FILLM4pre = FILL4 NOT (SIZE M4FW_EXP BY (MdmS_M4 + grid))
	FILLM4 = (SIZE FILLM4pre BY (MdmW_M4 - grid) UNDEROVER TRUNCATE MdmW_M4) AND FILLM4pre
	M4F1 = RECTANGLES MdmW_M4 MdmL_M4 MdmS_M4 OFFSET MdmO_M4 INSIDE OF LAYER FILLM4
	M4R1pre = FILLM4pre NOT (SIZE M4F1 BY (dmS_M4 + grid))
	M4R1 = (SIZE M4R1pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R1pre

	M4F2 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R1
	M4R2pre = M4R1 NOT (SIZE M4F2 BY (dmS_M4 + grid))
	M4R2 = (SIZE M4R2pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R2pre

	M4F3 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R2
	M4R3pre = M4R2 NOT (SIZE M4F3 BY (dmS_M4 + grid))
	M4R3 = (SIZE M4R3pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R3pre
	
	M4F4 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 INSIDE OF LAYER M4R3

	M4F = ((((M4F1 OR M4F2) OR M4F3) OR M4F4) OR M4FW) NOT INTERACT IND_COIL_EXD
	FM4 = M4F NOT INTERACT (EXT M4F < dmS_M4 ABUT SINGULAR REGION)
    
	maxOPENM4 = DENSITY M4x FM4 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Max.den
		       
	FM4F = FM4 OUTSIDE maxOPENM4

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M4 = DENSITY M4x FM4F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den

	RM4EXC = SIZE FM4F BY (Odm2DM4 + grid)
// do not fill DMz_S over CTMDMY 
	D25M4pM = (((((PUSH D25M4) NOT FRAME4) NOT RM4EXC) NOT CTMDMY) NOT TFRDUMMY_4) AND CHIP
	D25M4pM_1 = (SIZE D25M4pM BY (OdmW_M4 /2 - grid) UNDEROVER TRUNCATE OdmW_M4) AND D25M4pM 

	RM4p1 = RECTANGLES OdmW_M4 OdmL_M4 OdmS_M4 INSIDE OF LAYER D25M4pM_1
	D25M4pM_2 = D25M4pM_1 NOT (SIZE RM4p1 BY (OdmS_M4 + grid))
	RM4p2 = RECTANGLES OdmL_M4 OdmW_M4 OdmS_M4 INSIDE OF LAYER D25M4pM_2

	D25M4pM_3pre = D25M4pM_2 NOT (SIZE RM4p2 BY (OdmS_M4 + grid))
	D25M4pM_3 = (SNAP (SIZE D25M4pM_3pre BY -grid) 5) AND D25M4pM_3pre
	RM4p3a = (INT D25M4pM_3 >=OdmW_M4 <=maxOdmW_M4 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M4pM_3 
	RM4p3b = RECTANGLE RM4p3a >= OdmW_M4 BY >= OdmL_M4 ORTHOGONAL ONLY// 0.4*1.42
	RM4p3  = RECTANGLE RM4p3b <= maxOdmW_M4 BY <= maxOdmL_M4 ORTHOGONAL ONLY// 1.5*6
	RM4A = ((((RM4p1 OR RM4p2) OR RM4p3) OUTSIDE RM4EXC) OUTSIDE FRAME4) NOT INTERACT IND_COIL_EXD
	RM4  = RM4A NOT INTERACT (EXT RM4A < OdmS_M4 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M3
        FILLM4_CTMDMY = (CTMDMY NOT (SIZE ((FM4F OR RM4) OR (M4x NOT OUTSIDE CTMDMY)) BY (dmS_M4_CTMDMY + grid))) NOT FRAME4
 	    M4F1_CTMDMY = RECTANGLES WdmW_M4 WdmL_M4 dmS_M4_CTMDMY OFFSET WdmO_M4 INSIDE OF LAYER FILLM4_CTMDMY
        M4R1_CTMDMY = FILLM4_CTMDMY NOT (SIZE M4F1_CTMDMY BY (dmS_M4_CTMDMY + grid))
        M4F2_CTMDMY = RECTANGLES WdmW_M4 WdmL_M4 dmS_M4_CTMDMY OFFSET WdmO_M4 INSIDE OF LAYER M4R1_CTMDMY
        M4R2_CTMDMY = WITH WIDTH (M4R1_CTMDMY NOT (SIZE M4F2_CTMDMY BY (dmS_M4_CTMDMY + grid))) >= min_dmW_M4_CTMDMY
        M4F3_CTMDMY = RECTANGLES min_dmW_M4_CTMDMY min_dmW_M4_CTMDMY dmS_M4_CTMDMY OFFSET dmO_M4 INSIDE OF LAYER M4R2_CTMDMY
	    M4R3_CTMDMY = WITH WIDTH (M4R2_CTMDMY NOT (SIZE M4F3_CTMDMY BY (dmS_M4_CTMDMY + grid))) >= min_dmW_M4_CTMDMY
        M4F4_CTMDMY = RECTANGLES min_dmW_M4_CTMDMY min_dmW_M4_CTMDMY dmS_M4_CTMDMY OFFSET dmO_M4 INSIDE OF LAYER M4R3_CTMDMY
	    M4F_CTMDMY_A = ((M4F1_CTMDMY OR M4F2_CTMDMY) OR M4F3_CTMDMY) OR  M4F4_CTMDMY
	    M4F_CTMDMY = M4F_CTMDMY_A NOT INTERACT (EXT M4F_CTMDMY_A < dmS_M4_CTMDMY ABUT SINGULAR REGION)
	    DM4F_pre = (FM4F OR RM4) OR M4F_CTMDMY
    #ELSE
        DM4F_pre = FM4F OR RM4
    #ENDIF
        FILLM4_TFRDMY = (TFRDUMMY_4 NOT (SIZE ((FM4F OR RM4) OR (M4x NOT OUTSIDE TFRDUMMY_4)) BY (dmS_M4_TFRDMY + grid))) NOT FRAME4
     	M4F1_TFRDMY = RECTANGLES dmW_M4_TFRDMY dmL_M4_TFRDMY dmS_M4_TFRDMY OFFSET dmO_M4_TFRDMY INSIDE OF LAYER FILLM4_TFRDMY
        M4R1_TFRDMY = FILLM4_TFRDMY NOT (SIZE M4F1_TFRDMY BY (dmS_M4_TFRDMY + grid))
        M4F2_TFRDMY = RECTANGLES dmW_M4_TFRDMY dmL_M4_TFRDMY dmS_M4_TFRDMY OFFSET dmO_M4_TFRDMY INSIDE OF LAYER M4R1_TFRDMY
        M4R2_TFRDMY = M4R1_TFRDMY NOT (SIZE M4F2_TFRDMY BY (dmS_M4_TFRDMY + grid))
        M4F3_TFRDMY = RECTANGLES dmW_M4_TFRDMY dmL_M4_TFRDMY dmS_M4_TFRDMY OFFSET dmO_M4_TFRDMY INSIDE OF LAYER M4R2_TFRDMY
        M4R3_TFRDMY = M4R2_TFRDMY NOT (SIZE M4F3_TFRDMY BY (dmS_M4_TFRDMY + grid))
        M4F4_TFRDMY = RECTANGLES dmW_M4_TFRDMY dmL_M4_TFRDMY dmS_M4_TFRDMY OFFSET dmO_M4_TFRDMY INSIDE OF LAYER M4R3_TFRDMY
	    M4F_TFRDMY_A = ((M4F1_TFRDMY OR M4F2_TFRDMY) OR M4F3_TFRDMY) OR  M4F4_TFRDMY
	    M4F_TFRDMY = M4F_TFRDMY_A NOT INTERACT (EXT M4F_TFRDMY_A < dmS_M4_TFRDMY ABUT SINGULAR REGION)
        DM4F = DM4F_pre OR M4F_TFRDMY
#ELSE	
#IFDEF 5K_THICK_M4
	minOPENM4 = DENSITY M4x < minD_M4 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den
	emptyOPENM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M4Empty.den

#IFDEF FILL_IN_SLOT
       	M4ExcHole  = COPY EMPTY	
#ELSE
   	M4InnerHole = HOLES M4i INNER
	M4BigHole = SIZE M4InnerHole BY - excludeHoleSize/2 
	M4ExcHole = (M4InnerHole OUTSIDE M4BigHole) NOT M4i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK4 = SIZE DM4EXCL BY (dm2DMEXCL + grid)	// DM4 to DM4EXCL
    
        FRAMEA4 = SIZE M4i BY (dm2M4 + grid) // DM4 to metal
	M4mid = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i
	M4wide = (SIZE M4mid BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i
	FRAMEB4 = SIZE M4wide BY (dm2WM4 + grid) // DM4 to 4.5um wide metal, 1.5um
	FRAMEC4 = SIZE DUM4 BY (dm2DM4 + grid)   // ODM4 or DM4 to existed dummy metal 0.6um 
	FRAME4Pre = ((FRAMEA4 OR FRAMEB4) OR FRAMEC4) OR M4ExcHole
	#IFDEF CBM_OVER_M4
	   FRAME4 = ((((FRAME4Pre OR BLOCK4) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M4
        #ELSE
	   FRAME4 = (((FRAME4Pre OR BLOCK4) OR NFILL) OR HVxx) OR OD_RDG_M4
        #ENDIF
	OPENM4 = PUSH ((minOPENM4 OR emptyOPENM4) AND CHIP)
	FILL4 = OPENM4 NOT FRAME4
	FILLW4pre = SIZE FILL4 BY - (Wdm2M4 + grid)
	FILLW4 = (SIZE FILLW4pre BY (WdmW_M4 - grid) UNDEROVER TRUNCATE WdmW_M4) AND FILLW4pre
	M4FW = RECTANGLES WdmW_M4 WdmL_M4 WdmS_M4 OFFSET WdmO_M4 INSIDE OF LAYER FILLW4
	M4FW_EXP = SIZE M4FW BY (WdmS_M4 /2 + grid) OVERUNDER //merge the gaps 
	FILLM4pre = FILL4 NOT (SIZE M4FW_EXP BY (MdmS_M4 + grid))
	FILLM4 = (SIZE FILLM4pre BY (MdmW_M4 - grid) UNDEROVER TRUNCATE MdmW_M4) AND FILLM4pre
	M4F1 = RECTANGLES MdmW_M4 MdmL_M4 MdmS_M4 OFFSET MdmO_M4 INSIDE OF LAYER FILLM4
	M4R1pre = FILLM4pre NOT (SIZE M4F1 BY (dmS_M4 + grid))
	M4R1 = (SIZE M4R1pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R1pre

	M4F2 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R1
	M4R2pre = M4R1 NOT (SIZE M4F2 BY (dmS_M4 + grid))
	M4R2 = (SIZE M4R2pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R2pre

	M4F3 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 OFFSET dmO_M4 INSIDE OF LAYER M4R2
	M4R3pre = M4R2 NOT (SIZE M4F3 BY (dmS_M4 + grid))
	M4R3 = (SIZE M4R3pre BY (dmW_M4/2 - grid) UNDEROVER TRUNCATE dmW_M4) AND M4R3pre
	
	M4F4 = RECTANGLES dmW_M4 dmL_M4 dmS_M4 INSIDE OF LAYER M4R3

	M4F = (((M4F1 OR M4F2) OR M4F3) OR M4F4) OR M4FW
	FM4 = M4F NOT INTERACT (EXT M4F < dmS_M4 ABUT SINGULAR REGION)
    
	maxOPENM4 = DENSITY M4x FM4 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Max.den
		       
	FM4F = FM4 OUTSIDE maxOPENM4

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M4 = DENSITY M4x FM4F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den

	RM4EXC = SIZE FM4F BY (Odm2DM4 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M4pM = ((((PUSH D25M4) NOT FRAME4) NOT RM4EXC) NOT CTMDMY) AND CHIP
	D25M4pM_1 = (SIZE D25M4pM BY (OdmW_M4 /2 - grid) UNDEROVER TRUNCATE OdmW_M4) AND D25M4pM 
		
	RM4p1 = RECTANGLES OdmW_M4 OdmL_M4 OdmS_M4 INSIDE OF LAYER D25M4pM_1
	D25M4pM_2 = D25M4pM_1 NOT (SIZE RM4p1 BY (OdmS_M4 + grid))
	RM4p2 = RECTANGLES OdmL_M4 OdmW_M4 OdmS_M4 INSIDE OF LAYER D25M4pM_2

	D25M4pM_3pre = D25M4pM_2 NOT (SIZE RM4p2 BY (OdmS_M4 + grid))
	D25M4pM_3 = (SNAP (SIZE D25M4pM_3pre BY -grid) 5) AND D25M4pM_3pre
	RM4p3a = (INT D25M4pM_3 >=OdmW_M4 <=maxOdmW_M4 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M4pM_3 
	RM4p3b = RECTANGLE RM4p3a >= OdmW_M4 BY >= OdmL_M4 ORTHOGONAL ONLY// 0.8*1.42
	RM4p3  = RECTANGLE RM4p3b <= maxOdmW_M4 BY <= maxOdmL_M4 ORTHOGONAL ONLY// 1.5*6
	RM4A = (((RM4p1 OR RM4p2) OR RM4p3) OUTSIDE RM4EXC) OUTSIDE FRAME4
	RM4  = RM4A NOT INTERACT (EXT RM4A < OdmS_M4 ABUT SINGULAR REGION)
	
	DM4F = FM4F OR RM4

#ELSE
	D30M4 = DENSITY M4x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M4.den30
	D40M4 = DENSITY M4x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M4.den40
	D50M4 = DENSITY M4x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M4.den50
	emptyM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M4.den_empty

#IFDEF FILL_IN_SLOT
       	M4ExcHole  = COPY EMPTY	
#ELSE
   	M4InnerHole = HOLES M4i INNER
	M4BigHole = SIZE M4InnerHole BY - excludeHoleSize/2 
	M4ExcHole = (M4InnerHole OUTSIDE M4BigHole) NOT M4i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK4 = SIZE DM4EXCL BY (dm2DMEXCL + grid)	// DM4 to DM4EXCL
	
        FRAMEA4 = SIZE M4i BY (DM4_301 + grid)	  // DM4 to real metal
        FRAMEA4RM = SIZE M4i BY (DM4_304 + grid)	  // RM4 to real metal

	FRAMEA4_45 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (DM445_301 + grid) // DM4 to 45 degree metal
	FRAMEA4RM_45 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (DM445_304 + grid) // DM4 to 45 degree real metal
        
	M4mid = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i
	
	M4wide_W1 = (SIZE M4mid BY wideM4_W1/2 UNDEROVER TRUNCATE wideM4_W1/2) AND M4i	
	M4wide_W11 = (SIZE M4wide_W1 BY wideM4_W11/2 UNDEROVER TRUNCATE wideM4_W11/2) AND M4i
	M4wide_W2 = (SIZE M4wide_W1 BY wideM4_W2/2 UNDEROVER TRUNCATE wideM4_W2/2) AND M4i
	M4wide = (SIZE M4wide_W2 BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i

	FRAMEB4 = SIZE M4wide BY (dm2WM4 + grid) // DM4 to wide metal 4.5
	FRAMEB4_W2 = SIZE M4wide_W2 BY (dm2WM4_W2 + grid) // DM4 to 1.5um wide metal 0.5
	FRAMEB4_W1 = SIZE M4wide_W1 BY (dm2WM4_W1 + grid) // DM4 to 0.21um wide metal
	FRAMEB4_W11 = SIZE M4wide_W11 BY (dm2WM4_W11 + grid) // DM4 to 0.38um wide metal
    
	FRAMEC4 = SIZE DUM4 BY (dm2DM4 + grid)   // DM4 to existed dummy metal 0.4
	FRAMEC4RM = SIZE DUM4 BY (Odm2DM4 + grid)   // ODM4 to existed dummy metal 0.6 
	FRAME4Pre = ((((FRAMEA4 OR FRAMEB4) OR FRAMEC4) OR M4ExcHole) OR FRAMEB4_W2) OR FRAMEA4_45
	FRAME4PreRM = ((((((FRAMEA4RM OR FRAMEB4) OR FRAMEC4RM) OR M4ExcHole) OR FRAMEB4_W2) OR FRAMEB4_W1) OR FRAMEB4_W11) OR FRAMEA4RM_45
	
	#IFDEF CBM_OVER_M4
	    FRAME4 = (((((FRAME4Pre OR BLOCK4) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M4
	    FRAME4RM = ((((FRAME4PreRM OR BLOCK4) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M4
	#ELSE
        FRAME4 = ((((FRAME4Pre OR BLOCK4) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M4
	    FRAME4RM = (((FRAME4PreRM OR BLOCK4) OR NFILLRM) OR HVxx) OR OD_RDG_M4
	#ENDIF

//****************************************************************************

	D30M4p = (PUSH D30M4) NOT FRAME4
	O30M4pre = D30M4p AND CHIP
	FD21M4s = COPY FRAME4

	O30M4preA = SIZE O30M4pre BY - (DM4_303 + grid)
	O30M4preB = (SIZE O30M4preA BY (WM4_303 - grid) UNDEROVER TRUNCATE WM4_303) AND O30M4preA

	// 1st 2*2
	F303M4 = (RECTANGLES WM4_303 LM4_303 SM4_303 OFFSET OM4_303  INSIDE OF LAYER O30M4preB) NOT INTERACT IND_COIL_EXD

	
	F303M4_EXP = SIZE F303M4 BY ( WM4_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M4preF1 = O30M4pre NOT (SIZE F303M4_EXP BY (SM4_302 + grid))
	O30M4preF = (SNAP (SIZE O30M4preF1 BY -grid) 5) AND O30M4preF1

	B30M4pre = (INT O30M4preF >= WM4_301 <= maxW_DM4V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M4preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M4pre2 = RECTANGLE B30M4pre >= WM4_301 BY >= minL_DM4V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M4pre3 = RECTANGLE B30M4pre2 <= maxW_DM4V_3011 BY <= maxL_DM4V_3011 ORTHOGONAL ONLY

	B30M4 = (B30M4pre3 NOT INTERACT (EXT B30M4pre3 < SM4_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M4s = ((SIZE B30M4 BY (SM4_301 + grid)) OR FD21M4s) OR (SIZE F303M4_EXP BY (SM4_302 + grid))
	O30M4 = O30M4preF NOT B30M4s

	
	// 3rd, 0.5*1.2
	F302M4 = (RECTANGLES WM4_302 LM4_302 SM4_302 OFFSET OM4_302 INSIDE OF LAYER O30M4) NOT INTERACT IND_COIL_EXD
	F302M4s = (SIZE F302M4 BY (SM4_301 + grid)) OR B30M4s
	R302M4pre = O30M4 NOT F302M4s
	R302M4 = (SIZE R302M4pre BY (WM4_301/2 + grid) UNDEROVER TRUNCATE WM4_301) AND R302M4pre

	// 4th, 0.5*0.5
	F3012M4 = (RECTANGLES WM4_301 LM4_301 SM4_301 OFFSET OM4_301 INSIDE OF LAYER R302M4) NOT INTERACT IND_COIL_EXD
	F3012M4s = (SIZE F3012M4 BY (SM4_301 + grid)) OR F302M4s
	R3012M4pre = R302M4pre NOT F3012M4s
	R3012M4 = (SIZE R3012M4pre BY (WM4_301/2 + grid) UNDEROVER TRUNCATE WM4_301) AND R3012M4pre

	// 5th, regular 0.5*0.5
	F301M4 = (RECTANGLES WM4_301 LM4_301 SM4_301 INSIDE OF LAYER R3012M4) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M4s = (SIZE F301M4 BY (SM4_301 + grid)) OR F3012M4s

	F30M4 = (((B30M4 OR F302M4) OR F3012M4) OR F301M4) OR F303M4
	O40M4pre = (((PUSH D40M4) NOT FRAME4) NOT F301M4s) AND CHIP


	O40M4preA = SIZE O40M4pre BY - (DM4_403 + grid)
	O40M4preB = (SIZE O40M4preA BY (WM4_403 - grid) UNDEROVER TRUNCATE WM4_403) AND O40M4preA

	// 1st 2*2
	F403M4 = RECTANGLES WM4_403 LM4_403 SM4_403 OFFSET OM4_403  INSIDE OF LAYER O40M4preB

	
	F403M4_EXP = SIZE F403M4 BY ( WM4_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M4preF1 = O40M4pre NOT (SIZE F403M4_EXP BY (SM4_402 + grid))
	O40M4preF = (SNAP (SIZE O40M4preF1 BY -grid) 5) AND O40M4preF1

	B40M4pre = (INT O40M4preF >= WM4_401 <= maxW_DM4V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M4preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M4pre2 = RECTANGLE B40M4pre >= WM4_401 BY >= minL_DM4V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M4pre3 = RECTANGLE B40M4pre2 <= maxW_DM4V_4011 BY <= maxL_DM4V_4011 ORTHOGONAL ONLY

	B40M4 = (B40M4pre3 NOT INTERACT (EXT B40M4pre3 < SM4_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M4s = ((SIZE B40M4 BY (SM4_401 + grid)) OR F301M4s) OR (SIZE F403M4_EXP BY (SM4_402 + grid))
	O40M4 = O40M4preF NOT B40M4s

	
	// 3rd, 0.5*1.2
	F402M4 = (RECTANGLES WM4_402 LM4_402 SM4_402 OFFSET OM4_402 INSIDE OF LAYER O40M4) NOT INTERACT IND_COIL_EXD
	F402M4s = (SIZE F402M4 BY (SM4_401 + grid)) OR B40M4s
	R402M4pre = O40M4 NOT F402M4s
	R402M4 = (SIZE R402M4pre BY (WM4_401/2 + grid) UNDEROVER TRUNCATE WM4_401) AND R402M4pre

	// 4th, 0.5*0.5
	F4012M4 = (RECTANGLES WM4_401 LM4_401 SM4_401 OFFSET OM4_401 INSIDE OF LAYER R402M4) NOT INTERACT IND_COIL_EXD
	F4012M4s = (SIZE F4012M4 BY (SM4_401 + grid)) OR F402M4s
	R4012M4pre = R402M4pre NOT F4012M4s
	R4012M4 = (SIZE R4012M4pre BY (WM4_401/2 + grid) UNDEROVER TRUNCATE WM4_401) AND R4012M4pre

	// 5th, regular 0.5*0.5
	F401M4 = (RECTANGLES WM4_401 LM4_401 SM4_401 INSIDE OF LAYER R4012M4) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M4s = (SIZE F401M4 BY (SM4_401 + grid)) OR F4012M4s

	F40M4 = (((B40M4 OR F402M4) OR F4012M4) OR F401M4) OR F403M4
	O50M4pre = (((PUSH (D50M4 OR emptyM4)) NOT FRAME4) NOT F401M4s) AND CHIP


	O50M4preA = SIZE O50M4pre BY - (DM4_503 + grid)
	O50M4preB = (SIZE O50M4preA BY (WM4_503 - grid) UNDEROVER TRUNCATE WM4_503) AND O50M4preA

	// 1st 2*2
	F503M4 = RECTANGLES WM4_503 LM4_503 SM4_503 OFFSET OM4_503  INSIDE OF LAYER O50M4preB

	
	F503M4_EXP = SIZE F503M4 BY ( WM4_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M4preF1 = O50M4pre NOT (SIZE F503M4_EXP BY (SM4_502 + grid))
	O50M4preF = (SNAP (SIZE O50M4preF1 BY -grid) 5) AND O50M4preF1

	B50M4pre = (INT O50M4preF >= WM4_501 <= maxW_DM4V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M4preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M4pre2 = RECTANGLE B50M4pre >= WM4_501 BY >= minL_DM4V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M4pre3 = RECTANGLE B50M4pre2 <= maxW_DM4V_5011 BY <= maxL_DM4V_5011 ORTHOGONAL ONLY

	B50M4 = (B50M4pre3 NOT INTERACT (EXT B50M4pre3 < SM4_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M4s = ((SIZE B50M4 BY (SM4_501 + grid)) OR F401M4s) OR (SIZE F503M4_EXP BY (SM4_502 + grid))
	O50M4 = O50M4preF NOT B50M4s

	
	// 3rd, 0.5*1.2
	F502M4 = (RECTANGLES WM4_502 LM4_502 SM4_502 OFFSET OM4_502 INSIDE OF LAYER O50M4) NOT INTERACT IND_COIL_EXD
	F502M4s = (SIZE F502M4 BY (SM4_501 + grid)) OR B50M4s
	R502M4pre = O50M4 NOT F502M4s
	R502M4 = (SIZE R502M4pre BY (WM4_501/2 + grid) UNDEROVER TRUNCATE WM4_501) AND R502M4pre

	// 4th, 0.5*0.5
	F5012M4 = (RECTANGLES WM4_501 LM4_501 SM4_501 OFFSET OM4_501 INSIDE OF LAYER R502M4) NOT INTERACT IND_COIL_EXD
	F5012M4s = (SIZE F5012M4 BY (SM4_501 + grid)) OR F502M4s
	R5012M4pre = R502M4pre NOT F5012M4s
	R5012M4 = (SIZE R5012M4pre BY (WM4_501/2 + grid) UNDEROVER TRUNCATE WM4_501) AND R5012M4pre

	// 5th, regular 0.5*0.5
	F501M4 = (RECTANGLES WM4_501 LM4_501 SM4_501 INSIDE OF LAYER R5012M4) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M4s = (SIZE F501M4 BY (SM4_501 + grid)) OR F5012M4s

	F50M4 = (((B50M4 OR F502M4) OR F5012M4) OR F501M4) OR F503M4

//****************************************************************************
    
	exceedM4 = DENSITY M4x F30M4 F40M4 F50M4 > maxD_M4 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M4.den_exceed
	exceedM4DN2 = DENSITY M4x F30M4 F40M4 F50M4 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M4.DN.2.den_exceed

	removeM4R = ((PUSH (exceedM4 AND (D50M4 OR emptyM4))) NOT FRAME4) AND CHIP 
	removeM4 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM4R
	
	F30M4x = (F30M4 NOT INTERACT exceedM4DN2) NOT INTERACT removeM4
	F40M4x = (F40M4 NOT INTERACT exceedM4DN2) NOT INTERACT removeM4
	F50M4x = (F50M4 NOT INTERACT exceedM4DN2) NOT INTERACT removeM4
	FM4xA  = (F30M4x OR F40M4x) OR F50M4x
	FM4x   = FM4xA NOT INTERACT (EXT FM4xA < DM4_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM4
	lackM4 = DENSITY M4x FM4x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M4.den_lack
	RM4EXC = SIZE (((FM4x OR F303M4_EXP) OR F403M4_EXP) OR F503M4_EXP) BY (DM4_301 + grid)
	BigemptyM4 = PUSH ((SIZE emptyM4 BY 25 UNDEROVER) AND emptyM4)
    
	lackM4pRM = (((((PUSH lackM4) NOT RM4EXC) NOT BigemptyM4) NOT exceedM4) NOT FRAME4RM ) AND CHIP
	lackM4pRM_1 = WITH WIDTH lackM4pRM >= minWM4_304
        RM4p1 = RECTANGLES minWM4_304 minLM4_304 SM4_304 OFFSET OM4_304 INSIDE OF LAYER lackM4pRM_1
	lackM4pRM_2 = WITH WIDTH (lackM4pRM_1 NOT (SIZE RM4p1 BY (SM4_304 + grid))) >= minWM4_304
        RM4p2 = RECTANGLES minLM4_304 minWM4_304 SM4_304 OFFSET OM4_304 INSIDE OF LAYER lackM4pRM_2
        lackM4pRM_3pre = lackM4pRM_2 NOT (SIZE RM4p2 BY (SM4_304 + grid))
	lackM4pRM_3 = (SNAP (SIZE lackM4pRM_3pre BY -grid) 5) AND lackM4pRM_3pre 
	       
	RM4p3pre = (INT lackM4pRM_3 >= minWM4_304 <= maxWM4_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM4pRM_3 
	RM4p3pre2 = RECTANGLE RM4p3pre >= minWM4_304 BY >= minLM4_304 ORTHOGONAL ONLY// 0.13*0.6
	RM4p3 = RECTANGLE RM4p3pre2 <= maxWM4_304 BY <= maxLM4_304 ORTHOGONAL ONLY// 0.2*6

	RM4A = ((((RM4p1 OR RM4p2) OR RM4p3) OUTSIDE RM4EXC) OUTSIDE FRAME4RM) NOT INTERACT IND_COIL_EXD
	RM4F = RM4A NOT INTERACT (EXT RM4A < SM4_304 ABUT SINGULAR REGION)

#ENDIF

DM4F = COPY FM4x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM5

#IFDEF 34K_THICK_M5
	minOPENM5 = DENSITY M5x < minD_M5 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den
	emptyOPENM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M5Empty.den
        #IFDEF FILL_IN_SLOT
       	M5ExcHole  = COPY EMPTY	
        #ELSE
   	M5InnerHole = HOLES M5i INNER
	M5BigHole = SIZE M5InnerHole BY - excludeHoleSize/2
	M5ExcHole = (M5InnerHole OUTSIDE M5BigHole) NOT M5i
        #ENDIF	
        BLOCK5    = SIZE DM5EXCL BY (dm2DMEXCL + grid)
        FRAMEA5   = SIZE M5i BY (dm2M5 + grid)
	M5mid     = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i
	M5wide    = (SIZE M5mid BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i
	FRAMEB5   = SIZE M5wide BY (dm2WM5 + grid) // DM5 to 4.5um wide metal 3um
	FRAMEC5   = SIZE DUM5 BY (dm2DM5 + grid)    
	FRAME5Pre = ((FRAMEA5 OR FRAMEB5) OR FRAMEC5) OR M5ExcHole
	#IFDEF CBM_OVER_M5
        FRAME5 = ((((FRAME5Pre OR BLOCK5) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M5  
	#ELSE
	    FRAME5 = (((FRAME5Pre OR BLOCK5) OR NFILL) OR HVxx) OR OD_RDG_M5
	#ENDIF	
	OPENM5 = PUSH ((minOPENM5 OR emptyOPENM5) AND CHIP)
	FILL5 = OPENM5 NOT FRAME5
	FILLW5pre = SIZE FILL5 BY - (Wdm2M5 + grid)
	FILLW5 = (SIZE FILLW5pre BY (WdmW_M5 - grid) UNDEROVER TRUNCATE WdmW_M5) AND FILLW5pre
	M5FW = RECTANGLES WdmW_M5 WdmL_M5 WdmS_M5 OFFSET WdmO_M5 INSIDE OF LAYER FILLW5
	M5FW_EXP = SIZE M5FW BY (WdmS_M5 /2 + grid) OVERUNDER	// merge the gaps
	FILLM5pre = FILL5 NOT (SIZE M5FW_EXP BY (MdmS_M5 + grid))
	FILLM5 = (SIZE FILLM5pre BY (MdmW_M5 - grid) UNDEROVER TRUNCATE MdmW_M5) AND FILLM5pre
	M5F1 = RECTANGLES MdmW_M5 MdmL_M5 MdmS_M5 OFFSET MdmO_M5 INSIDE OF LAYER FILLM5
	M5R1pre = FILLM5pre NOT (SIZE M5F1 BY (dmS_M5 + grid))
	M5R1 = (SIZE M5R1pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R1pre

	M5F2 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R1
	M5R2pre = M5R1 NOT (SIZE M5F2 BY (dmS_M5 + grid))
	M5R2 = (SIZE M5R2pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R2pre

	M5F3 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R2
	M5R3pre = M5R2 NOT (SIZE M5F3 BY (dmS_M5 + grid))
	M5R3 = (SIZE M5R3pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R3pre
	
	M5F4 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 INSIDE OF LAYER M5R3 

	M5F = (((M5F1 OR M5F2) OR M5F3) OR M5F4) OR M5FW
	FM5 = M5F NOT INTERACT (EXT M5F < dmS_M5 ABUT SINGULAR REGION)

	maxOPENM5 = DENSITY M5x FM5 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Max.den
		       
	DM5F = FM5 OUTSIDE maxOPENM5

#ELSE
#IFDEF 12K_THICK_M5
	
	minOPENM5 = DENSITY M5x < minD_M5 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den
	emptyOPENM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M5Empty.den
#IFDEF FILL_IN_SLOT
       	M5ExcHole  = COPY EMPTY	
#ELSE
   	M5InnerHole = HOLES M5i INNER
	M5BigHole = SIZE M5InnerHole BY - excludeHoleSize/2 
	M5ExcHole = (M5InnerHole OUTSIDE M5BigHole) NOT M5i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK5 = SIZE DM5EXCL BY (dm2DMEXCL + grid)	// DM5 to DM5EXCL
    
        FRAMEA5 = SIZE M5i BY (dm2M5 + grid) // DM5 to metal
	M5mid = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i
	M5wide = (SIZE M5mid BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i
	FRAMEB5 = SIZE M5wide BY (dm2WM5 + grid) // DM5 to 4.5um wide metal, 1.5um
	FRAMEC5 = SIZE DUM5 BY (dm2DM5 + grid)   // ODM5 or DM5 to existed dummy metal 0.6um 
	FRAME5Pre = ((FRAMEA5 OR FRAMEB5) OR FRAMEC5) OR M5ExcHole
        #IFDEF CBM_OVER_M5
	   FRAME5 = ((((FRAME5Pre OR BLOCK5) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M5	// wrong setting will add nothing
        #ELSE 
	   FRAME5 = (((FRAME5Pre OR BLOCK5) OR NFILL) OR HVxx) OR OD_RDG_M5
        #ENDIF 

	OPENM5 = PUSH ((minOPENM5 OR emptyOPENM5) AND CHIP)
	FILL5 = OPENM5 NOT FRAME5
	FILLW5pre = SIZE FILL5 BY - (Wdm2M5 + grid)
	FILLW5 = (SIZE FILLW5pre BY (WdmW_M5 - grid) UNDEROVER TRUNCATE WdmW_M5) AND FILLW5pre
	M5FW = RECTANGLES WdmW_M5 WdmL_M5 WdmS_M5 OFFSET WdmO_M5 INSIDE OF LAYER FILLW5
	M5FW_EXP = SIZE M5FW BY (WdmS_M5 /2 + grid) OVERUNDER //merge the gaps 
	FILLM5pre = FILL5 NOT (SIZE M5FW_EXP BY (MdmS_M5 + grid))
	FILLM5 = (SIZE FILLM5pre BY (MdmW_M5 - grid) UNDEROVER TRUNCATE MdmW_M5) AND FILLM5pre
	M5F1 = RECTANGLES MdmW_M5 MdmL_M5 MdmS_M5 OFFSET MdmO_M5 INSIDE OF LAYER FILLM5
	M5R1pre = FILLM5pre NOT (SIZE M5F1 BY (dmS_M5 + grid))
	M5R1 = (SIZE M5R1pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R1pre

	M5F2 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R1
	M5R2pre = M5R1 NOT (SIZE M5F2 BY (dmS_M5 + grid))
	M5R2 = (SIZE M5R2pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R2pre

	M5F3 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R2
	M5R3pre = M5R2 NOT (SIZE M5F3 BY (dmS_M5 + grid))
	M5R3 = (SIZE M5R3pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R3pre
	
	M5F4 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 INSIDE OF LAYER M5R3

	M5F = (((M5F1 OR M5F2) OR M5F3) OR M5F4) OR M5FW
	FM5 = M5F NOT INTERACT (EXT M5F < dmS_M5 ABUT SINGULAR REGION)
    
	maxOPENM5 = DENSITY M5x FM5 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Max.den
		       
	FM5F = FM5 OUTSIDE maxOPENM5

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M5 = DENSITY M5x FM5F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den

	RM5EXC = SIZE FM5F BY (Odm2DM5 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M5pM = ((((PUSH D25M5) NOT FRAME5) NOT RM5EXC) NOT CTMDMY) AND CHIP
	D25M5pM_1 = (SIZE D25M5pM BY (OdmW_M5 /2 - grid) UNDEROVER TRUNCATE OdmW_M5) AND D25M5pM 
		
	RM5p1 = RECTANGLES OdmW_M5 OdmL_M5 OdmS_M5 INSIDE OF LAYER D25M5pM_1
	D25M5pM_2 = D25M5pM_1 NOT (SIZE RM5p1 BY (OdmS_M5 + grid))
	RM5p2 = RECTANGLES OdmL_M5 OdmW_M5 OdmS_M5 INSIDE OF LAYER D25M5pM_2

	D25M5pM_3pre = D25M5pM_2 NOT (SIZE RM5p2 BY (OdmS_M5 + grid))
	D25M5pM_3 = (SNAP (SIZE D25M5pM_3pre BY -grid) 5) AND D25M5pM_3pre
	RM5p3a = (INT D25M5pM_3 >=OdmW_M5 <=maxOdmW_M5 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M5pM_3 
	RM5p3b = RECTANGLE RM5p3a >= OdmW_M5 BY >= OdmL_M5 ORTHOGONAL ONLY // 1*1.44
	RM5p3  = RECTANGLE RM5p3b <= maxOdmW_M5 BY <= maxOdmL_M5 ORTHOGONAL ONLY// 1.5*6
	RM5A = (((RM5p1 OR RM5p2) OR RM5p3) OUTSIDE RM5EXC) OUTSIDE FRAME5
	RM5  = RM5A NOT INTERACT (EXT RM5A < OdmS_M5 ABUT SINGULAR REGION)
	
	DM5F = FM5F OR RM5

#ELSE
#IFDEF 9K_THICK_M5
	minOPENM5 = DENSITY M5x < minD_M5 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den
	emptyOPENM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M5Empty.den

#IFDEF FILL_IN_SLOT
       	M5ExcHole  = COPY EMPTY	
#ELSE
   	M5InnerHole = HOLES M5i INNER
	M5BigHole = SIZE M5InnerHole BY - excludeHoleSize/2 
	M5ExcHole = (M5InnerHole OUTSIDE M5BigHole) NOT M5i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK5 = SIZE DM5EXCL BY (dm2DMEXCL + grid)	// DM5 to DM5EXCL
	FRAMEA5 = SIZE M5i BY (dm2M5 + grid) // DM5 to metal

    
	M5mid = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i
	M5wide = (SIZE M5mid BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i
	FRAMEB5 = SIZE M5wide BY (dm2WM5 + grid) // DM5 to 4.5um wide metal, 1.5um
	FRAMEC5 = SIZE DUM5 BY (dm2DM5 + grid)   // DM5 to existed dummy metal 0.6um 
	FRAME5Pre = ((FRAMEA5 OR FRAMEB5) OR FRAMEC5) OR M5ExcHole
	#IFDEF CBM_OVER_M5
	    FRAME5 = (((((FRAME5Pre OR BLOCK5) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M5
	#ELSE
	    FRAME5 = ((((FRAME5Pre OR BLOCK5) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M5
    #ENDIF    
	OPENM5 = PUSH ((minOPENM5 OR emptyOPENM5) AND CHIP)
    #IFDEF CBM_OVER_M4
        CTMDMY_BLOCK1 = SIZE M5x_CTMDMY BY (dm2M5_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
        TFRDUMMY_BLOCK5_1 = (SIZE M5x_TFRDMY_5 BY (dm2M5_TFRDMY + grid)) OR (SIZE M5x_TFRDMY_4 BY (dm2M5_TFRDMY + grid))
        TFRDUMMY_BLOCK5 = (TFRDUMMY_BLOCK5_1 OR TFRDUMMY_4) OR TFRDUMMY_5
	    FILL5 = ((OPENM5 NOT FRAME5) NOT CTMDMY_BLOCK) NOT TFRDUMMY_BLOCK5
	#ELSE
        TFRDUMMY_BLOCK5_1 = (SIZE M5x_TFRDMY_5 BY (dm2M5_TFRDMY + grid)) OR (SIZE M5x_TFRDMY_4 BY (dm2M5_TFRDMY + grid))
        TFRDUMMY_BLOCK5 = (TFRDUMMY_BLOCK5_1 OR TFRDUMMY_4) OR TFRDUMMY_5
        FILL5 = (OPENM5 NOT FRAME5) NOT TFRDUMMY_BLOCK5
    #ENDIF

	FILLW5pre = SIZE FILL5 BY - (Wdm2M5 + grid)
	FILLW5 = (SIZE FILLW5pre BY (WdmW_M5 - grid) UNDEROVER TRUNCATE WdmW_M5) AND FILLW5pre
	M5FW = RECTANGLES WdmW_M5 WdmL_M5 WdmS_M5 OFFSET WdmO_M5 INSIDE OF LAYER FILLW5
	M5FW_EXP = SIZE M5FW BY (WdmS_M5 /2 + grid) OVERUNDER //merge the gaps 
	FILLM5pre = FILL5 NOT (SIZE M5FW_EXP BY (MdmS_M5 + grid))
	FILLM5 = (SIZE FILLM5pre BY (MdmW_M5 - grid) UNDEROVER TRUNCATE MdmW_M5) AND FILLM5pre
	M5F1 = RECTANGLES MdmW_M5 MdmL_M5 MdmS_M5 OFFSET MdmO_M5 INSIDE OF LAYER FILLM5
	M5R1pre = FILLM5pre NOT (SIZE M5F1 BY (dmS_M5 + grid))
	M5R1 = (SIZE M5R1pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R1pre

	M5F2 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R1
	M5R2pre = M5R1 NOT (SIZE M5F2 BY (dmS_M5 + grid))
	M5R2 = (SIZE M5R2pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R2pre

	M5F3 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R2
	M5R3pre = M5R2 NOT (SIZE M5F3 BY (dmS_M5 + grid))
	M5R3 = (SIZE M5R3pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R3pre
	
	M5F4 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 INSIDE OF LAYER M5R3

	M5F = ((((M5F1 OR M5F2) OR M5F3) OR M5F4) OR M5FW) NOT INTERACT IND_COIL_EXD
	FM5 = M5F NOT INTERACT (EXT M5F < dmS_M5 ABUT SINGULAR REGION)
    
	maxOPENM5 = DENSITY M5x FM5 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Max.den
		       
	FM5F = FM5 OUTSIDE maxOPENM5

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M5 = DENSITY M5x FM5F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den

	RM5EXC = SIZE FM5F BY (Odm2DM5 + grid)
// do not fill DMz_S over CTMDMY 
	D25M5pM = ((((((PUSH D25M5) NOT FRAME5) NOT RM5EXC) NOT CTMDMY) NOT TFRDUMMY_4) NOT TFRDUMMY_5) AND CHIP
	D25M5pM_1 = (SIZE D25M5pM BY (OdmW_M5 /2 - grid) UNDEROVER TRUNCATE OdmW_M5) AND D25M5pM 

	RM5p1 = RECTANGLES OdmW_M5 OdmL_M5 OdmS_M5 INSIDE OF LAYER D25M5pM_1
	D25M5pM_2 = D25M5pM_1 NOT (SIZE RM5p1 BY (OdmS_M5 + grid))
	RM5p2 = RECTANGLES OdmL_M5 OdmW_M5 OdmS_M5 INSIDE OF LAYER D25M5pM_2

	D25M5pM_3pre = D25M5pM_2 NOT (SIZE RM5p2 BY (OdmS_M5 + grid))
	D25M5pM_3 = (SNAP (SIZE D25M5pM_3pre BY -grid) 5) AND D25M5pM_3pre
	RM5p3a = (INT D25M5pM_3 >=OdmW_M5 <=maxOdmW_M5 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M5pM_3 
	RM5p3b = RECTANGLE RM5p3a >= OdmW_M5 BY >= OdmL_M5 ORTHOGONAL ONLY// 0.4*1.42
	RM5p3  = RECTANGLE RM5p3b <= maxOdmW_M5 BY <= maxOdmL_M5 ORTHOGONAL ONLY// 1.5*6
	RM5A = ((((RM5p1 OR RM5p2) OR RM5p3) OUTSIDE RM5EXC) OUTSIDE FRAME5) NOT INTERACT IND_COIL_EXD
	RM5  = RM5A NOT INTERACT (EXT RM5A < OdmS_M5 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M4
        FILLM5_CTMDMY = (CTMDMY NOT (SIZE ((FM5F OR RM5) OR (M5x NOT OUTSIDE CTMDMY)) BY (dmS_M5_CTMDMY + grid))) NOT FRAME5
 	    M5F1_CTMDMY = RECTANGLES WdmW_M5 WdmL_M5 dmS_M5_CTMDMY OFFSET WdmO_M5 INSIDE OF LAYER FILLM5_CTMDMY
        M5R1_CTMDMY = FILLM5_CTMDMY NOT (SIZE M5F1_CTMDMY BY (dmS_M5_CTMDMY + grid))
        M5F2_CTMDMY = RECTANGLES WdmW_M5 WdmL_M5 dmS_M5_CTMDMY OFFSET WdmO_M5 INSIDE OF LAYER M5R1_CTMDMY
        M5R2_CTMDMY = WITH WIDTH (M5R1_CTMDMY NOT (SIZE M5F2_CTMDMY BY (dmS_M5_CTMDMY + grid))) >= min_dmW_M5_CTMDMY
        M5F3_CTMDMY = RECTANGLES min_dmW_M5_CTMDMY min_dmW_M5_CTMDMY dmS_M5_CTMDMY OFFSET dmO_M5 INSIDE OF LAYER M5R2_CTMDMY
	    M5R3_CTMDMY = WITH WIDTH (M5R2_CTMDMY NOT (SIZE M5F3_CTMDMY BY (dmS_M5_CTMDMY + grid))) >= min_dmW_M5_CTMDMY
        M5F4_CTMDMY = RECTANGLES min_dmW_M5_CTMDMY min_dmW_M5_CTMDMY dmS_M5_CTMDMY OFFSET dmO_M5 INSIDE OF LAYER M5R3_CTMDMY
	    M5F_CTMDMY_A = ((M5F1_CTMDMY OR M5F2_CTMDMY) OR M5F3_CTMDMY) OR  M5F4_CTMDMY
	    M5F_CTMDMY = M5F_CTMDMY_A NOT INTERACT (EXT M5F_CTMDMY_A < dmS_M5_CTMDMY ABUT SINGULAR REGION)
	    DM5F_pre = (FM5F OR RM5) OR M5F_CTMDMY
    #ELSE
        DM5F_pre = FM5F OR RM5
    #ENDIF
        FILLM5_TFRDMY_1 = (TFRDUMMY_5 NOT (SIZE ((FM5F OR RM5) OR (M5x NOT OUTSIDE TFRDUMMY_5)) BY (dmS_M5_TFRDMY + grid))) NOT FRAME5
        FILLM5_TFRDMY_2 = (TFRDUMMY_4 NOT (SIZE ((FM5F OR RM5) OR (M5x NOT OUTSIDE TFRDUMMY_4)) BY (dmS_M5_TFRDMY + grid))) NOT FRAME5
        FILLM5_TFRDMY = FILLM5_TFRDMY_1 OR FILLM5_TFRDMY_2 
     	M5F1_TFRDMY = RECTANGLES dmW_M5_TFRDMY dmL_M5_TFRDMY dmS_M5_TFRDMY OFFSET dmO_M5_TFRDMY INSIDE OF LAYER FILLM5_TFRDMY
        M5R1_TFRDMY = FILLM5_TFRDMY NOT (SIZE M5F1_TFRDMY BY (dmS_M5_TFRDMY + grid))
        M5F2_TFRDMY = RECTANGLES dmW_M5_TFRDMY dmL_M5_TFRDMY dmS_M5_TFRDMY OFFSET dmO_M5_TFRDMY INSIDE OF LAYER M5R1_TFRDMY
        M5R2_TFRDMY = M5R1_TFRDMY NOT (SIZE M5F2_TFRDMY BY (dmS_M5_TFRDMY + grid))
        M5F3_TFRDMY = RECTANGLES dmW_M5_TFRDMY dmL_M5_TFRDMY dmS_M5_TFRDMY OFFSET dmO_M5_TFRDMY INSIDE OF LAYER M5R2_TFRDMY
        M5R3_TFRDMY = M5R2_TFRDMY NOT (SIZE M5F3_TFRDMY BY (dmS_M5_TFRDMY + grid))
        M5F4_TFRDMY = RECTANGLES dmW_M5_TFRDMY dmL_M5_TFRDMY dmS_M5_TFRDMY OFFSET dmO_M5_TFRDMY INSIDE OF LAYER M5R3_TFRDMY
	    M5F_TFRDMY_A = ((M5F1_TFRDMY OR M5F2_TFRDMY) OR M5F3_TFRDMY) OR  M5F4_TFRDMY
	    M5F_TFRDMY = M5F_TFRDMY_A NOT INTERACT (EXT M5F_TFRDMY_A < dmS_M5_TFRDMY ABUT SINGULAR REGION)
        DM5F = DM5F_pre OR M5F_TFRDMY
#ELSE	
#IFDEF 5K_THICK_M5
	minOPENM5 = DENSITY M5x < minD_M5 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den
	emptyOPENM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M5Empty.den

#IFDEF FILL_IN_SLOT
       	M5ExcHole  = COPY EMPTY	
#ELSE
   	M5InnerHole = HOLES M5i INNER
	M5BigHole = SIZE M5InnerHole BY - excludeHoleSize/2 
	M5ExcHole = (M5InnerHole OUTSIDE M5BigHole) NOT M5i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK5 = SIZE DM5EXCL BY (dm2DMEXCL + grid)	// DM5 to DM5EXCL
    
        FRAMEA5 = SIZE M5i BY (dm2M5 + grid) // DM5 to metal
	M5mid = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i
	M5wide = (SIZE M5mid BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i
	FRAMEB5 = SIZE M5wide BY (dm2WM5 + grid) // DM5 to 4.5um wide metal, 1.5um
	FRAMEC5 = SIZE DUM5 BY (dm2DM5 + grid)   // ODM5 or DM5 to existed dummy metal 0.6um 
	FRAME5Pre = ((FRAMEA5 OR FRAMEB5) OR FRAMEC5) OR M5ExcHole
	#IFDEF CBM_OVER_M5
	   FRAME5 = ((((FRAME5Pre OR BLOCK5) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M5
        #ELSE
	   FRAME5 = (((FRAME5Pre OR BLOCK5) OR NFILL) OR HVxx) OR OD_RDG_M5
        #ENDIF
	OPENM5 = PUSH ((minOPENM5 OR emptyOPENM5) AND CHIP)
	FILL5 = OPENM5 NOT FRAME5
	FILLW5pre = SIZE FILL5 BY - (Wdm2M5 + grid)
	FILLW5 = (SIZE FILLW5pre BY (WdmW_M5 - grid) UNDEROVER TRUNCATE WdmW_M5) AND FILLW5pre
	M5FW = RECTANGLES WdmW_M5 WdmL_M5 WdmS_M5 OFFSET WdmO_M5 INSIDE OF LAYER FILLW5
	M5FW_EXP = SIZE M5FW BY (WdmS_M5 /2 + grid) OVERUNDER //merge the gaps 
	FILLM5pre = FILL5 NOT (SIZE M5FW_EXP BY (MdmS_M5 + grid))
	FILLM5 = (SIZE FILLM5pre BY (MdmW_M5 - grid) UNDEROVER TRUNCATE MdmW_M5) AND FILLM5pre
	M5F1 = RECTANGLES MdmW_M5 MdmL_M5 MdmS_M5 OFFSET MdmO_M5 INSIDE OF LAYER FILLM5
	M5R1pre = FILLM5pre NOT (SIZE M5F1 BY (dmS_M5 + grid))
	M5R1 = (SIZE M5R1pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R1pre

	M5F2 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R1
	M5R2pre = M5R1 NOT (SIZE M5F2 BY (dmS_M5 + grid))
	M5R2 = (SIZE M5R2pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R2pre

	M5F3 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 OFFSET dmO_M5 INSIDE OF LAYER M5R2
	M5R3pre = M5R2 NOT (SIZE M5F3 BY (dmS_M5 + grid))
	M5R3 = (SIZE M5R3pre BY (dmW_M5/2 - grid) UNDEROVER TRUNCATE dmW_M5) AND M5R3pre
	
	M5F4 = RECTANGLES dmW_M5 dmL_M5 dmS_M5 INSIDE OF LAYER M5R3

	M5F = (((M5F1 OR M5F2) OR M5F3) OR M5F4) OR M5FW
	FM5 = M5F NOT INTERACT (EXT M5F < dmS_M5 ABUT SINGULAR REGION)
    
	maxOPENM5 = DENSITY M5x FM5 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Max.den
		       
	FM5F = FM5 OUTSIDE maxOPENM5

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M5 = DENSITY M5x FM5F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den

	RM5EXC = SIZE FM5F BY (Odm2DM5 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M5pM = ((((PUSH D25M5) NOT FRAME5) NOT RM5EXC) NOT CTMDMY) AND CHIP
	D25M5pM_1 = (SIZE D25M5pM BY (OdmW_M5 /2 - grid) UNDEROVER TRUNCATE OdmW_M5) AND D25M5pM 
		
	RM5p1 = RECTANGLES OdmW_M5 OdmL_M5 OdmS_M5 INSIDE OF LAYER D25M5pM_1
	D25M5pM_2 = D25M5pM_1 NOT (SIZE RM5p1 BY (OdmS_M5 + grid))
	RM5p2 = RECTANGLES OdmL_M5 OdmW_M5 OdmS_M5 INSIDE OF LAYER D25M5pM_2

	D25M5pM_3pre = D25M5pM_2 NOT (SIZE RM5p2 BY (OdmS_M5 + grid))
	D25M5pM_3 = (SNAP (SIZE D25M5pM_3pre BY -grid) 5) AND D25M5pM_3pre
	RM5p3a = (INT D25M5pM_3 >=OdmW_M5 <=maxOdmW_M5 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M5pM_3 
	RM5p3b = RECTANGLE RM5p3a >= OdmW_M5 BY >= OdmL_M5 ORTHOGONAL ONLY// 0.8*1.42
	RM5p3  = RECTANGLE RM5p3b <= maxOdmW_M5 BY <= maxOdmL_M5 ORTHOGONAL ONLY// 1.5*6
	RM5A = (((RM5p1 OR RM5p2) OR RM5p3) OUTSIDE RM5EXC) OUTSIDE FRAME5
	RM5  = RM5A NOT INTERACT (EXT RM5A < OdmS_M5 ABUT SINGULAR REGION)
	
	DM5F = FM5F OR RM5

#ELSE
	D30M5 = DENSITY M5x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M5.den30
	D40M5 = DENSITY M5x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M5.den40
	D50M5 = DENSITY M5x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M5.den50
	emptyM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M5.den_empty

#IFDEF FILL_IN_SLOT
       	M5ExcHole  = COPY EMPTY	
#ELSE
   	M5InnerHole = HOLES M5i INNER
	M5BigHole = SIZE M5InnerHole BY - excludeHoleSize/2 
	M5ExcHole = (M5InnerHole OUTSIDE M5BigHole) NOT M5i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK5 = SIZE DM5EXCL BY (dm2DMEXCL + grid)	// DM5 to DM5EXCL
	
        FRAMEA5 = SIZE M5i BY (DM5_301 + grid)	  // DM5 to real metal
        FRAMEA5RM = SIZE M5i BY (DM5_304 + grid)	  // RM5 to real metal

	FRAMEA5_45 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (DM545_301 + grid) // DM5 to 45 degree metal
	FRAMEA5RM_45 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (DM545_304 + grid) // DM5 to 45 degree real metal
        
	M5mid = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i
	
	M5wide_W1 = (SIZE M5mid BY wideM5_W1/2 UNDEROVER TRUNCATE wideM5_W1/2) AND M5i	
	M5wide_W11 = (SIZE M5wide_W1 BY wideM5_W11/2 UNDEROVER TRUNCATE wideM5_W11/2) AND M5i
	M5wide_W2 = (SIZE M5wide_W1 BY wideM5_W2/2 UNDEROVER TRUNCATE wideM5_W2/2) AND M5i
	M5wide = (SIZE M5wide_W2 BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i

	FRAMEB5 = SIZE M5wide BY (dm2WM5 + grid) // DM5 to wide metal 4.5
	FRAMEB5_W2 = SIZE M5wide_W2 BY (dm2WM5_W2 + grid) // DM5 to 1.5um wide metal 0.5
	FRAMEB5_W1 = SIZE M5wide_W1 BY (dm2WM5_W1 + grid) // DM5 to 0.21um wide metal
	FRAMEB5_W11 = SIZE M5wide_W11 BY (dm2WM5_W11 + grid) // DM5 to 0.38um wide metal
    
	FRAMEC5 = SIZE DUM5 BY (dm2DM5 + grid)   // DM5 to existed dummy metal 0.4
	FRAMEC5RM = SIZE DUM5 BY (Odm2DM5 + grid)   // ODM5 to existed dummy metal 0.6 
	FRAME5Pre = ((((FRAMEA5 OR FRAMEB5) OR FRAMEC5) OR M5ExcHole) OR FRAMEB5_W2) OR FRAMEA5_45
	FRAME5PreRM = ((((((FRAMEA5RM OR FRAMEB5) OR FRAMEC5RM) OR M5ExcHole) OR FRAMEB5_W2) OR FRAMEB5_W1) OR FRAMEB5_W11) OR FRAMEA5RM_45
	
	#IFDEF CBM_OVER_M5
	    FRAME5 = (((((FRAME5Pre OR BLOCK5) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M5
	    FRAME5RM = ((((FRAME5PreRM OR BLOCK5) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M5
	#ELSE
        FRAME5 = ((((FRAME5Pre OR BLOCK5) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M5
	    FRAME5RM = (((FRAME5PreRM OR BLOCK5) OR NFILLRM) OR HVxx) OR OD_RDG_M5
	#ENDIF

//****************************************************************************

	D30M5p = (PUSH D30M5) NOT FRAME5
	O30M5pre = D30M5p AND CHIP
	FD21M5s = COPY FRAME5

	O30M5preA = SIZE O30M5pre BY - (DM5_303 + grid)
	O30M5preB = (SIZE O30M5preA BY (WM5_303 - grid) UNDEROVER TRUNCATE WM5_303) AND O30M5preA

	// 1st 2*2
	F303M5 = (RECTANGLES WM5_303 LM5_303 SM5_303 OFFSET OM5_303  INSIDE OF LAYER O30M5preB) NOT INTERACT IND_COIL_EXD

	
	F303M5_EXP = SIZE F303M5 BY ( WM5_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M5preF1 = O30M5pre NOT (SIZE F303M5_EXP BY (SM5_302 + grid))
	O30M5preF = (SNAP (SIZE O30M5preF1 BY -grid) 5) AND O30M5preF1

	B30M5pre = (INT O30M5preF >= WM5_301 <= maxW_DM5V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M5preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M5pre2 = RECTANGLE B30M5pre >= WM5_301 BY >= minL_DM5V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M5pre3 = RECTANGLE B30M5pre2 <= maxW_DM5V_3011 BY <= maxL_DM5V_3011 ORTHOGONAL ONLY

	B30M5 = (B30M5pre3 NOT INTERACT (EXT B30M5pre3 < SM5_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M5s = ((SIZE B30M5 BY (SM5_301 + grid)) OR FD21M5s) OR (SIZE F303M5_EXP BY (SM5_302 + grid))
	O30M5 = O30M5preF NOT B30M5s

	
	// 3rd, 0.5*1.2
	F302M5 = (RECTANGLES WM5_302 LM5_302 SM5_302 OFFSET OM5_302 INSIDE OF LAYER O30M5) NOT INTERACT IND_COIL_EXD
	F302M5s = (SIZE F302M5 BY (SM5_301 + grid)) OR B30M5s
	R302M5pre = O30M5 NOT F302M5s
	R302M5 = (SIZE R302M5pre BY (WM5_301/2 + grid) UNDEROVER TRUNCATE WM5_301) AND R302M5pre

	// 4th, 0.5*0.5
	F3012M5 = (RECTANGLES WM5_301 LM5_301 SM5_301 OFFSET OM5_301 INSIDE OF LAYER R302M5) NOT INTERACT IND_COIL_EXD
	F3012M5s = (SIZE F3012M5 BY (SM5_301 + grid)) OR F302M5s
	R3012M5pre = R302M5pre NOT F3012M5s
	R3012M5 = (SIZE R3012M5pre BY (WM5_301/2 + grid) UNDEROVER TRUNCATE WM5_301) AND R3012M5pre

	// 5th, regular 0.5*0.5
	F301M5 = (RECTANGLES WM5_301 LM5_301 SM5_301 INSIDE OF LAYER R3012M5) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M5s = (SIZE F301M5 BY (SM5_301 + grid)) OR F3012M5s

	F30M5 = (((B30M5 OR F302M5) OR F3012M5) OR F301M5) OR F303M5
	O40M5pre = (((PUSH D40M5) NOT FRAME5) NOT F301M5s) AND CHIP


	O40M5preA = SIZE O40M5pre BY - (DM5_403 + grid)
	O40M5preB = (SIZE O40M5preA BY (WM5_403 - grid) UNDEROVER TRUNCATE WM5_403) AND O40M5preA

	// 1st 2*2
	F403M5 = RECTANGLES WM5_403 LM5_403 SM5_403 OFFSET OM5_403  INSIDE OF LAYER O40M5preB

	
	F403M5_EXP = SIZE F403M5 BY ( WM5_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M5preF1 = O40M5pre NOT (SIZE F403M5_EXP BY (SM5_402 + grid))
	O40M5preF = (SNAP (SIZE O40M5preF1 BY -grid) 5) AND O40M5preF1

	B40M5pre = (INT O40M5preF >= WM5_401 <= maxW_DM5V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M5preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M5pre2 = RECTANGLE B40M5pre >= WM5_401 BY >= minL_DM5V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M5pre3 = RECTANGLE B40M5pre2 <= maxW_DM5V_4011 BY <= maxL_DM5V_4011 ORTHOGONAL ONLY

	B40M5 = (B40M5pre3 NOT INTERACT (EXT B40M5pre3 < SM5_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M5s = ((SIZE B40M5 BY (SM5_401 + grid)) OR F301M5s) OR (SIZE F403M5_EXP BY (SM5_402 + grid))
	O40M5 = O40M5preF NOT B40M5s

	
	// 3rd, 0.5*1.2
	F402M5 = (RECTANGLES WM5_402 LM5_402 SM5_402 OFFSET OM5_402 INSIDE OF LAYER O40M5) NOT INTERACT IND_COIL_EXD
	F402M5s = (SIZE F402M5 BY (SM5_401 + grid)) OR B40M5s
	R402M5pre = O40M5 NOT F402M5s
	R402M5 = (SIZE R402M5pre BY (WM5_401/2 + grid) UNDEROVER TRUNCATE WM5_401) AND R402M5pre

	// 4th, 0.5*0.5
	F4012M5 = (RECTANGLES WM5_401 LM5_401 SM5_401 OFFSET OM5_401 INSIDE OF LAYER R402M5) NOT INTERACT IND_COIL_EXD
	F4012M5s = (SIZE F4012M5 BY (SM5_401 + grid)) OR F402M5s
	R4012M5pre = R402M5pre NOT F4012M5s
	R4012M5 = (SIZE R4012M5pre BY (WM5_401/2 + grid) UNDEROVER TRUNCATE WM5_401) AND R4012M5pre

	// 5th, regular 0.5*0.5
	F401M5 = (RECTANGLES WM5_401 LM5_401 SM5_401 INSIDE OF LAYER R4012M5) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M5s = (SIZE F401M5 BY (SM5_401 + grid)) OR F4012M5s

	F40M5 = (((B40M5 OR F402M5) OR F4012M5) OR F401M5) OR F403M5
	O50M5pre = (((PUSH (D50M5 OR emptyM5)) NOT FRAME5) NOT F401M5s) AND CHIP


	O50M5preA = SIZE O50M5pre BY - (DM5_503 + grid)
	O50M5preB = (SIZE O50M5preA BY (WM5_503 - grid) UNDEROVER TRUNCATE WM5_503) AND O50M5preA

	// 1st 2*2
	F503M5 = RECTANGLES WM5_503 LM5_503 SM5_503 OFFSET OM5_503  INSIDE OF LAYER O50M5preB

	
	F503M5_EXP = SIZE F503M5 BY ( WM5_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M5preF1 = O50M5pre NOT (SIZE F503M5_EXP BY (SM5_502 + grid))
	O50M5preF = (SNAP (SIZE O50M5preF1 BY -grid) 5) AND O50M5preF1

	B50M5pre = (INT O50M5preF >= WM5_501 <= maxW_DM5V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M5preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M5pre2 = RECTANGLE B50M5pre >= WM5_501 BY >= minL_DM5V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M5pre3 = RECTANGLE B50M5pre2 <= maxW_DM5V_5011 BY <= maxL_DM5V_5011 ORTHOGONAL ONLY

	B50M5 = (B50M5pre3 NOT INTERACT (EXT B50M5pre3 < SM5_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M5s = ((SIZE B50M5 BY (SM5_501 + grid)) OR F401M5s) OR (SIZE F503M5_EXP BY (SM5_502 + grid))
	O50M5 = O50M5preF NOT B50M5s

	
	// 3rd, 0.5*1.2
	F502M5 = (RECTANGLES WM5_502 LM5_502 SM5_502 OFFSET OM5_502 INSIDE OF LAYER O50M5) NOT INTERACT IND_COIL_EXD
	F502M5s = (SIZE F502M5 BY (SM5_501 + grid)) OR B50M5s
	R502M5pre = O50M5 NOT F502M5s
	R502M5 = (SIZE R502M5pre BY (WM5_501/2 + grid) UNDEROVER TRUNCATE WM5_501) AND R502M5pre

	// 4th, 0.5*0.5
	F5012M5 = (RECTANGLES WM5_501 LM5_501 SM5_501 OFFSET OM5_501 INSIDE OF LAYER R502M5) NOT INTERACT IND_COIL_EXD
	F5012M5s = (SIZE F5012M5 BY (SM5_501 + grid)) OR F502M5s
	R5012M5pre = R502M5pre NOT F5012M5s
	R5012M5 = (SIZE R5012M5pre BY (WM5_501/2 + grid) UNDEROVER TRUNCATE WM5_501) AND R5012M5pre

	// 5th, regular 0.5*0.5
	F501M5 = (RECTANGLES WM5_501 LM5_501 SM5_501 INSIDE OF LAYER R5012M5) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M5s = (SIZE F501M5 BY (SM5_501 + grid)) OR F5012M5s

	F50M5 = (((B50M5 OR F502M5) OR F5012M5) OR F501M5) OR F503M5

//****************************************************************************
    
	exceedM5 = DENSITY M5x F30M5 F40M5 F50M5 > maxD_M5 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M5.den_exceed
	exceedM5DN2 = DENSITY M5x F30M5 F40M5 F50M5 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M5.DN.2.den_exceed

	removeM5R = ((PUSH (exceedM5 AND (D50M5 OR emptyM5))) NOT FRAME5) AND CHIP 
	removeM5 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM5R
	
	F30M5x = (F30M5 NOT INTERACT exceedM5DN2) NOT INTERACT removeM5
	F40M5x = (F40M5 NOT INTERACT exceedM5DN2) NOT INTERACT removeM5
	F50M5x = (F50M5 NOT INTERACT exceedM5DN2) NOT INTERACT removeM5
	FM5xA  = (F30M5x OR F40M5x) OR F50M5x
	FM5x   = FM5xA NOT INTERACT (EXT FM5xA < DM5_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM5
	lackM5 = DENSITY M5x FM5x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M5.den_lack
	RM5EXC = SIZE (((FM5x OR F303M5_EXP) OR F403M5_EXP) OR F503M5_EXP) BY (DM5_301 + grid)
	BigemptyM5 = PUSH ((SIZE emptyM5 BY 25 UNDEROVER) AND emptyM5)
    
	lackM5pRM = (((((PUSH lackM5) NOT RM5EXC) NOT BigemptyM5) NOT exceedM5) NOT FRAME5RM ) AND CHIP
	lackM5pRM_1 = WITH WIDTH lackM5pRM >= minWM5_304
	RM5p1 = RECTANGLES minLM5_304 minWM5_304 SM5_304 OFFSET OM5_304 INSIDE OF LAYER lackM5pRM_1
	lackM5pRM_2 = WITH WIDTH (lackM5pRM_1 NOT (SIZE RM5p1 BY (SM5_304 + grid))) >= minWM5_304
	RM5p2 = RECTANGLES minWM5_304 minLM5_304 SM5_304 OFFSET OM5_304 INSIDE OF LAYER lackM5pRM_2
        lackM5pRM_3pre = lackM5pRM_2 NOT (SIZE RM5p2 BY (SM5_304 + grid))
	lackM5pRM_3 = (SNAP (SIZE lackM5pRM_3pre BY -grid) 5) AND lackM5pRM_3pre 
	       
	RM5p3pre = (INT lackM5pRM_3 >= minWM5_304 <= maxWM5_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM5pRM_3 
	RM5p3pre2 = RECTANGLE RM5p3pre >= minWM5_304 BY >= minLM5_304 ORTHOGONAL ONLY// 0.13*0.6
	RM5p3 = RECTANGLE RM5p3pre2 <= maxWM5_304 BY <= maxLM5_304 ORTHOGONAL ONLY// 0.2*6

	RM5A = ((((RM5p1 OR RM5p2) OR RM5p3) OUTSIDE RM5EXC) OUTSIDE FRAME5RM) NOT INTERACT IND_COIL_EXD
	RM5F = RM5A NOT INTERACT (EXT RM5A < SM5_304 ABUT SINGULAR REGION)

#ENDIF

DM5F = COPY FM5x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM6

#IFDEF 34K_THICK_M6
	minOPENM6 = DENSITY M6x < minD_M6 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den
	emptyOPENM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M6Empty.den
        #IFDEF FILL_IN_SLOT
       	M6ExcHole  = COPY EMPTY	
        #ELSE
   	M6InnerHole = HOLES M6i INNER
	M6BigHole = SIZE M6InnerHole BY - excludeHoleSize/2
	M6ExcHole = (M6InnerHole OUTSIDE M6BigHole) NOT M6i
        #ENDIF	
        BLOCK6    = SIZE DM6EXCL BY (dm2DMEXCL + grid)
        FRAMEA6   = SIZE M6i BY (dm2M6 + grid)
	M6mid     = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i
	M6wide    = (SIZE M6mid BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i
	FRAMEB6   = SIZE M6wide BY (dm2WM6 + grid) // DM6 to 4.5um wide metal 3um
	FRAMEC6   = SIZE DUM6 BY (dm2DM6 + grid)    
	FRAME6Pre = ((FRAMEA6 OR FRAMEB6) OR FRAMEC6) OR M6ExcHole
	#IFDEF CBM_OVER_M6
        FRAME6 = ((((FRAME6Pre OR BLOCK6) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M6  
	#ELSE
	    FRAME6 = (((FRAME6Pre OR BLOCK6) OR NFILL) OR HVxx) OR OD_RDG_M6
	#ENDIF	
	OPENM6 = PUSH ((minOPENM6 OR emptyOPENM6) AND CHIP)
	FILL6 = OPENM6 NOT FRAME6
	FILLW6pre = SIZE FILL6 BY - (Wdm2M6 + grid)
	FILLW6 = (SIZE FILLW6pre BY (WdmW_M6 - grid) UNDEROVER TRUNCATE WdmW_M6) AND FILLW6pre
	M6FW = RECTANGLES WdmW_M6 WdmL_M6 WdmS_M6 OFFSET WdmO_M6 INSIDE OF LAYER FILLW6
	M6FW_EXP = SIZE M6FW BY (WdmS_M6 /2 + grid) OVERUNDER	// merge the gaps
	FILLM6pre = FILL6 NOT (SIZE M6FW_EXP BY (MdmS_M6 + grid))
	FILLM6 = (SIZE FILLM6pre BY (MdmW_M6 - grid) UNDEROVER TRUNCATE MdmW_M6) AND FILLM6pre
	M6F1 = RECTANGLES MdmW_M6 MdmL_M6 MdmS_M6 OFFSET MdmO_M6 INSIDE OF LAYER FILLM6
	M6R1pre = FILLM6pre NOT (SIZE M6F1 BY (dmS_M6 + grid))
	M6R1 = (SIZE M6R1pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R1pre

	M6F2 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R1
	M6R2pre = M6R1 NOT (SIZE M6F2 BY (dmS_M6 + grid))
	M6R2 = (SIZE M6R2pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R2pre

	M6F3 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R2
	M6R3pre = M6R2 NOT (SIZE M6F3 BY (dmS_M6 + grid))
	M6R3 = (SIZE M6R3pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R3pre
	
	M6F4 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 INSIDE OF LAYER M6R3 

	M6F = (((M6F1 OR M6F2) OR M6F3) OR M6F4) OR M6FW
	FM6 = M6F NOT INTERACT (EXT M6F < dmS_M6 ABUT SINGULAR REGION)

	maxOPENM6 = DENSITY M6x FM6 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Max.den
		       
	DM6F = FM6 OUTSIDE maxOPENM6

#ELSE
#IFDEF 12K_THICK_M6
	
	minOPENM6 = DENSITY M6x < minD_M6 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den
	emptyOPENM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M6Empty.den
#IFDEF FILL_IN_SLOT
       	M6ExcHole  = COPY EMPTY	
#ELSE
   	M6InnerHole = HOLES M6i INNER
	M6BigHole = SIZE M6InnerHole BY - excludeHoleSize/2 
	M6ExcHole = (M6InnerHole OUTSIDE M6BigHole) NOT M6i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK6 = SIZE DM6EXCL BY (dm2DMEXCL + grid)	// DM6 to DM6EXCL
    
        FRAMEA6 = SIZE M6i BY (dm2M6 + grid) // DM6 to metal
	M6mid = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i
	M6wide = (SIZE M6mid BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i
	FRAMEB6 = SIZE M6wide BY (dm2WM6 + grid) // DM6 to 4.5um wide metal, 1.5um
	FRAMEC6 = SIZE DUM6 BY (dm2DM6 + grid)   // ODM6 or DM6 to existed dummy metal 0.6um 
	FRAME6Pre = ((FRAMEA6 OR FRAMEB6) OR FRAMEC6) OR M6ExcHole
        #IFDEF CBM_OVER_M6
	   FRAME6 = ((((FRAME6Pre OR BLOCK6) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M6	// wrong setting will add nothing
        #ELSE 
	   FRAME6 = (((FRAME6Pre OR BLOCK6) OR NFILL) OR HVxx) OR OD_RDG_M6
        #ENDIF 

	OPENM6 = PUSH ((minOPENM6 OR emptyOPENM6) AND CHIP)
	FILL6 = OPENM6 NOT FRAME6
	FILLW6pre = SIZE FILL6 BY - (Wdm2M6 + grid)
	FILLW6 = (SIZE FILLW6pre BY (WdmW_M6 - grid) UNDEROVER TRUNCATE WdmW_M6) AND FILLW6pre
	M6FW = RECTANGLES WdmW_M6 WdmL_M6 WdmS_M6 OFFSET WdmO_M6 INSIDE OF LAYER FILLW6
	M6FW_EXP = SIZE M6FW BY (WdmS_M6 /2 + grid) OVERUNDER //merge the gaps 
	FILLM6pre = FILL6 NOT (SIZE M6FW_EXP BY (MdmS_M6 + grid))
	FILLM6 = (SIZE FILLM6pre BY (MdmW_M6 - grid) UNDEROVER TRUNCATE MdmW_M6) AND FILLM6pre
	M6F1 = RECTANGLES MdmW_M6 MdmL_M6 MdmS_M6 OFFSET MdmO_M6 INSIDE OF LAYER FILLM6
	M6R1pre = FILLM6pre NOT (SIZE M6F1 BY (dmS_M6 + grid))
	M6R1 = (SIZE M6R1pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R1pre

	M6F2 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R1
	M6R2pre = M6R1 NOT (SIZE M6F2 BY (dmS_M6 + grid))
	M6R2 = (SIZE M6R2pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R2pre

	M6F3 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R2
	M6R3pre = M6R2 NOT (SIZE M6F3 BY (dmS_M6 + grid))
	M6R3 = (SIZE M6R3pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R3pre
	
	M6F4 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 INSIDE OF LAYER M6R3

	M6F = (((M6F1 OR M6F2) OR M6F3) OR M6F4) OR M6FW
	FM6 = M6F NOT INTERACT (EXT M6F < dmS_M6 ABUT SINGULAR REGION)
    
	maxOPENM6 = DENSITY M6x FM6 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Max.den
		       
	FM6F = FM6 OUTSIDE maxOPENM6

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M6 = DENSITY M6x FM6F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den

	RM6EXC = SIZE FM6F BY (Odm2DM6 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M6pM = ((((PUSH D25M6) NOT FRAME6) NOT RM6EXC) NOT CTMDMY) AND CHIP
	D25M6pM_1 = (SIZE D25M6pM BY (OdmW_M6 /2 - grid) UNDEROVER TRUNCATE OdmW_M6) AND D25M6pM 
		
	RM6p1 = RECTANGLES OdmW_M6 OdmL_M6 OdmS_M6 INSIDE OF LAYER D25M6pM_1
	D25M6pM_2 = D25M6pM_1 NOT (SIZE RM6p1 BY (OdmS_M6 + grid))
	RM6p2 = RECTANGLES OdmL_M6 OdmW_M6 OdmS_M6 INSIDE OF LAYER D25M6pM_2

	D25M6pM_3pre = D25M6pM_2 NOT (SIZE RM6p2 BY (OdmS_M6 + grid))
	D25M6pM_3 = (SNAP (SIZE D25M6pM_3pre BY -grid) 5) AND D25M6pM_3pre
	RM6p3a = (INT D25M6pM_3 >=OdmW_M6 <=maxOdmW_M6 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M6pM_3 
	RM6p3b = RECTANGLE RM6p3a >= OdmW_M6 BY >= OdmL_M6 ORTHOGONAL ONLY // 1*1.44
	RM6p3  = RECTANGLE RM6p3b <= maxOdmW_M6 BY <= maxOdmL_M6 ORTHOGONAL ONLY// 1.5*6
	RM6A = (((RM6p1 OR RM6p2) OR RM6p3) OUTSIDE RM6EXC) OUTSIDE FRAME6
	RM6  = RM6A NOT INTERACT (EXT RM6A < OdmS_M6 ABUT SINGULAR REGION)
	
	DM6F = FM6F OR RM6

#ELSE
#IFDEF 9K_THICK_M6
	minOPENM6 = DENSITY M6x < minD_M6 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den
	emptyOPENM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M6Empty.den

#IFDEF FILL_IN_SLOT
       	M6ExcHole  = COPY EMPTY	
#ELSE
   	M6InnerHole = HOLES M6i INNER
	M6BigHole = SIZE M6InnerHole BY - excludeHoleSize/2 
	M6ExcHole = (M6InnerHole OUTSIDE M6BigHole) NOT M6i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK6 = SIZE DM6EXCL BY (dm2DMEXCL + grid)	// DM6 to DM6EXCL
	FRAMEA6 = SIZE M6i BY (dm2M6 + grid) // DM6 to metal

    
	M6mid = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i
	M6wide = (SIZE M6mid BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i
	FRAMEB6 = SIZE M6wide BY (dm2WM6 + grid) // DM6 to 4.5um wide metal, 1.5um
	FRAMEC6 = SIZE DUM6 BY (dm2DM6 + grid)   // DM6 to existed dummy metal 0.6um 
	FRAME6Pre = ((FRAMEA6 OR FRAMEB6) OR FRAMEC6) OR M6ExcHole
	#IFDEF CBM_OVER_M6
	    FRAME6 = (((((FRAME6Pre OR BLOCK6) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M6
	#ELSE
	    FRAME6 = ((((FRAME6Pre OR BLOCK6) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M6
    #ENDIF    
	OPENM6 = PUSH ((minOPENM6 OR emptyOPENM6) AND CHIP)
    #IFDEF CBM_OVER_M5
        CTMDMY_BLOCK1 = SIZE M6x_CTMDMY BY (dm2M6_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
        TFRDUMMY_BLOCK6_1 = (SIZE M6x_TFRDMY_6 BY (dm2M6_TFRDMY + grid)) OR (SIZE M6x_TFRDMY_5 BY (dm2M6_TFRDMY + grid))
        TFRDUMMY_BLOCK6 = (TFRDUMMY_BLOCK6_1 OR TFRDUMMY_5) OR TFRDUMMY_6
	    FILL6 = ((OPENM6 NOT FRAME6) NOT CTMDMY_BLOCK) NOT TFRDUMMY_BLOCK6
	#ELSE
        TFRDUMMY_BLOCK6_1 = (SIZE M6x_TFRDMY_6 BY (dm2M6_TFRDMY + grid)) OR (SIZE M6x_TFRDMY_5 BY (dm2M6_TFRDMY + grid))
        TFRDUMMY_BLOCK6 = (TFRDUMMY_BLOCK6_1 OR TFRDUMMY_5) OR TFRDUMMY_6
        FILL6 = (OPENM6 NOT FRAME6) NOT TFRDUMMY_BLOCK6
    #ENDIF

	FILLW6pre = SIZE FILL6 BY - (Wdm2M6 + grid)
	FILLW6 = (SIZE FILLW6pre BY (WdmW_M6 - grid) UNDEROVER TRUNCATE WdmW_M6) AND FILLW6pre
	M6FW = RECTANGLES WdmW_M6 WdmL_M6 WdmS_M6 OFFSET WdmO_M6 INSIDE OF LAYER FILLW6
	M6FW_EXP = SIZE M6FW BY (WdmS_M6 /2 + grid) OVERUNDER //merge the gaps 
	FILLM6pre = FILL6 NOT (SIZE M6FW_EXP BY (MdmS_M6 + grid))
	FILLM6 = (SIZE FILLM6pre BY (MdmW_M6 - grid) UNDEROVER TRUNCATE MdmW_M6) AND FILLM6pre
	M6F1 = RECTANGLES MdmW_M6 MdmL_M6 MdmS_M6 OFFSET MdmO_M6 INSIDE OF LAYER FILLM6
	M6R1pre = FILLM6pre NOT (SIZE M6F1 BY (dmS_M6 + grid))
	M6R1 = (SIZE M6R1pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R1pre

	M6F2 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R1
	M6R2pre = M6R1 NOT (SIZE M6F2 BY (dmS_M6 + grid))
	M6R2 = (SIZE M6R2pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R2pre

	M6F3 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R2
	M6R3pre = M6R2 NOT (SIZE M6F3 BY (dmS_M6 + grid))
	M6R3 = (SIZE M6R3pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R3pre
	
	M6F4 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 INSIDE OF LAYER M6R3

	M6F = ((((M6F1 OR M6F2) OR M6F3) OR M6F4) OR M6FW) NOT INTERACT IND_COIL_EXD
	FM6 = M6F NOT INTERACT (EXT M6F < dmS_M6 ABUT SINGULAR REGION)
    
	maxOPENM6 = DENSITY M6x FM6 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Max.den
		       
	FM6F = FM6 OUTSIDE maxOPENM6

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M6 = DENSITY M6x FM6F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den

	RM6EXC = SIZE FM6F BY (Odm2DM6 + grid)
// do not fill DMz_S over CTMDMY 
	D25M6pM = ((((((PUSH D25M6) NOT FRAME6) NOT RM6EXC) NOT CTMDMY) NOT TFRDUMMY_5) NOT TFRDUMMY_6) AND CHIP
	D25M6pM_1 = (SIZE D25M6pM BY (OdmW_M6 /2 - grid) UNDEROVER TRUNCATE OdmW_M6) AND D25M6pM 

	RM6p1 = RECTANGLES OdmW_M6 OdmL_M6 OdmS_M6 INSIDE OF LAYER D25M6pM_1
	D25M6pM_2 = D25M6pM_1 NOT (SIZE RM6p1 BY (OdmS_M6 + grid))
	RM6p2 = RECTANGLES OdmL_M6 OdmW_M6 OdmS_M6 INSIDE OF LAYER D25M6pM_2

	D25M6pM_3pre = D25M6pM_2 NOT (SIZE RM6p2 BY (OdmS_M6 + grid))
	D25M6pM_3 = (SNAP (SIZE D25M6pM_3pre BY -grid) 5) AND D25M6pM_3pre
	RM6p3a = (INT D25M6pM_3 >=OdmW_M6 <=maxOdmW_M6 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M6pM_3 
	RM6p3b = RECTANGLE RM6p3a >= OdmW_M6 BY >= OdmL_M6 ORTHOGONAL ONLY// 0.4*1.42
	RM6p3  = RECTANGLE RM6p3b <= maxOdmW_M6 BY <= maxOdmL_M6 ORTHOGONAL ONLY// 1.5*6
	RM6A = ((((RM6p1 OR RM6p2) OR RM6p3) OUTSIDE RM6EXC) OUTSIDE FRAME6) NOT INTERACT IND_COIL_EXD
	RM6  = RM6A NOT INTERACT (EXT RM6A < OdmS_M6 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M5
        FILLM6_CTMDMY = (CTMDMY NOT (SIZE ((FM6F OR RM6) OR (M6x NOT OUTSIDE CTMDMY)) BY (dmS_M6_CTMDMY + grid))) NOT FRAME6
 	    M6F1_CTMDMY = RECTANGLES WdmW_M6 WdmL_M6 dmS_M6_CTMDMY OFFSET WdmO_M6 INSIDE OF LAYER FILLM6_CTMDMY
        M6R1_CTMDMY = FILLM6_CTMDMY NOT (SIZE M6F1_CTMDMY BY (dmS_M6_CTMDMY + grid))
        M6F2_CTMDMY = RECTANGLES WdmW_M6 WdmL_M6 dmS_M6_CTMDMY OFFSET WdmO_M6 INSIDE OF LAYER M6R1_CTMDMY
        M6R2_CTMDMY = WITH WIDTH (M6R1_CTMDMY NOT (SIZE M6F2_CTMDMY BY (dmS_M6_CTMDMY + grid))) >= min_dmW_M6_CTMDMY
        M6F3_CTMDMY = RECTANGLES min_dmW_M6_CTMDMY min_dmW_M6_CTMDMY dmS_M6_CTMDMY OFFSET dmO_M6 INSIDE OF LAYER M6R2_CTMDMY
	    M6R3_CTMDMY = WITH WIDTH (M6R2_CTMDMY NOT (SIZE M6F3_CTMDMY BY (dmS_M6_CTMDMY + grid))) >= min_dmW_M6_CTMDMY
        M6F4_CTMDMY = RECTANGLES min_dmW_M6_CTMDMY min_dmW_M6_CTMDMY dmS_M6_CTMDMY OFFSET dmO_M6 INSIDE OF LAYER M6R3_CTMDMY
	    M6F_CTMDMY_A = ((M6F1_CTMDMY OR M6F2_CTMDMY) OR M6F3_CTMDMY) OR  M6F4_CTMDMY
	    M6F_CTMDMY = M6F_CTMDMY_A NOT INTERACT (EXT M6F_CTMDMY_A < dmS_M6_CTMDMY ABUT SINGULAR REGION)
	    DM6F_pre = (FM6F OR RM6) OR M6F_CTMDMY
    #ELSE
        DM6F_pre = FM6F OR RM6
    #ENDIF
        FILLM6_TFRDMY_1 = (TFRDUMMY_6 NOT (SIZE ((FM6F OR RM6) OR (M6x NOT OUTSIDE TFRDUMMY_6)) BY (dmS_M6_TFRDMY + grid))) NOT FRAME6
        FILLM6_TFRDMY_2 = (TFRDUMMY_5 NOT (SIZE ((FM6F OR RM6) OR (M6x NOT OUTSIDE TFRDUMMY_5)) BY (dmS_M6_TFRDMY + grid))) NOT FRAME6
        FILLM6_TFRDMY = FILLM6_TFRDMY_1 OR FILLM6_TFRDMY_2 
     	M6F1_TFRDMY = RECTANGLES dmW_M6_TFRDMY dmL_M6_TFRDMY dmS_M6_TFRDMY OFFSET dmO_M6_TFRDMY INSIDE OF LAYER FILLM6_TFRDMY
        M6R1_TFRDMY = FILLM6_TFRDMY NOT (SIZE M6F1_TFRDMY BY (dmS_M6_TFRDMY + grid))
        M6F2_TFRDMY = RECTANGLES dmW_M6_TFRDMY dmL_M6_TFRDMY dmS_M6_TFRDMY OFFSET dmO_M6_TFRDMY INSIDE OF LAYER M6R1_TFRDMY
        M6R2_TFRDMY = M6R1_TFRDMY NOT (SIZE M6F2_TFRDMY BY (dmS_M6_TFRDMY + grid))
        M6F3_TFRDMY = RECTANGLES dmW_M6_TFRDMY dmL_M6_TFRDMY dmS_M6_TFRDMY OFFSET dmO_M6_TFRDMY INSIDE OF LAYER M6R2_TFRDMY
        M6R3_TFRDMY = M6R2_TFRDMY NOT (SIZE M6F3_TFRDMY BY (dmS_M6_TFRDMY + grid))
        M6F4_TFRDMY = RECTANGLES dmW_M6_TFRDMY dmL_M6_TFRDMY dmS_M6_TFRDMY OFFSET dmO_M6_TFRDMY INSIDE OF LAYER M6R3_TFRDMY
	    M6F_TFRDMY_A = ((M6F1_TFRDMY OR M6F2_TFRDMY) OR M6F3_TFRDMY) OR  M6F4_TFRDMY
	    M6F_TFRDMY = M6F_TFRDMY_A NOT INTERACT (EXT M6F_TFRDMY_A < dmS_M6_TFRDMY ABUT SINGULAR REGION)
        DM6F = DM6F_pre OR M6F_TFRDMY
#ELSE	
#IFDEF 5K_THICK_M6
	minOPENM6 = DENSITY M6x < minD_M6 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den
	emptyOPENM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M6Empty.den

#IFDEF FILL_IN_SLOT
       	M6ExcHole  = COPY EMPTY	
#ELSE
   	M6InnerHole = HOLES M6i INNER
	M6BigHole = SIZE M6InnerHole BY - excludeHoleSize/2 
	M6ExcHole = (M6InnerHole OUTSIDE M6BigHole) NOT M6i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK6 = SIZE DM6EXCL BY (dm2DMEXCL + grid)	// DM6 to DM6EXCL
    
        FRAMEA6 = SIZE M6i BY (dm2M6 + grid) // DM6 to metal
	M6mid = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i
	M6wide = (SIZE M6mid BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i
	FRAMEB6 = SIZE M6wide BY (dm2WM6 + grid) // DM6 to 4.5um wide metal, 1.5um
	FRAMEC6 = SIZE DUM6 BY (dm2DM6 + grid)   // ODM6 or DM6 to existed dummy metal 0.6um 
	FRAME6Pre = ((FRAMEA6 OR FRAMEB6) OR FRAMEC6) OR M6ExcHole
	#IFDEF CBM_OVER_M6
	   FRAME6 = ((((FRAME6Pre OR BLOCK6) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M6
        #ELSE
	   FRAME6 = (((FRAME6Pre OR BLOCK6) OR NFILL) OR HVxx) OR OD_RDG_M6
        #ENDIF
	OPENM6 = PUSH ((minOPENM6 OR emptyOPENM6) AND CHIP)
	FILL6 = OPENM6 NOT FRAME6
	FILLW6pre = SIZE FILL6 BY - (Wdm2M6 + grid)
	FILLW6 = (SIZE FILLW6pre BY (WdmW_M6 - grid) UNDEROVER TRUNCATE WdmW_M6) AND FILLW6pre
	M6FW = RECTANGLES WdmW_M6 WdmL_M6 WdmS_M6 OFFSET WdmO_M6 INSIDE OF LAYER FILLW6
	M6FW_EXP = SIZE M6FW BY (WdmS_M6 /2 + grid) OVERUNDER //merge the gaps 
	FILLM6pre = FILL6 NOT (SIZE M6FW_EXP BY (MdmS_M6 + grid))
	FILLM6 = (SIZE FILLM6pre BY (MdmW_M6 - grid) UNDEROVER TRUNCATE MdmW_M6) AND FILLM6pre
	M6F1 = RECTANGLES MdmW_M6 MdmL_M6 MdmS_M6 OFFSET MdmO_M6 INSIDE OF LAYER FILLM6
	M6R1pre = FILLM6pre NOT (SIZE M6F1 BY (dmS_M6 + grid))
	M6R1 = (SIZE M6R1pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R1pre

	M6F2 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R1
	M6R2pre = M6R1 NOT (SIZE M6F2 BY (dmS_M6 + grid))
	M6R2 = (SIZE M6R2pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R2pre

	M6F3 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 OFFSET dmO_M6 INSIDE OF LAYER M6R2
	M6R3pre = M6R2 NOT (SIZE M6F3 BY (dmS_M6 + grid))
	M6R3 = (SIZE M6R3pre BY (dmW_M6/2 - grid) UNDEROVER TRUNCATE dmW_M6) AND M6R3pre
	
	M6F4 = RECTANGLES dmW_M6 dmL_M6 dmS_M6 INSIDE OF LAYER M6R3

	M6F = (((M6F1 OR M6F2) OR M6F3) OR M6F4) OR M6FW
	FM6 = M6F NOT INTERACT (EXT M6F < dmS_M6 ABUT SINGULAR REGION)
    
	maxOPENM6 = DENSITY M6x FM6 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Max.den
		       
	FM6F = FM6 OUTSIDE maxOPENM6

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M6 = DENSITY M6x FM6F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den

	RM6EXC = SIZE FM6F BY (Odm2DM6 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M6pM = ((((PUSH D25M6) NOT FRAME6) NOT RM6EXC) NOT CTMDMY) AND CHIP
	D25M6pM_1 = (SIZE D25M6pM BY (OdmW_M6 /2 - grid) UNDEROVER TRUNCATE OdmW_M6) AND D25M6pM 
		
	RM6p1 = RECTANGLES OdmW_M6 OdmL_M6 OdmS_M6 INSIDE OF LAYER D25M6pM_1
	D25M6pM_2 = D25M6pM_1 NOT (SIZE RM6p1 BY (OdmS_M6 + grid))
	RM6p2 = RECTANGLES OdmL_M6 OdmW_M6 OdmS_M6 INSIDE OF LAYER D25M6pM_2

	D25M6pM_3pre = D25M6pM_2 NOT (SIZE RM6p2 BY (OdmS_M6 + grid))
	D25M6pM_3 = (SNAP (SIZE D25M6pM_3pre BY -grid) 5) AND D25M6pM_3pre
	RM6p3a = (INT D25M6pM_3 >=OdmW_M6 <=maxOdmW_M6 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M6pM_3 
	RM6p3b = RECTANGLE RM6p3a >= OdmW_M6 BY >= OdmL_M6 ORTHOGONAL ONLY// 0.8*1.42
	RM6p3  = RECTANGLE RM6p3b <= maxOdmW_M6 BY <= maxOdmL_M6 ORTHOGONAL ONLY// 1.5*6
	RM6A = (((RM6p1 OR RM6p2) OR RM6p3) OUTSIDE RM6EXC) OUTSIDE FRAME6
	RM6  = RM6A NOT INTERACT (EXT RM6A < OdmS_M6 ABUT SINGULAR REGION)
	
	DM6F = FM6F OR RM6

#ELSE
	D30M6 = DENSITY M6x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M6.den30
	D40M6 = DENSITY M6x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M6.den40
	D50M6 = DENSITY M6x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M6.den50
	emptyM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M6.den_empty

#IFDEF FILL_IN_SLOT
       	M6ExcHole  = COPY EMPTY	
#ELSE
   	M6InnerHole = HOLES M6i INNER
	M6BigHole = SIZE M6InnerHole BY - excludeHoleSize/2 
	M6ExcHole = (M6InnerHole OUTSIDE M6BigHole) NOT M6i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK6 = SIZE DM6EXCL BY (dm2DMEXCL + grid)	// DM6 to DM6EXCL
	
        FRAMEA6 = SIZE M6i BY (DM6_301 + grid)	  // DM6 to real metal
        FRAMEA6RM = SIZE M6i BY (DM6_304 + grid)	  // RM6 to real metal

	FRAMEA6_45 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (DM645_301 + grid) // DM6 to 45 degree metal
	FRAMEA6RM_45 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (DM645_304 + grid) // DM6 to 45 degree real metal
        
	M6mid = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i
	
	M6wide_W1 = (SIZE M6mid BY wideM6_W1/2 UNDEROVER TRUNCATE wideM6_W1/2) AND M6i	
	M6wide_W11 = (SIZE M6wide_W1 BY wideM6_W11/2 UNDEROVER TRUNCATE wideM6_W11/2) AND M6i
	M6wide_W2 = (SIZE M6wide_W1 BY wideM6_W2/2 UNDEROVER TRUNCATE wideM6_W2/2) AND M6i
	M6wide = (SIZE M6wide_W2 BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i

	FRAMEB6 = SIZE M6wide BY (dm2WM6 + grid) // DM6 to wide metal 4.5
	FRAMEB6_W2 = SIZE M6wide_W2 BY (dm2WM6_W2 + grid) // DM6 to 1.5um wide metal 0.5
	FRAMEB6_W1 = SIZE M6wide_W1 BY (dm2WM6_W1 + grid) // DM6 to 0.21um wide metal
	FRAMEB6_W11 = SIZE M6wide_W11 BY (dm2WM6_W11 + grid) // DM6 to 0.38um wide metal
    
	FRAMEC6 = SIZE DUM6 BY (dm2DM6 + grid)   // DM6 to existed dummy metal 0.4
	FRAMEC6RM = SIZE DUM6 BY (Odm2DM6 + grid)   // ODM6 to existed dummy metal 0.6 
	FRAME6Pre = ((((FRAMEA6 OR FRAMEB6) OR FRAMEC6) OR M6ExcHole) OR FRAMEB6_W2) OR FRAMEA6_45
	FRAME6PreRM = ((((((FRAMEA6RM OR FRAMEB6) OR FRAMEC6RM) OR M6ExcHole) OR FRAMEB6_W2) OR FRAMEB6_W1) OR FRAMEB6_W11) OR FRAMEA6RM_45
	
	#IFDEF CBM_OVER_M6
	    FRAME6 = (((((FRAME6Pre OR BLOCK6) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M6
	    FRAME6RM = ((((FRAME6PreRM OR BLOCK6) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M6
	#ELSE
        FRAME6 = ((((FRAME6Pre OR BLOCK6) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M6
	    FRAME6RM = (((FRAME6PreRM OR BLOCK6) OR NFILLRM) OR HVxx) OR OD_RDG_M6
	#ENDIF

//****************************************************************************

	D30M6p = (PUSH D30M6) NOT FRAME6
	O30M6pre = D30M6p AND CHIP
	FD21M6s = COPY FRAME6

	O30M6preA = SIZE O30M6pre BY - (DM6_303 + grid)
	O30M6preB = (SIZE O30M6preA BY (WM6_303 - grid) UNDEROVER TRUNCATE WM6_303) AND O30M6preA

	// 1st 2*2
	F303M6 = (RECTANGLES WM6_303 LM6_303 SM6_303 OFFSET OM6_303  INSIDE OF LAYER O30M6preB) NOT INTERACT IND_COIL_EXD

	
	F303M6_EXP = SIZE F303M6 BY ( WM6_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M6preF1 = O30M6pre NOT (SIZE F303M6_EXP BY (SM6_302 + grid))
	O30M6preF = (SNAP (SIZE O30M6preF1 BY -grid) 5) AND O30M6preF1

	B30M6pre = (INT O30M6preF >= WM6_301 <= maxW_DM6V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M6preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M6pre2 = RECTANGLE B30M6pre >= WM6_301 BY >= minL_DM6V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M6pre3 = RECTANGLE B30M6pre2 <= maxW_DM6V_3011 BY <= maxL_DM6V_3011 ORTHOGONAL ONLY

	B30M6 = (B30M6pre3 NOT INTERACT (EXT B30M6pre3 < SM6_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M6s = ((SIZE B30M6 BY (SM6_301 + grid)) OR FD21M6s) OR (SIZE F303M6_EXP BY (SM6_302 + grid))
	O30M6 = O30M6preF NOT B30M6s

	
	// 3rd, 0.5*1.2
	F302M6 = (RECTANGLES WM6_302 LM6_302 SM6_302 OFFSET OM6_302 INSIDE OF LAYER O30M6) NOT INTERACT IND_COIL_EXD
	F302M6s = (SIZE F302M6 BY (SM6_301 + grid)) OR B30M6s
	R302M6pre = O30M6 NOT F302M6s
	R302M6 = (SIZE R302M6pre BY (WM6_301/2 + grid) UNDEROVER TRUNCATE WM6_301) AND R302M6pre

	// 4th, 0.5*0.5
	F3012M6 = (RECTANGLES WM6_301 LM6_301 SM6_301 OFFSET OM6_301 INSIDE OF LAYER R302M6) NOT INTERACT IND_COIL_EXD
	F3012M6s = (SIZE F3012M6 BY (SM6_301 + grid)) OR F302M6s
	R3012M6pre = R302M6pre NOT F3012M6s
	R3012M6 = (SIZE R3012M6pre BY (WM6_301/2 + grid) UNDEROVER TRUNCATE WM6_301) AND R3012M6pre

	// 5th, regular 0.5*0.5
	F301M6 = (RECTANGLES WM6_301 LM6_301 SM6_301 INSIDE OF LAYER R3012M6) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M6s = (SIZE F301M6 BY (SM6_301 + grid)) OR F3012M6s

	F30M6 = (((B30M6 OR F302M6) OR F3012M6) OR F301M6) OR F303M6
	O40M6pre = (((PUSH D40M6) NOT FRAME6) NOT F301M6s) AND CHIP


	O40M6preA = SIZE O40M6pre BY - (DM6_403 + grid)
	O40M6preB = (SIZE O40M6preA BY (WM6_403 - grid) UNDEROVER TRUNCATE WM6_403) AND O40M6preA

	// 1st 2*2
	F403M6 = RECTANGLES WM6_403 LM6_403 SM6_403 OFFSET OM6_403  INSIDE OF LAYER O40M6preB

	
	F403M6_EXP = SIZE F403M6 BY ( WM6_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M6preF1 = O40M6pre NOT (SIZE F403M6_EXP BY (SM6_402 + grid))
	O40M6preF = (SNAP (SIZE O40M6preF1 BY -grid) 5) AND O40M6preF1

	B40M6pre = (INT O40M6preF >= WM6_401 <= maxW_DM6V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M6preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M6pre2 = RECTANGLE B40M6pre >= WM6_401 BY >= minL_DM6V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M6pre3 = RECTANGLE B40M6pre2 <= maxW_DM6V_4011 BY <= maxL_DM6V_4011 ORTHOGONAL ONLY

	B40M6 = (B40M6pre3 NOT INTERACT (EXT B40M6pre3 < SM6_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M6s = ((SIZE B40M6 BY (SM6_401 + grid)) OR F301M6s) OR (SIZE F403M6_EXP BY (SM6_402 + grid))
	O40M6 = O40M6preF NOT B40M6s

	
	// 3rd, 0.5*1.2
	F402M6 = (RECTANGLES WM6_402 LM6_402 SM6_402 OFFSET OM6_402 INSIDE OF LAYER O40M6) NOT INTERACT IND_COIL_EXD
	F402M6s = (SIZE F402M6 BY (SM6_401 + grid)) OR B40M6s
	R402M6pre = O40M6 NOT F402M6s
	R402M6 = (SIZE R402M6pre BY (WM6_401/2 + grid) UNDEROVER TRUNCATE WM6_401) AND R402M6pre

	// 4th, 0.5*0.5
	F4012M6 = (RECTANGLES WM6_401 LM6_401 SM6_401 OFFSET OM6_401 INSIDE OF LAYER R402M6) NOT INTERACT IND_COIL_EXD
	F4012M6s = (SIZE F4012M6 BY (SM6_401 + grid)) OR F402M6s
	R4012M6pre = R402M6pre NOT F4012M6s
	R4012M6 = (SIZE R4012M6pre BY (WM6_401/2 + grid) UNDEROVER TRUNCATE WM6_401) AND R4012M6pre

	// 5th, regular 0.5*0.5
	F401M6 = (RECTANGLES WM6_401 LM6_401 SM6_401 INSIDE OF LAYER R4012M6) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M6s = (SIZE F401M6 BY (SM6_401 + grid)) OR F4012M6s

	F40M6 = (((B40M6 OR F402M6) OR F4012M6) OR F401M6) OR F403M6
	O50M6pre = (((PUSH (D50M6 OR emptyM6)) NOT FRAME6) NOT F401M6s) AND CHIP


	O50M6preA = SIZE O50M6pre BY - (DM6_503 + grid)
	O50M6preB = (SIZE O50M6preA BY (WM6_503 - grid) UNDEROVER TRUNCATE WM6_503) AND O50M6preA

	// 1st 2*2
	F503M6 = RECTANGLES WM6_503 LM6_503 SM6_503 OFFSET OM6_503  INSIDE OF LAYER O50M6preB

	
	F503M6_EXP = SIZE F503M6 BY ( WM6_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M6preF1 = O50M6pre NOT (SIZE F503M6_EXP BY (SM6_502 + grid))
	O50M6preF = (SNAP (SIZE O50M6preF1 BY -grid) 5) AND O50M6preF1

	B50M6pre = (INT O50M6preF >= WM6_501 <= maxW_DM6V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M6preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M6pre2 = RECTANGLE B50M6pre >= WM6_501 BY >= minL_DM6V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M6pre3 = RECTANGLE B50M6pre2 <= maxW_DM6V_5011 BY <= maxL_DM6V_5011 ORTHOGONAL ONLY

	B50M6 = (B50M6pre3 NOT INTERACT (EXT B50M6pre3 < SM6_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M6s = ((SIZE B50M6 BY (SM6_501 + grid)) OR F401M6s) OR (SIZE F503M6_EXP BY (SM6_502 + grid))
	O50M6 = O50M6preF NOT B50M6s

	
	// 3rd, 0.5*1.2
	F502M6 = (RECTANGLES WM6_502 LM6_502 SM6_502 OFFSET OM6_502 INSIDE OF LAYER O50M6) NOT INTERACT IND_COIL_EXD
	F502M6s = (SIZE F502M6 BY (SM6_501 + grid)) OR B50M6s
	R502M6pre = O50M6 NOT F502M6s
	R502M6 = (SIZE R502M6pre BY (WM6_501/2 + grid) UNDEROVER TRUNCATE WM6_501) AND R502M6pre

	// 4th, 0.5*0.5
	F5012M6 = (RECTANGLES WM6_501 LM6_501 SM6_501 OFFSET OM6_501 INSIDE OF LAYER R502M6) NOT INTERACT IND_COIL_EXD
	F5012M6s = (SIZE F5012M6 BY (SM6_501 + grid)) OR F502M6s
	R5012M6pre = R502M6pre NOT F5012M6s
	R5012M6 = (SIZE R5012M6pre BY (WM6_501/2 + grid) UNDEROVER TRUNCATE WM6_501) AND R5012M6pre

	// 5th, regular 0.5*0.5
	F501M6 = (RECTANGLES WM6_501 LM6_501 SM6_501 INSIDE OF LAYER R5012M6) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M6s = (SIZE F501M6 BY (SM6_501 + grid)) OR F5012M6s

	F50M6 = (((B50M6 OR F502M6) OR F5012M6) OR F501M6) OR F503M6

//****************************************************************************
    
	exceedM6 = DENSITY M6x F30M6 F40M6 F50M6 > maxD_M6 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M6.den_exceed
	exceedM6DN2 = DENSITY M6x F30M6 F40M6 F50M6 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M6.DN.2.den_exceed

	removeM6R = ((PUSH (exceedM6 AND (D50M6 OR emptyM6))) NOT FRAME6) AND CHIP 
	removeM6 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM6R
	
	F30M6x = (F30M6 NOT INTERACT exceedM6DN2) NOT INTERACT removeM6
	F40M6x = (F40M6 NOT INTERACT exceedM6DN2) NOT INTERACT removeM6
	F50M6x = (F50M6 NOT INTERACT exceedM6DN2) NOT INTERACT removeM6
	FM6xA  = (F30M6x OR F40M6x) OR F50M6x
	FM6x   = FM6xA NOT INTERACT (EXT FM6xA < DM6_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM6
	lackM6 = DENSITY M6x FM6x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M6.den_lack
	RM6EXC = SIZE (((FM6x OR F303M6_EXP) OR F403M6_EXP) OR F503M6_EXP) BY (DM6_301 + grid)
	BigemptyM6 = PUSH ((SIZE emptyM6 BY 25 UNDEROVER) AND emptyM6)
    
	lackM6pRM = (((((PUSH lackM6) NOT RM6EXC) NOT BigemptyM6) NOT exceedM6) NOT FRAME6RM ) AND CHIP
	lackM6pRM_1 = WITH WIDTH lackM6pRM >= minWM6_304
        RM6p1 = RECTANGLES minWM6_304 minLM6_304 SM6_304 OFFSET OM6_304 INSIDE OF LAYER lackM6pRM_1
	lackM6pRM_2 = WITH WIDTH (lackM6pRM_1 NOT (SIZE RM6p1 BY (SM6_304 + grid))) >= minWM6_304
        RM6p2 = RECTANGLES minLM6_304 minWM6_304 SM6_304 OFFSET OM6_304 INSIDE OF LAYER lackM6pRM_2
        lackM6pRM_3pre = lackM6pRM_2 NOT (SIZE RM6p2 BY (SM6_304 + grid))
	lackM6pRM_3 = (SNAP (SIZE lackM6pRM_3pre BY -grid) 5) AND lackM6pRM_3pre 
	       
	RM6p3pre = (INT lackM6pRM_3 >= minWM6_304 <= maxWM6_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM6pRM_3 
	RM6p3pre2 = RECTANGLE RM6p3pre >= minWM6_304 BY >= minLM6_304 ORTHOGONAL ONLY// 0.13*0.6
	RM6p3 = RECTANGLE RM6p3pre2 <= maxWM6_304 BY <= maxLM6_304 ORTHOGONAL ONLY// 0.2*6

	RM6A = ((((RM6p1 OR RM6p2) OR RM6p3) OUTSIDE RM6EXC) OUTSIDE FRAME6RM) NOT INTERACT IND_COIL_EXD
	RM6F = RM6A NOT INTERACT (EXT RM6A < SM6_304 ABUT SINGULAR REGION)

#ENDIF

DM6F = COPY FM6x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM7

#IFDEF 34K_THICK_M7
	minOPENM7 = DENSITY M7x < minD_M7 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den
	emptyOPENM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M7Empty.den
        #IFDEF FILL_IN_SLOT
       	M7ExcHole  = COPY EMPTY	
        #ELSE
   	M7InnerHole = HOLES M7i INNER
	M7BigHole = SIZE M7InnerHole BY - excludeHoleSize/2
	M7ExcHole = (M7InnerHole OUTSIDE M7BigHole) NOT M7i
        #ENDIF	
        BLOCK7    = SIZE DM7EXCL BY (dm2DMEXCL + grid)
        FRAMEA7   = SIZE M7i BY (dm2M7 + grid)
	M7mid     = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i
	M7wide    = (SIZE M7mid BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i
	FRAMEB7   = SIZE M7wide BY (dm2WM7 + grid) // DM7 to 4.5um wide metal 3um
	FRAMEC7   = SIZE DUM7 BY (dm2DM7 + grid)    
	FRAME7Pre = ((FRAMEA7 OR FRAMEB7) OR FRAMEC7) OR M7ExcHole
	#IFDEF CBM_OVER_M7
        FRAME7 = ((((FRAME7Pre OR BLOCK7) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M7  
	#ELSE
	    FRAME7 = (((FRAME7Pre OR BLOCK7) OR NFILL) OR HVxx) OR OD_RDG_M7
	#ENDIF	
	OPENM7 = PUSH ((minOPENM7 OR emptyOPENM7) AND CHIP)
	FILL7 = OPENM7 NOT FRAME7
	FILLW7pre = SIZE FILL7 BY - (Wdm2M7 + grid)
	FILLW7 = (SIZE FILLW7pre BY (WdmW_M7 - grid) UNDEROVER TRUNCATE WdmW_M7) AND FILLW7pre
	M7FW = RECTANGLES WdmW_M7 WdmL_M7 WdmS_M7 OFFSET WdmO_M7 INSIDE OF LAYER FILLW7
	M7FW_EXP = SIZE M7FW BY (WdmS_M7 /2 + grid) OVERUNDER	// merge the gaps
	FILLM7pre = FILL7 NOT (SIZE M7FW_EXP BY (MdmS_M7 + grid))
	FILLM7 = (SIZE FILLM7pre BY (MdmW_M7 - grid) UNDEROVER TRUNCATE MdmW_M7) AND FILLM7pre
	M7F1 = RECTANGLES MdmW_M7 MdmL_M7 MdmS_M7 OFFSET MdmO_M7 INSIDE OF LAYER FILLM7
	M7R1pre = FILLM7pre NOT (SIZE M7F1 BY (dmS_M7 + grid))
	M7R1 = (SIZE M7R1pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R1pre

	M7F2 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R1
	M7R2pre = M7R1 NOT (SIZE M7F2 BY (dmS_M7 + grid))
	M7R2 = (SIZE M7R2pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R2pre

	M7F3 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R2
	M7R3pre = M7R2 NOT (SIZE M7F3 BY (dmS_M7 + grid))
	M7R3 = (SIZE M7R3pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R3pre
	
	M7F4 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 INSIDE OF LAYER M7R3 

	M7F = (((M7F1 OR M7F2) OR M7F3) OR M7F4) OR M7FW
	FM7 = M7F NOT INTERACT (EXT M7F < dmS_M7 ABUT SINGULAR REGION)

	maxOPENM7 = DENSITY M7x FM7 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Max.den
		       
	DM7F = FM7 OUTSIDE maxOPENM7

#ELSE
#IFDEF 12K_THICK_M7
	
	minOPENM7 = DENSITY M7x < minD_M7 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den
	emptyOPENM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M7Empty.den
#IFDEF FILL_IN_SLOT
       	M7ExcHole  = COPY EMPTY	
#ELSE
   	M7InnerHole = HOLES M7i INNER
	M7BigHole = SIZE M7InnerHole BY - excludeHoleSize/2 
	M7ExcHole = (M7InnerHole OUTSIDE M7BigHole) NOT M7i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK7 = SIZE DM7EXCL BY (dm2DMEXCL + grid)	// DM7 to DM7EXCL
    
        FRAMEA7 = SIZE M7i BY (dm2M7 + grid) // DM7 to metal
	M7mid = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i
	M7wide = (SIZE M7mid BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i
	FRAMEB7 = SIZE M7wide BY (dm2WM7 + grid) // DM7 to 4.5um wide metal, 1.5um
	FRAMEC7 = SIZE DUM7 BY (dm2DM7 + grid)   // ODM7 or DM7 to existed dummy metal 0.6um 
	FRAME7Pre = ((FRAMEA7 OR FRAMEB7) OR FRAMEC7) OR M7ExcHole
        #IFDEF CBM_OVER_M7
	   FRAME7 = ((((FRAME7Pre OR BLOCK7) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M7	// wrong setting will add nothing
        #ELSE 
	   FRAME7 = (((FRAME7Pre OR BLOCK7) OR NFILL) OR HVxx) OR OD_RDG_M7
        #ENDIF 

	OPENM7 = PUSH ((minOPENM7 OR emptyOPENM7) AND CHIP)
	FILL7 = OPENM7 NOT FRAME7
	FILLW7pre = SIZE FILL7 BY - (Wdm2M7 + grid)
	FILLW7 = (SIZE FILLW7pre BY (WdmW_M7 - grid) UNDEROVER TRUNCATE WdmW_M7) AND FILLW7pre
	M7FW = RECTANGLES WdmW_M7 WdmL_M7 WdmS_M7 OFFSET WdmO_M7 INSIDE OF LAYER FILLW7
	M7FW_EXP = SIZE M7FW BY (WdmS_M7 /2 + grid) OVERUNDER //merge the gaps 
	FILLM7pre = FILL7 NOT (SIZE M7FW_EXP BY (MdmS_M7 + grid))
	FILLM7 = (SIZE FILLM7pre BY (MdmW_M7 - grid) UNDEROVER TRUNCATE MdmW_M7) AND FILLM7pre
	M7F1 = RECTANGLES MdmW_M7 MdmL_M7 MdmS_M7 OFFSET MdmO_M7 INSIDE OF LAYER FILLM7
	M7R1pre = FILLM7pre NOT (SIZE M7F1 BY (dmS_M7 + grid))
	M7R1 = (SIZE M7R1pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R1pre

	M7F2 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R1
	M7R2pre = M7R1 NOT (SIZE M7F2 BY (dmS_M7 + grid))
	M7R2 = (SIZE M7R2pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R2pre

	M7F3 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R2
	M7R3pre = M7R2 NOT (SIZE M7F3 BY (dmS_M7 + grid))
	M7R3 = (SIZE M7R3pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R3pre
	
	M7F4 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 INSIDE OF LAYER M7R3

	M7F = (((M7F1 OR M7F2) OR M7F3) OR M7F4) OR M7FW
	FM7 = M7F NOT INTERACT (EXT M7F < dmS_M7 ABUT SINGULAR REGION)
    
	maxOPENM7 = DENSITY M7x FM7 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Max.den
		       
	FM7F = FM7 OUTSIDE maxOPENM7

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M7 = DENSITY M7x FM7F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den

	RM7EXC = SIZE FM7F BY (Odm2DM7 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M7pM = ((((PUSH D25M7) NOT FRAME7) NOT RM7EXC) NOT CTMDMY) AND CHIP
	D25M7pM_1 = (SIZE D25M7pM BY (OdmW_M7 /2 - grid) UNDEROVER TRUNCATE OdmW_M7) AND D25M7pM 
		
	RM7p1 = RECTANGLES OdmW_M7 OdmL_M7 OdmS_M7 INSIDE OF LAYER D25M7pM_1
	D25M7pM_2 = D25M7pM_1 NOT (SIZE RM7p1 BY (OdmS_M7 + grid))
	RM7p2 = RECTANGLES OdmL_M7 OdmW_M7 OdmS_M7 INSIDE OF LAYER D25M7pM_2

	D25M7pM_3pre = D25M7pM_2 NOT (SIZE RM7p2 BY (OdmS_M7 + grid))
	D25M7pM_3 = (SNAP (SIZE D25M7pM_3pre BY -grid) 5) AND D25M7pM_3pre
	RM7p3a = (INT D25M7pM_3 >=OdmW_M7 <=maxOdmW_M7 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M7pM_3 
	RM7p3b = RECTANGLE RM7p3a >= OdmW_M7 BY >= OdmL_M7 ORTHOGONAL ONLY // 1*1.44
	RM7p3  = RECTANGLE RM7p3b <= maxOdmW_M7 BY <= maxOdmL_M7 ORTHOGONAL ONLY// 1.5*6
	RM7A = (((RM7p1 OR RM7p2) OR RM7p3) OUTSIDE RM7EXC) OUTSIDE FRAME7
	RM7  = RM7A NOT INTERACT (EXT RM7A < OdmS_M7 ABUT SINGULAR REGION)
	
	DM7F = FM7F OR RM7

#ELSE
#IFDEF 9K_THICK_M7
	minOPENM7 = DENSITY M7x < minD_M7 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den
	emptyOPENM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M7Empty.den

#IFDEF FILL_IN_SLOT
       	M7ExcHole  = COPY EMPTY	
#ELSE
   	M7InnerHole = HOLES M7i INNER
	M7BigHole = SIZE M7InnerHole BY - excludeHoleSize/2 
	M7ExcHole = (M7InnerHole OUTSIDE M7BigHole) NOT M7i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK7 = SIZE DM7EXCL BY (dm2DMEXCL + grid)	// DM7 to DM7EXCL
	FRAMEA7 = SIZE M7i BY (dm2M7 + grid) // DM7 to metal

    
	M7mid = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i
	M7wide = (SIZE M7mid BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i
	FRAMEB7 = SIZE M7wide BY (dm2WM7 + grid) // DM7 to 4.5um wide metal, 1.5um
	FRAMEC7 = SIZE DUM7 BY (dm2DM7 + grid)   // DM7 to existed dummy metal 0.6um 
	FRAME7Pre = ((FRAMEA7 OR FRAMEB7) OR FRAMEC7) OR M7ExcHole
	#IFDEF CBM_OVER_M7
	    FRAME7 = (((((FRAME7Pre OR BLOCK7) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M7
	#ELSE
	    FRAME7 = ((((FRAME7Pre OR BLOCK7) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M7
    #ENDIF    
	OPENM7 = PUSH ((minOPENM7 OR emptyOPENM7) AND CHIP)
    #IFDEF CBM_OVER_M6
        CTMDMY_BLOCK1 = SIZE M7x_CTMDMY BY (dm2M7_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
        TFRDUMMY_BLOCK7_1 = (SIZE M7x_TFRDMY_7 BY (dm2M7_TFRDMY + grid)) OR (SIZE M7x_TFRDMY_6 BY (dm2M7_TFRDMY + grid))
        TFRDUMMY_BLOCK7 = (TFRDUMMY_BLOCK7_1 OR TFRDUMMY_6) OR TFRDUMMY_7
	    FILL7 = ((OPENM7 NOT FRAME7) NOT CTMDMY_BLOCK) NOT TFRDUMMY_BLOCK7
	#ELSE
        TFRDUMMY_BLOCK7_1 = (SIZE M7x_TFRDMY_7 BY (dm2M7_TFRDMY + grid)) OR (SIZE M7x_TFRDMY_6 BY (dm2M7_TFRDMY + grid))
        TFRDUMMY_BLOCK7 = (TFRDUMMY_BLOCK7_1 OR TFRDUMMY_6) OR TFRDUMMY_7
        FILL7 = (OPENM7 NOT FRAME7) NOT TFRDUMMY_BLOCK7
    #ENDIF

	FILLW7pre = SIZE FILL7 BY - (Wdm2M7 + grid)
	FILLW7 = (SIZE FILLW7pre BY (WdmW_M7 - grid) UNDEROVER TRUNCATE WdmW_M7) AND FILLW7pre
	M7FW = RECTANGLES WdmW_M7 WdmL_M7 WdmS_M7 OFFSET WdmO_M7 INSIDE OF LAYER FILLW7
	M7FW_EXP = SIZE M7FW BY (WdmS_M7 /2 + grid) OVERUNDER //merge the gaps 
	FILLM7pre = FILL7 NOT (SIZE M7FW_EXP BY (MdmS_M7 + grid))
	FILLM7 = (SIZE FILLM7pre BY (MdmW_M7 - grid) UNDEROVER TRUNCATE MdmW_M7) AND FILLM7pre
	M7F1 = RECTANGLES MdmW_M7 MdmL_M7 MdmS_M7 OFFSET MdmO_M7 INSIDE OF LAYER FILLM7
	M7R1pre = FILLM7pre NOT (SIZE M7F1 BY (dmS_M7 + grid))
	M7R1 = (SIZE M7R1pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R1pre

	M7F2 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R1
	M7R2pre = M7R1 NOT (SIZE M7F2 BY (dmS_M7 + grid))
	M7R2 = (SIZE M7R2pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R2pre

	M7F3 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R2
	M7R3pre = M7R2 NOT (SIZE M7F3 BY (dmS_M7 + grid))
	M7R3 = (SIZE M7R3pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R3pre
	
	M7F4 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 INSIDE OF LAYER M7R3

	M7F = ((((M7F1 OR M7F2) OR M7F3) OR M7F4) OR M7FW) NOT INTERACT IND_COIL_EXD
	FM7 = M7F NOT INTERACT (EXT M7F < dmS_M7 ABUT SINGULAR REGION)
    
	maxOPENM7 = DENSITY M7x FM7 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Max.den
		       
	FM7F = FM7 OUTSIDE maxOPENM7

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M7 = DENSITY M7x FM7F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den

	RM7EXC = SIZE FM7F BY (Odm2DM7 + grid)
// do not fill DMz_S over CTMDMY 
	D25M7pM = ((((((PUSH D25M7) NOT FRAME7) NOT RM7EXC) NOT CTMDMY) NOT TFRDUMMY_6) NOT TFRDUMMY_7) AND CHIP
	D25M7pM_1 = (SIZE D25M7pM BY (OdmW_M7 /2 - grid) UNDEROVER TRUNCATE OdmW_M7) AND D25M7pM 

	RM7p1 = RECTANGLES OdmW_M7 OdmL_M7 OdmS_M7 INSIDE OF LAYER D25M7pM_1
	D25M7pM_2 = D25M7pM_1 NOT (SIZE RM7p1 BY (OdmS_M7 + grid))
	RM7p2 = RECTANGLES OdmL_M7 OdmW_M7 OdmS_M7 INSIDE OF LAYER D25M7pM_2

	D25M7pM_3pre = D25M7pM_2 NOT (SIZE RM7p2 BY (OdmS_M7 + grid))
	D25M7pM_3 = (SNAP (SIZE D25M7pM_3pre BY -grid) 5) AND D25M7pM_3pre
	RM7p3a = (INT D25M7pM_3 >=OdmW_M7 <=maxOdmW_M7 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M7pM_3 
	RM7p3b = RECTANGLE RM7p3a >= OdmW_M7 BY >= OdmL_M7 ORTHOGONAL ONLY// 0.4*1.42
	RM7p3  = RECTANGLE RM7p3b <= maxOdmW_M7 BY <= maxOdmL_M7 ORTHOGONAL ONLY// 1.5*6
	RM7A = ((((RM7p1 OR RM7p2) OR RM7p3) OUTSIDE RM7EXC) OUTSIDE FRAME7) NOT INTERACT IND_COIL_EXD
	RM7  = RM7A NOT INTERACT (EXT RM7A < OdmS_M7 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M6
        FILLM7_CTMDMY = (CTMDMY NOT (SIZE ((FM7F OR RM7) OR (M7x NOT OUTSIDE CTMDMY)) BY (dmS_M7_CTMDMY + grid))) NOT FRAME7
 	    M7F1_CTMDMY = RECTANGLES WdmW_M7 WdmL_M7 dmS_M7_CTMDMY OFFSET WdmO_M7 INSIDE OF LAYER FILLM7_CTMDMY
        M7R1_CTMDMY = FILLM7_CTMDMY NOT (SIZE M7F1_CTMDMY BY (dmS_M7_CTMDMY + grid))
        M7F2_CTMDMY = RECTANGLES WdmW_M7 WdmL_M7 dmS_M7_CTMDMY OFFSET WdmO_M7 INSIDE OF LAYER M7R1_CTMDMY
        M7R2_CTMDMY = WITH WIDTH (M7R1_CTMDMY NOT (SIZE M7F2_CTMDMY BY (dmS_M7_CTMDMY + grid))) >= min_dmW_M7_CTMDMY
        M7F3_CTMDMY = RECTANGLES min_dmW_M7_CTMDMY min_dmW_M7_CTMDMY dmS_M7_CTMDMY OFFSET dmO_M7 INSIDE OF LAYER M7R2_CTMDMY
	    M7R3_CTMDMY = WITH WIDTH (M7R2_CTMDMY NOT (SIZE M7F3_CTMDMY BY (dmS_M7_CTMDMY + grid))) >= min_dmW_M7_CTMDMY
        M7F4_CTMDMY = RECTANGLES min_dmW_M7_CTMDMY min_dmW_M7_CTMDMY dmS_M7_CTMDMY OFFSET dmO_M7 INSIDE OF LAYER M7R3_CTMDMY
	    M7F_CTMDMY_A = ((M7F1_CTMDMY OR M7F2_CTMDMY) OR M7F3_CTMDMY) OR  M7F4_CTMDMY
	    M7F_CTMDMY = M7F_CTMDMY_A NOT INTERACT (EXT M7F_CTMDMY_A < dmS_M7_CTMDMY ABUT SINGULAR REGION)
	    DM7F_pre = (FM7F OR RM7) OR M7F_CTMDMY
    #ELSE
        DM7F_pre = FM7F OR RM7
    #ENDIF
        FILLM7_TFRDMY_1 = (TFRDUMMY_7 NOT (SIZE ((FM7F OR RM7) OR (M7x NOT OUTSIDE TFRDUMMY_7)) BY (dmS_M7_TFRDMY + grid))) NOT FRAME7
        FILLM7_TFRDMY_2 = (TFRDUMMY_6 NOT (SIZE ((FM7F OR RM7) OR (M7x NOT OUTSIDE TFRDUMMY_6)) BY (dmS_M7_TFRDMY + grid))) NOT FRAME7
        FILLM7_TFRDMY = FILLM7_TFRDMY_1 OR FILLM7_TFRDMY_2 
     	M7F1_TFRDMY = RECTANGLES dmW_M7_TFRDMY dmL_M7_TFRDMY dmS_M7_TFRDMY OFFSET dmO_M7_TFRDMY INSIDE OF LAYER FILLM7_TFRDMY
        M7R1_TFRDMY = FILLM7_TFRDMY NOT (SIZE M7F1_TFRDMY BY (dmS_M7_TFRDMY + grid))
        M7F2_TFRDMY = RECTANGLES dmW_M7_TFRDMY dmL_M7_TFRDMY dmS_M7_TFRDMY OFFSET dmO_M7_TFRDMY INSIDE OF LAYER M7R1_TFRDMY
        M7R2_TFRDMY = M7R1_TFRDMY NOT (SIZE M7F2_TFRDMY BY (dmS_M7_TFRDMY + grid))
        M7F3_TFRDMY = RECTANGLES dmW_M7_TFRDMY dmL_M7_TFRDMY dmS_M7_TFRDMY OFFSET dmO_M7_TFRDMY INSIDE OF LAYER M7R2_TFRDMY
        M7R3_TFRDMY = M7R2_TFRDMY NOT (SIZE M7F3_TFRDMY BY (dmS_M7_TFRDMY + grid))
        M7F4_TFRDMY = RECTANGLES dmW_M7_TFRDMY dmL_M7_TFRDMY dmS_M7_TFRDMY OFFSET dmO_M7_TFRDMY INSIDE OF LAYER M7R3_TFRDMY
	    M7F_TFRDMY_A = ((M7F1_TFRDMY OR M7F2_TFRDMY) OR M7F3_TFRDMY) OR  M7F4_TFRDMY
	    M7F_TFRDMY = M7F_TFRDMY_A NOT INTERACT (EXT M7F_TFRDMY_A < dmS_M7_TFRDMY ABUT SINGULAR REGION)
        DM7F = DM7F_pre OR M7F_TFRDMY
#ELSE	
#IFDEF 5K_THICK_M7
	minOPENM7 = DENSITY M7x < minD_M7 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den
	emptyOPENM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M7Empty.den

#IFDEF FILL_IN_SLOT
       	M7ExcHole  = COPY EMPTY	
#ELSE
   	M7InnerHole = HOLES M7i INNER
	M7BigHole = SIZE M7InnerHole BY - excludeHoleSize/2 
	M7ExcHole = (M7InnerHole OUTSIDE M7BigHole) NOT M7i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK7 = SIZE DM7EXCL BY (dm2DMEXCL + grid)	// DM7 to DM7EXCL
    
        FRAMEA7 = SIZE M7i BY (dm2M7 + grid) // DM7 to metal
	M7mid = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i
	M7wide = (SIZE M7mid BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i
	FRAMEB7 = SIZE M7wide BY (dm2WM7 + grid) // DM7 to 4.5um wide metal, 1.5um
	FRAMEC7 = SIZE DUM7 BY (dm2DM7 + grid)   // ODM7 or DM7 to existed dummy metal 0.6um 
	FRAME7Pre = ((FRAMEA7 OR FRAMEB7) OR FRAMEC7) OR M7ExcHole
	#IFDEF CBM_OVER_M7
	   FRAME7 = ((((FRAME7Pre OR BLOCK7) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M7
        #ELSE
	   FRAME7 = (((FRAME7Pre OR BLOCK7) OR NFILL) OR HVxx) OR OD_RDG_M7
        #ENDIF
	OPENM7 = PUSH ((minOPENM7 OR emptyOPENM7) AND CHIP)
	FILL7 = OPENM7 NOT FRAME7
	FILLW7pre = SIZE FILL7 BY - (Wdm2M7 + grid)
	FILLW7 = (SIZE FILLW7pre BY (WdmW_M7 - grid) UNDEROVER TRUNCATE WdmW_M7) AND FILLW7pre
	M7FW = RECTANGLES WdmW_M7 WdmL_M7 WdmS_M7 OFFSET WdmO_M7 INSIDE OF LAYER FILLW7
	M7FW_EXP = SIZE M7FW BY (WdmS_M7 /2 + grid) OVERUNDER //merge the gaps 
	FILLM7pre = FILL7 NOT (SIZE M7FW_EXP BY (MdmS_M7 + grid))
	FILLM7 = (SIZE FILLM7pre BY (MdmW_M7 - grid) UNDEROVER TRUNCATE MdmW_M7) AND FILLM7pre
	M7F1 = RECTANGLES MdmW_M7 MdmL_M7 MdmS_M7 OFFSET MdmO_M7 INSIDE OF LAYER FILLM7
	M7R1pre = FILLM7pre NOT (SIZE M7F1 BY (dmS_M7 + grid))
	M7R1 = (SIZE M7R1pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R1pre

	M7F2 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R1
	M7R2pre = M7R1 NOT (SIZE M7F2 BY (dmS_M7 + grid))
	M7R2 = (SIZE M7R2pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R2pre

	M7F3 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 OFFSET dmO_M7 INSIDE OF LAYER M7R2
	M7R3pre = M7R2 NOT (SIZE M7F3 BY (dmS_M7 + grid))
	M7R3 = (SIZE M7R3pre BY (dmW_M7/2 - grid) UNDEROVER TRUNCATE dmW_M7) AND M7R3pre
	
	M7F4 = RECTANGLES dmW_M7 dmL_M7 dmS_M7 INSIDE OF LAYER M7R3

	M7F = (((M7F1 OR M7F2) OR M7F3) OR M7F4) OR M7FW
	FM7 = M7F NOT INTERACT (EXT M7F < dmS_M7 ABUT SINGULAR REGION)
    
	maxOPENM7 = DENSITY M7x FM7 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Max.den
		       
	FM7F = FM7 OUTSIDE maxOPENM7

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M7 = DENSITY M7x FM7F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den

	RM7EXC = SIZE FM7F BY (Odm2DM7 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M7pM = ((((PUSH D25M7) NOT FRAME7) NOT RM7EXC) NOT CTMDMY) AND CHIP
	D25M7pM_1 = (SIZE D25M7pM BY (OdmW_M7 /2 - grid) UNDEROVER TRUNCATE OdmW_M7) AND D25M7pM 
		
	RM7p1 = RECTANGLES OdmW_M7 OdmL_M7 OdmS_M7 INSIDE OF LAYER D25M7pM_1
	D25M7pM_2 = D25M7pM_1 NOT (SIZE RM7p1 BY (OdmS_M7 + grid))
	RM7p2 = RECTANGLES OdmL_M7 OdmW_M7 OdmS_M7 INSIDE OF LAYER D25M7pM_2

	D25M7pM_3pre = D25M7pM_2 NOT (SIZE RM7p2 BY (OdmS_M7 + grid))
	D25M7pM_3 = (SNAP (SIZE D25M7pM_3pre BY -grid) 5) AND D25M7pM_3pre
	RM7p3a = (INT D25M7pM_3 >=OdmW_M7 <=maxOdmW_M7 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M7pM_3 
	RM7p3b = RECTANGLE RM7p3a >= OdmW_M7 BY >= OdmL_M7 ORTHOGONAL ONLY// 0.8*1.42
	RM7p3  = RECTANGLE RM7p3b <= maxOdmW_M7 BY <= maxOdmL_M7 ORTHOGONAL ONLY// 1.5*6
	RM7A = (((RM7p1 OR RM7p2) OR RM7p3) OUTSIDE RM7EXC) OUTSIDE FRAME7
	RM7  = RM7A NOT INTERACT (EXT RM7A < OdmS_M7 ABUT SINGULAR REGION)
	
	DM7F = FM7F OR RM7

#ELSE
	D30M7 = DENSITY M7x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M7.den30
	D40M7 = DENSITY M7x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M7.den40
	D50M7 = DENSITY M7x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M7.den50
	emptyM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M7.den_empty

#IFDEF FILL_IN_SLOT
       	M7ExcHole  = COPY EMPTY	
#ELSE
   	M7InnerHole = HOLES M7i INNER
	M7BigHole = SIZE M7InnerHole BY - excludeHoleSize/2 
	M7ExcHole = (M7InnerHole OUTSIDE M7BigHole) NOT M7i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK7 = SIZE DM7EXCL BY (dm2DMEXCL + grid)	// DM7 to DM7EXCL
	
        FRAMEA7 = SIZE M7i BY (DM7_301 + grid)	  // DM7 to real metal
        FRAMEA7RM = SIZE M7i BY (DM7_304 + grid)	  // RM7 to real metal

	FRAMEA7_45 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (DM745_301 + grid) // DM7 to 45 degree metal
	FRAMEA7RM_45 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (DM745_304 + grid) // DM7 to 45 degree real metal
        
	M7mid = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i
	
	M7wide_W1 = (SIZE M7mid BY wideM7_W1/2 UNDEROVER TRUNCATE wideM7_W1/2) AND M7i	
	M7wide_W11 = (SIZE M7wide_W1 BY wideM7_W11/2 UNDEROVER TRUNCATE wideM7_W11/2) AND M7i
	M7wide_W2 = (SIZE M7wide_W1 BY wideM7_W2/2 UNDEROVER TRUNCATE wideM7_W2/2) AND M7i
	M7wide = (SIZE M7wide_W2 BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i

	FRAMEB7 = SIZE M7wide BY (dm2WM7 + grid) // DM7 to wide metal 4.5
	FRAMEB7_W2 = SIZE M7wide_W2 BY (dm2WM7_W2 + grid) // DM7 to 1.5um wide metal 0.5
	FRAMEB7_W1 = SIZE M7wide_W1 BY (dm2WM7_W1 + grid) // DM7 to 0.21um wide metal
	FRAMEB7_W11 = SIZE M7wide_W11 BY (dm2WM7_W11 + grid) // DM7 to 0.38um wide metal
    
	FRAMEC7 = SIZE DUM7 BY (dm2DM7 + grid)   // DM7 to existed dummy metal 0.4
	FRAMEC7RM = SIZE DUM7 BY (Odm2DM7 + grid)   // ODM7 to existed dummy metal 0.6 
	FRAME7Pre = ((((FRAMEA7 OR FRAMEB7) OR FRAMEC7) OR M7ExcHole) OR FRAMEB7_W2) OR FRAMEA7_45
	FRAME7PreRM = ((((((FRAMEA7RM OR FRAMEB7) OR FRAMEC7RM) OR M7ExcHole) OR FRAMEB7_W2) OR FRAMEB7_W1) OR FRAMEB7_W11) OR FRAMEA7RM_45
	
	#IFDEF CBM_OVER_M7
	    FRAME7 = (((((FRAME7Pre OR BLOCK7) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M7
	    FRAME7RM = ((((FRAME7PreRM OR BLOCK7) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M7
	#ELSE
        FRAME7 = ((((FRAME7Pre OR BLOCK7) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M7
	    FRAME7RM = (((FRAME7PreRM OR BLOCK7) OR NFILLRM) OR HVxx) OR OD_RDG_M7
	#ENDIF

//****************************************************************************

	D30M7p = (PUSH D30M7) NOT FRAME7
	O30M7pre = D30M7p AND CHIP
	FD21M7s = COPY FRAME7

	O30M7preA = SIZE O30M7pre BY - (DM7_303 + grid)
	O30M7preB = (SIZE O30M7preA BY (WM7_303 - grid) UNDEROVER TRUNCATE WM7_303) AND O30M7preA

	// 1st 2*2
	F303M7 = (RECTANGLES WM7_303 LM7_303 SM7_303 OFFSET OM7_303  INSIDE OF LAYER O30M7preB) NOT INTERACT IND_COIL_EXD

	
	F303M7_EXP = SIZE F303M7 BY ( WM7_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M7preF1 = O30M7pre NOT (SIZE F303M7_EXP BY (SM7_302 + grid))
	O30M7preF = (SNAP (SIZE O30M7preF1 BY -grid) 5) AND O30M7preF1

	B30M7pre = (INT O30M7preF >= WM7_301 <= maxW_DM7V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M7preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M7pre2 = RECTANGLE B30M7pre >= WM7_301 BY >= minL_DM7V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M7pre3 = RECTANGLE B30M7pre2 <= maxW_DM7V_3011 BY <= maxL_DM7V_3011 ORTHOGONAL ONLY

	B30M7 = (B30M7pre3 NOT INTERACT (EXT B30M7pre3 < SM7_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M7s = ((SIZE B30M7 BY (SM7_301 + grid)) OR FD21M7s) OR (SIZE F303M7_EXP BY (SM7_302 + grid))
	O30M7 = O30M7preF NOT B30M7s

	
	// 3rd, 0.5*1.2
	F302M7 = (RECTANGLES WM7_302 LM7_302 SM7_302 OFFSET OM7_302 INSIDE OF LAYER O30M7) NOT INTERACT IND_COIL_EXD
	F302M7s = (SIZE F302M7 BY (SM7_301 + grid)) OR B30M7s
	R302M7pre = O30M7 NOT F302M7s
	R302M7 = (SIZE R302M7pre BY (WM7_301/2 + grid) UNDEROVER TRUNCATE WM7_301) AND R302M7pre

	// 4th, 0.5*0.5
	F3012M7 = (RECTANGLES WM7_301 LM7_301 SM7_301 OFFSET OM7_301 INSIDE OF LAYER R302M7) NOT INTERACT IND_COIL_EXD
	F3012M7s = (SIZE F3012M7 BY (SM7_301 + grid)) OR F302M7s
	R3012M7pre = R302M7pre NOT F3012M7s
	R3012M7 = (SIZE R3012M7pre BY (WM7_301/2 + grid) UNDEROVER TRUNCATE WM7_301) AND R3012M7pre

	// 5th, regular 0.5*0.5
	F301M7 = (RECTANGLES WM7_301 LM7_301 SM7_301 INSIDE OF LAYER R3012M7) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M7s = (SIZE F301M7 BY (SM7_301 + grid)) OR F3012M7s

	F30M7 = (((B30M7 OR F302M7) OR F3012M7) OR F301M7) OR F303M7
	O40M7pre = (((PUSH D40M7) NOT FRAME7) NOT F301M7s) AND CHIP


	O40M7preA = SIZE O40M7pre BY - (DM7_403 + grid)
	O40M7preB = (SIZE O40M7preA BY (WM7_403 - grid) UNDEROVER TRUNCATE WM7_403) AND O40M7preA

	// 1st 2*2
	F403M7 = RECTANGLES WM7_403 LM7_403 SM7_403 OFFSET OM7_403  INSIDE OF LAYER O40M7preB

	
	F403M7_EXP = SIZE F403M7 BY ( WM7_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M7preF1 = O40M7pre NOT (SIZE F403M7_EXP BY (SM7_402 + grid))
	O40M7preF = (SNAP (SIZE O40M7preF1 BY -grid) 5) AND O40M7preF1

	B40M7pre = (INT O40M7preF >= WM7_401 <= maxW_DM7V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M7preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M7pre2 = RECTANGLE B40M7pre >= WM7_401 BY >= minL_DM7V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M7pre3 = RECTANGLE B40M7pre2 <= maxW_DM7V_4011 BY <= maxL_DM7V_4011 ORTHOGONAL ONLY

	B40M7 = (B40M7pre3 NOT INTERACT (EXT B40M7pre3 < SM7_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M7s = ((SIZE B40M7 BY (SM7_401 + grid)) OR F301M7s) OR (SIZE F403M7_EXP BY (SM7_402 + grid))
	O40M7 = O40M7preF NOT B40M7s

	
	// 3rd, 0.5*1.2
	F402M7 = (RECTANGLES WM7_402 LM7_402 SM7_402 OFFSET OM7_402 INSIDE OF LAYER O40M7) NOT INTERACT IND_COIL_EXD
	F402M7s = (SIZE F402M7 BY (SM7_401 + grid)) OR B40M7s
	R402M7pre = O40M7 NOT F402M7s
	R402M7 = (SIZE R402M7pre BY (WM7_401/2 + grid) UNDEROVER TRUNCATE WM7_401) AND R402M7pre

	// 4th, 0.5*0.5
	F4012M7 = (RECTANGLES WM7_401 LM7_401 SM7_401 OFFSET OM7_401 INSIDE OF LAYER R402M7) NOT INTERACT IND_COIL_EXD
	F4012M7s = (SIZE F4012M7 BY (SM7_401 + grid)) OR F402M7s
	R4012M7pre = R402M7pre NOT F4012M7s
	R4012M7 = (SIZE R4012M7pre BY (WM7_401/2 + grid) UNDEROVER TRUNCATE WM7_401) AND R4012M7pre

	// 5th, regular 0.5*0.5
	F401M7 = (RECTANGLES WM7_401 LM7_401 SM7_401 INSIDE OF LAYER R4012M7) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M7s = (SIZE F401M7 BY (SM7_401 + grid)) OR F4012M7s

	F40M7 = (((B40M7 OR F402M7) OR F4012M7) OR F401M7) OR F403M7
	O50M7pre = (((PUSH (D50M7 OR emptyM7)) NOT FRAME7) NOT F401M7s) AND CHIP


	O50M7preA = SIZE O50M7pre BY - (DM7_503 + grid)
	O50M7preB = (SIZE O50M7preA BY (WM7_503 - grid) UNDEROVER TRUNCATE WM7_503) AND O50M7preA

	// 1st 2*2
	F503M7 = RECTANGLES WM7_503 LM7_503 SM7_503 OFFSET OM7_503  INSIDE OF LAYER O50M7preB

	
	F503M7_EXP = SIZE F503M7 BY ( WM7_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M7preF1 = O50M7pre NOT (SIZE F503M7_EXP BY (SM7_502 + grid))
	O50M7preF = (SNAP (SIZE O50M7preF1 BY -grid) 5) AND O50M7preF1

	B50M7pre = (INT O50M7preF >= WM7_501 <= maxW_DM7V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M7preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M7pre2 = RECTANGLE B50M7pre >= WM7_501 BY >= minL_DM7V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M7pre3 = RECTANGLE B50M7pre2 <= maxW_DM7V_5011 BY <= maxL_DM7V_5011 ORTHOGONAL ONLY

	B50M7 = (B50M7pre3 NOT INTERACT (EXT B50M7pre3 < SM7_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M7s = ((SIZE B50M7 BY (SM7_501 + grid)) OR F401M7s) OR (SIZE F503M7_EXP BY (SM7_502 + grid))
	O50M7 = O50M7preF NOT B50M7s

	
	// 3rd, 0.5*1.2
	F502M7 = (RECTANGLES WM7_502 LM7_502 SM7_502 OFFSET OM7_502 INSIDE OF LAYER O50M7) NOT INTERACT IND_COIL_EXD
	F502M7s = (SIZE F502M7 BY (SM7_501 + grid)) OR B50M7s
	R502M7pre = O50M7 NOT F502M7s
	R502M7 = (SIZE R502M7pre BY (WM7_501/2 + grid) UNDEROVER TRUNCATE WM7_501) AND R502M7pre

	// 4th, 0.5*0.5
	F5012M7 = (RECTANGLES WM7_501 LM7_501 SM7_501 OFFSET OM7_501 INSIDE OF LAYER R502M7) NOT INTERACT IND_COIL_EXD
	F5012M7s = (SIZE F5012M7 BY (SM7_501 + grid)) OR F502M7s
	R5012M7pre = R502M7pre NOT F5012M7s
	R5012M7 = (SIZE R5012M7pre BY (WM7_501/2 + grid) UNDEROVER TRUNCATE WM7_501) AND R5012M7pre

	// 5th, regular 0.5*0.5
	F501M7 = (RECTANGLES WM7_501 LM7_501 SM7_501 INSIDE OF LAYER R5012M7) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M7s = (SIZE F501M7 BY (SM7_501 + grid)) OR F5012M7s

	F50M7 = (((B50M7 OR F502M7) OR F5012M7) OR F501M7) OR F503M7

//****************************************************************************
    
	exceedM7 = DENSITY M7x F30M7 F40M7 F50M7 > maxD_M7 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M7.den_exceed
	exceedM7DN2 = DENSITY M7x F30M7 F40M7 F50M7 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M7.DN.2.den_exceed

	removeM7R = ((PUSH (exceedM7 AND (D50M7 OR emptyM7))) NOT FRAME7) AND CHIP 
	removeM7 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM7R
	
	F30M7x = (F30M7 NOT INTERACT exceedM7DN2) NOT INTERACT removeM7
	F40M7x = (F40M7 NOT INTERACT exceedM7DN2) NOT INTERACT removeM7
	F50M7x = (F50M7 NOT INTERACT exceedM7DN2) NOT INTERACT removeM7
	FM7xA  = (F30M7x OR F40M7x) OR F50M7x
	FM7x   = FM7xA NOT INTERACT (EXT FM7xA < DM7_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM7
	lackM7 = DENSITY M7x FM7x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M7.den_lack
	RM7EXC = SIZE (((FM7x OR F303M7_EXP) OR F403M7_EXP) OR F503M7_EXP) BY (DM7_301 + grid)
	BigemptyM7 = PUSH ((SIZE emptyM7 BY 25 UNDEROVER) AND emptyM7)
    
	lackM7pRM = (((((PUSH lackM7) NOT RM7EXC) NOT BigemptyM7) NOT exceedM7) NOT FRAME7RM ) AND CHIP
	lackM7pRM_1 = WITH WIDTH lackM7pRM >= minWM7_304
	RM7p1 = RECTANGLES minLM7_304 minWM7_304 SM7_304 OFFSET OM7_304 INSIDE OF LAYER lackM7pRM_1
	lackM7pRM_2 = WITH WIDTH (lackM7pRM_1 NOT (SIZE RM7p1 BY (SM7_304 + grid))) >= minWM7_304
	RM7p2 = RECTANGLES minWM7_304 minLM7_304 SM7_304 OFFSET OM7_304 INSIDE OF LAYER lackM7pRM_2
        lackM7pRM_3pre = lackM7pRM_2 NOT (SIZE RM7p2 BY (SM7_304 + grid))
	lackM7pRM_3 = (SNAP (SIZE lackM7pRM_3pre BY -grid) 5) AND lackM7pRM_3pre 
	       
	RM7p3pre = (INT lackM7pRM_3 >= minWM7_304 <= maxWM7_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM7pRM_3 
	RM7p3pre2 = RECTANGLE RM7p3pre >= minWM7_304 BY >= minLM7_304 ORTHOGONAL ONLY// 0.13*0.6
	RM7p3 = RECTANGLE RM7p3pre2 <= maxWM7_304 BY <= maxLM7_304 ORTHOGONAL ONLY// 0.2*6

	RM7A = ((((RM7p1 OR RM7p2) OR RM7p3) OUTSIDE RM7EXC) OUTSIDE FRAME7RM) NOT INTERACT IND_COIL_EXD
	RM7F = RM7A NOT INTERACT (EXT RM7A < SM7_304 ABUT SINGULAR REGION)

#ENDIF

DM7F = COPY FM7x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM8

#IFDEF 34K_THICK_M8
	minOPENM8 = DENSITY M8x < minD_M8 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den
	emptyOPENM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M8Empty.den
        #IFDEF FILL_IN_SLOT
       	M8ExcHole  = COPY EMPTY	
        #ELSE
   	M8InnerHole = HOLES M8i INNER
	M8BigHole = SIZE M8InnerHole BY - excludeHoleSize/2
	M8ExcHole = (M8InnerHole OUTSIDE M8BigHole) NOT M8i
        #ENDIF	
        BLOCK8    = SIZE DM8EXCL BY (dm2DMEXCL + grid)
        FRAMEA8   = SIZE M8i BY (dm2M8 + grid)
	M8mid     = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i
	M8wide    = (SIZE M8mid BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i
	FRAMEB8   = SIZE M8wide BY (dm2WM8 + grid) // DM8 to 4.5um wide metal 3um
	FRAMEC8   = SIZE DUM8 BY (dm2DM8 + grid)    
	FRAME8Pre = ((FRAMEA8 OR FRAMEB8) OR FRAMEC8) OR M8ExcHole
	#IFDEF CBM_OVER_M8
        FRAME8 = ((((FRAME8Pre OR BLOCK8) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M8  
	#ELSE
	    FRAME8 = (((FRAME8Pre OR BLOCK8) OR NFILL) OR HVxx) OR OD_RDG_M8
	#ENDIF	
	OPENM8 = PUSH ((minOPENM8 OR emptyOPENM8) AND CHIP)
	FILL8 = OPENM8 NOT FRAME8
	FILLW8pre = SIZE FILL8 BY - (Wdm2M8 + grid)
	FILLW8 = (SIZE FILLW8pre BY (WdmW_M8 - grid) UNDEROVER TRUNCATE WdmW_M8) AND FILLW8pre
	M8FW = RECTANGLES WdmW_M8 WdmL_M8 WdmS_M8 OFFSET WdmO_M8 INSIDE OF LAYER FILLW8
	M8FW_EXP = SIZE M8FW BY (WdmS_M8 /2 + grid) OVERUNDER	// merge the gaps
	FILLM8pre = FILL8 NOT (SIZE M8FW_EXP BY (MdmS_M8 + grid))
	FILLM8 = (SIZE FILLM8pre BY (MdmW_M8 - grid) UNDEROVER TRUNCATE MdmW_M8) AND FILLM8pre
	M8F1 = RECTANGLES MdmW_M8 MdmL_M8 MdmS_M8 OFFSET MdmO_M8 INSIDE OF LAYER FILLM8
	M8R1pre = FILLM8pre NOT (SIZE M8F1 BY (dmS_M8 + grid))
	M8R1 = (SIZE M8R1pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R1pre

	M8F2 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R1
	M8R2pre = M8R1 NOT (SIZE M8F2 BY (dmS_M8 + grid))
	M8R2 = (SIZE M8R2pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R2pre

	M8F3 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R2
	M8R3pre = M8R2 NOT (SIZE M8F3 BY (dmS_M8 + grid))
	M8R3 = (SIZE M8R3pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R3pre
	
	M8F4 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 INSIDE OF LAYER M8R3 

	M8F = (((M8F1 OR M8F2) OR M8F3) OR M8F4) OR M8FW
	FM8 = M8F NOT INTERACT (EXT M8F < dmS_M8 ABUT SINGULAR REGION)

	maxOPENM8 = DENSITY M8x FM8 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Max.den
		       
	DM8F = FM8 OUTSIDE maxOPENM8

#ELSE
#IFDEF 12K_THICK_M8
	
	minOPENM8 = DENSITY M8x < minD_M8 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den
	emptyOPENM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M8Empty.den
#IFDEF FILL_IN_SLOT
       	M8ExcHole  = COPY EMPTY	
#ELSE
   	M8InnerHole = HOLES M8i INNER
	M8BigHole = SIZE M8InnerHole BY - excludeHoleSize/2 
	M8ExcHole = (M8InnerHole OUTSIDE M8BigHole) NOT M8i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK8 = SIZE DM8EXCL BY (dm2DMEXCL + grid)	// DM8 to DM8EXCL
    
        FRAMEA8 = SIZE M8i BY (dm2M8 + grid) // DM8 to metal
	M8mid = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i
	M8wide = (SIZE M8mid BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i
	FRAMEB8 = SIZE M8wide BY (dm2WM8 + grid) // DM8 to 4.5um wide metal, 1.5um
	FRAMEC8 = SIZE DUM8 BY (dm2DM8 + grid)   // ODM8 or DM8 to existed dummy metal 0.6um 
	FRAME8Pre = ((FRAMEA8 OR FRAMEB8) OR FRAMEC8) OR M8ExcHole
        #IFDEF CBM_OVER_M8
	   FRAME8 = ((((FRAME8Pre OR BLOCK8) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M8	// wrong setting will add nothing
        #ELSE 
	   FRAME8 = (((FRAME8Pre OR BLOCK8) OR NFILL) OR HVxx) OR OD_RDG_M8
        #ENDIF 

	OPENM8 = PUSH ((minOPENM8 OR emptyOPENM8) AND CHIP)
	FILL8 = OPENM8 NOT FRAME8
	FILLW8pre = SIZE FILL8 BY - (Wdm2M8 + grid)
	FILLW8 = (SIZE FILLW8pre BY (WdmW_M8 - grid) UNDEROVER TRUNCATE WdmW_M8) AND FILLW8pre
	M8FW = RECTANGLES WdmW_M8 WdmL_M8 WdmS_M8 OFFSET WdmO_M8 INSIDE OF LAYER FILLW8
	M8FW_EXP = SIZE M8FW BY (WdmS_M8 /2 + grid) OVERUNDER //merge the gaps 
	FILLM8pre = FILL8 NOT (SIZE M8FW_EXP BY (MdmS_M8 + grid))
	FILLM8 = (SIZE FILLM8pre BY (MdmW_M8 - grid) UNDEROVER TRUNCATE MdmW_M8) AND FILLM8pre
	M8F1 = RECTANGLES MdmW_M8 MdmL_M8 MdmS_M8 OFFSET MdmO_M8 INSIDE OF LAYER FILLM8
	M8R1pre = FILLM8pre NOT (SIZE M8F1 BY (dmS_M8 + grid))
	M8R1 = (SIZE M8R1pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R1pre

	M8F2 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R1
	M8R2pre = M8R1 NOT (SIZE M8F2 BY (dmS_M8 + grid))
	M8R2 = (SIZE M8R2pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R2pre

	M8F3 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R2
	M8R3pre = M8R2 NOT (SIZE M8F3 BY (dmS_M8 + grid))
	M8R3 = (SIZE M8R3pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R3pre
	
	M8F4 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 INSIDE OF LAYER M8R3

	M8F = (((M8F1 OR M8F2) OR M8F3) OR M8F4) OR M8FW
	FM8 = M8F NOT INTERACT (EXT M8F < dmS_M8 ABUT SINGULAR REGION)
    
	maxOPENM8 = DENSITY M8x FM8 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Max.den
		       
	FM8F = FM8 OUTSIDE maxOPENM8

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M8 = DENSITY M8x FM8F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den

	RM8EXC = SIZE FM8F BY (Odm2DM8 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M8pM = ((((PUSH D25M8) NOT FRAME8) NOT RM8EXC) NOT CTMDMY) AND CHIP
	D25M8pM_1 = (SIZE D25M8pM BY (OdmW_M8 /2 - grid) UNDEROVER TRUNCATE OdmW_M8) AND D25M8pM 
		
	RM8p1 = RECTANGLES OdmW_M8 OdmL_M8 OdmS_M8 INSIDE OF LAYER D25M8pM_1
	D25M8pM_2 = D25M8pM_1 NOT (SIZE RM8p1 BY (OdmS_M8 + grid))
	RM8p2 = RECTANGLES OdmL_M8 OdmW_M8 OdmS_M8 INSIDE OF LAYER D25M8pM_2

	D25M8pM_3pre = D25M8pM_2 NOT (SIZE RM8p2 BY (OdmS_M8 + grid))
	D25M8pM_3 = (SNAP (SIZE D25M8pM_3pre BY -grid) 5) AND D25M8pM_3pre
	RM8p3a = (INT D25M8pM_3 >=OdmW_M8 <=maxOdmW_M8 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M8pM_3 
	RM8p3b = RECTANGLE RM8p3a >= OdmW_M8 BY >= OdmL_M8 ORTHOGONAL ONLY // 1*1.44
	RM8p3  = RECTANGLE RM8p3b <= maxOdmW_M8 BY <= maxOdmL_M8 ORTHOGONAL ONLY// 1.5*6
	RM8A = (((RM8p1 OR RM8p2) OR RM8p3) OUTSIDE RM8EXC) OUTSIDE FRAME8
	RM8  = RM8A NOT INTERACT (EXT RM8A < OdmS_M8 ABUT SINGULAR REGION)
	
	DM8F = FM8F OR RM8

#ELSE
#IFDEF 9K_THICK_M8
	minOPENM8 = DENSITY M8x < minD_M8 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den
	emptyOPENM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M8Empty.den

#IFDEF FILL_IN_SLOT
       	M8ExcHole  = COPY EMPTY	
#ELSE
   	M8InnerHole = HOLES M8i INNER
	M8BigHole = SIZE M8InnerHole BY - excludeHoleSize/2 
	M8ExcHole = (M8InnerHole OUTSIDE M8BigHole) NOT M8i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK8 = SIZE DM8EXCL BY (dm2DMEXCL + grid)	// DM8 to DM8EXCL
	FRAMEA8 = SIZE M8i BY (dm2M8 + grid) // DM8 to metal

    
	M8mid = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i
	M8wide = (SIZE M8mid BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i
	FRAMEB8 = SIZE M8wide BY (dm2WM8 + grid) // DM8 to 4.5um wide metal, 1.5um
	FRAMEC8 = SIZE DUM8 BY (dm2DM8 + grid)   // DM8 to existed dummy metal 0.6um 
	FRAME8Pre = ((FRAMEA8 OR FRAMEB8) OR FRAMEC8) OR M8ExcHole
	#IFDEF CBM_OVER_M8
	    FRAME8 = (((((FRAME8Pre OR BLOCK8) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M8
	#ELSE
	    FRAME8 = ((((FRAME8Pre OR BLOCK8) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M8
    #ENDIF    
	OPENM8 = PUSH ((minOPENM8 OR emptyOPENM8) AND CHIP)
    #IFDEF CBM_OVER_M7
        CTMDMY_BLOCK1 = SIZE M8x_CTMDMY BY (dm2M8_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
        TFRDUMMY_BLOCK8_1 = (SIZE M8x_TFRDMY_8 BY (dm2M8_TFRDMY + grid)) OR (SIZE M8x_TFRDMY_7 BY (dm2M8_TFRDMY + grid))
        TFRDUMMY_BLOCK8 = (TFRDUMMY_BLOCK8_1 OR TFRDUMMY_7) OR TFRDUMMY_8
	    FILL8 = ((OPENM8 NOT FRAME8) NOT CTMDMY_BLOCK) NOT TFRDUMMY_BLOCK8
	#ELSE
        TFRDUMMY_BLOCK8_1 = (SIZE M8x_TFRDMY_8 BY (dm2M8_TFRDMY + grid)) OR (SIZE M8x_TFRDMY_7 BY (dm2M8_TFRDMY + grid))
        TFRDUMMY_BLOCK8 = (TFRDUMMY_BLOCK8_1 OR TFRDUMMY_7) OR TFRDUMMY_8
        FILL8 = (OPENM8 NOT FRAME8) NOT TFRDUMMY_BLOCK8
    #ENDIF

	FILLW8pre = SIZE FILL8 BY - (Wdm2M8 + grid)
	FILLW8 = (SIZE FILLW8pre BY (WdmW_M8 - grid) UNDEROVER TRUNCATE WdmW_M8) AND FILLW8pre
	M8FW = RECTANGLES WdmW_M8 WdmL_M8 WdmS_M8 OFFSET WdmO_M8 INSIDE OF LAYER FILLW8
	M8FW_EXP = SIZE M8FW BY (WdmS_M8 /2 + grid) OVERUNDER //merge the gaps 
	FILLM8pre = FILL8 NOT (SIZE M8FW_EXP BY (MdmS_M8 + grid))
	FILLM8 = (SIZE FILLM8pre BY (MdmW_M8 - grid) UNDEROVER TRUNCATE MdmW_M8) AND FILLM8pre
	M8F1 = RECTANGLES MdmW_M8 MdmL_M8 MdmS_M8 OFFSET MdmO_M8 INSIDE OF LAYER FILLM8
	M8R1pre = FILLM8pre NOT (SIZE M8F1 BY (dmS_M8 + grid))
	M8R1 = (SIZE M8R1pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R1pre

	M8F2 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R1
	M8R2pre = M8R1 NOT (SIZE M8F2 BY (dmS_M8 + grid))
	M8R2 = (SIZE M8R2pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R2pre

	M8F3 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R2
	M8R3pre = M8R2 NOT (SIZE M8F3 BY (dmS_M8 + grid))
	M8R3 = (SIZE M8R3pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R3pre
	
	M8F4 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 INSIDE OF LAYER M8R3

	M8F = ((((M8F1 OR M8F2) OR M8F3) OR M8F4) OR M8FW) NOT INTERACT IND_COIL_EXD
	FM8 = M8F NOT INTERACT (EXT M8F < dmS_M8 ABUT SINGULAR REGION)
    
	maxOPENM8 = DENSITY M8x FM8 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Max.den
		       
	FM8F = FM8 OUTSIDE maxOPENM8

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M8 = DENSITY M8x FM8F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den

	RM8EXC = SIZE FM8F BY (Odm2DM8 + grid)
// do not fill DMz_S over CTMDMY 
	D25M8pM = ((((((PUSH D25M8) NOT FRAME8) NOT RM8EXC) NOT CTMDMY) NOT TFRDUMMY_7) NOT TFRDUMMY_8) AND CHIP
	D25M8pM_1 = (SIZE D25M8pM BY (OdmW_M8 /2 - grid) UNDEROVER TRUNCATE OdmW_M8) AND D25M8pM 

	RM8p1 = RECTANGLES OdmW_M8 OdmL_M8 OdmS_M8 INSIDE OF LAYER D25M8pM_1
	D25M8pM_2 = D25M8pM_1 NOT (SIZE RM8p1 BY (OdmS_M8 + grid))
	RM8p2 = RECTANGLES OdmL_M8 OdmW_M8 OdmS_M8 INSIDE OF LAYER D25M8pM_2

	D25M8pM_3pre = D25M8pM_2 NOT (SIZE RM8p2 BY (OdmS_M8 + grid))
	D25M8pM_3 = (SNAP (SIZE D25M8pM_3pre BY -grid) 5) AND D25M8pM_3pre
	RM8p3a = (INT D25M8pM_3 >=OdmW_M8 <=maxOdmW_M8 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M8pM_3 
	RM8p3b = RECTANGLE RM8p3a >= OdmW_M8 BY >= OdmL_M8 ORTHOGONAL ONLY// 0.4*1.42
	RM8p3  = RECTANGLE RM8p3b <= maxOdmW_M8 BY <= maxOdmL_M8 ORTHOGONAL ONLY// 1.5*6
	RM8A = ((((RM8p1 OR RM8p2) OR RM8p3) OUTSIDE RM8EXC) OUTSIDE FRAME8) NOT INTERACT IND_COIL_EXD
	RM8  = RM8A NOT INTERACT (EXT RM8A < OdmS_M8 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M7
        FILLM8_CTMDMY = (CTMDMY NOT (SIZE ((FM8F OR RM8) OR (M8x NOT OUTSIDE CTMDMY)) BY (dmS_M8_CTMDMY + grid))) NOT FRAME8
 	    M8F1_CTMDMY = RECTANGLES WdmW_M8 WdmL_M8 dmS_M8_CTMDMY OFFSET WdmO_M8 INSIDE OF LAYER FILLM8_CTMDMY
        M8R1_CTMDMY = FILLM8_CTMDMY NOT (SIZE M8F1_CTMDMY BY (dmS_M8_CTMDMY + grid))
        M8F2_CTMDMY = RECTANGLES WdmW_M8 WdmL_M8 dmS_M8_CTMDMY OFFSET WdmO_M8 INSIDE OF LAYER M8R1_CTMDMY
        M8R2_CTMDMY = WITH WIDTH (M8R1_CTMDMY NOT (SIZE M8F2_CTMDMY BY (dmS_M8_CTMDMY + grid))) >= min_dmW_M8_CTMDMY
        M8F3_CTMDMY = RECTANGLES min_dmW_M8_CTMDMY min_dmW_M8_CTMDMY dmS_M8_CTMDMY OFFSET dmO_M8 INSIDE OF LAYER M8R2_CTMDMY
	    M8R3_CTMDMY = WITH WIDTH (M8R2_CTMDMY NOT (SIZE M8F3_CTMDMY BY (dmS_M8_CTMDMY + grid))) >= min_dmW_M8_CTMDMY
        M8F4_CTMDMY = RECTANGLES min_dmW_M8_CTMDMY min_dmW_M8_CTMDMY dmS_M8_CTMDMY OFFSET dmO_M8 INSIDE OF LAYER M8R3_CTMDMY
	    M8F_CTMDMY_A = ((M8F1_CTMDMY OR M8F2_CTMDMY) OR M8F3_CTMDMY) OR  M8F4_CTMDMY
	    M8F_CTMDMY = M8F_CTMDMY_A NOT INTERACT (EXT M8F_CTMDMY_A < dmS_M8_CTMDMY ABUT SINGULAR REGION)
	    DM8F_pre = (FM8F OR RM8) OR M8F_CTMDMY
    #ELSE
        DM8F_pre = FM8F OR RM8
    #ENDIF
        FILLM8_TFRDMY_1 = (TFRDUMMY_8 NOT (SIZE ((FM8F OR RM8) OR (M8x NOT OUTSIDE TFRDUMMY_8)) BY (dmS_M8_TFRDMY + grid))) NOT FRAME8
        FILLM8_TFRDMY_2 = (TFRDUMMY_7 NOT (SIZE ((FM8F OR RM8) OR (M8x NOT OUTSIDE TFRDUMMY_7)) BY (dmS_M8_TFRDMY + grid))) NOT FRAME8
        FILLM8_TFRDMY = FILLM8_TFRDMY_1 OR FILLM8_TFRDMY_2 
     	M8F1_TFRDMY = RECTANGLES dmW_M8_TFRDMY dmL_M8_TFRDMY dmS_M8_TFRDMY OFFSET dmO_M8_TFRDMY INSIDE OF LAYER FILLM8_TFRDMY
        M8R1_TFRDMY = FILLM8_TFRDMY NOT (SIZE M8F1_TFRDMY BY (dmS_M8_TFRDMY + grid))
        M8F2_TFRDMY = RECTANGLES dmW_M8_TFRDMY dmL_M8_TFRDMY dmS_M8_TFRDMY OFFSET dmO_M8_TFRDMY INSIDE OF LAYER M8R1_TFRDMY
        M8R2_TFRDMY = M8R1_TFRDMY NOT (SIZE M8F2_TFRDMY BY (dmS_M8_TFRDMY + grid))
        M8F3_TFRDMY = RECTANGLES dmW_M8_TFRDMY dmL_M8_TFRDMY dmS_M8_TFRDMY OFFSET dmO_M8_TFRDMY INSIDE OF LAYER M8R2_TFRDMY
        M8R3_TFRDMY = M8R2_TFRDMY NOT (SIZE M8F3_TFRDMY BY (dmS_M8_TFRDMY + grid))
        M8F4_TFRDMY = RECTANGLES dmW_M8_TFRDMY dmL_M8_TFRDMY dmS_M8_TFRDMY OFFSET dmO_M8_TFRDMY INSIDE OF LAYER M8R3_TFRDMY
	    M8F_TFRDMY_A = ((M8F1_TFRDMY OR M8F2_TFRDMY) OR M8F3_TFRDMY) OR  M8F4_TFRDMY
	    M8F_TFRDMY = M8F_TFRDMY_A NOT INTERACT (EXT M8F_TFRDMY_A < dmS_M8_TFRDMY ABUT SINGULAR REGION)
        DM8F = DM8F_pre OR M8F_TFRDMY
#ELSE	
#IFDEF 5K_THICK_M8
	minOPENM8 = DENSITY M8x < minD_M8 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den
	emptyOPENM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M8Empty.den

#IFDEF FILL_IN_SLOT
       	M8ExcHole  = COPY EMPTY	
#ELSE
   	M8InnerHole = HOLES M8i INNER
	M8BigHole = SIZE M8InnerHole BY - excludeHoleSize/2 
	M8ExcHole = (M8InnerHole OUTSIDE M8BigHole) NOT M8i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK8 = SIZE DM8EXCL BY (dm2DMEXCL + grid)	// DM8 to DM8EXCL
    
        FRAMEA8 = SIZE M8i BY (dm2M8 + grid) // DM8 to metal
	M8mid = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i
	M8wide = (SIZE M8mid BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i
	FRAMEB8 = SIZE M8wide BY (dm2WM8 + grid) // DM8 to 4.5um wide metal, 1.5um
	FRAMEC8 = SIZE DUM8 BY (dm2DM8 + grid)   // ODM8 or DM8 to existed dummy metal 0.6um 
	FRAME8Pre = ((FRAMEA8 OR FRAMEB8) OR FRAMEC8) OR M8ExcHole
	#IFDEF CBM_OVER_M8
	   FRAME8 = ((((FRAME8Pre OR BLOCK8) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M8
        #ELSE
	   FRAME8 = (((FRAME8Pre OR BLOCK8) OR NFILL) OR HVxx) OR OD_RDG_M8
        #ENDIF
	OPENM8 = PUSH ((minOPENM8 OR emptyOPENM8) AND CHIP)
	FILL8 = OPENM8 NOT FRAME8
	FILLW8pre = SIZE FILL8 BY - (Wdm2M8 + grid)
	FILLW8 = (SIZE FILLW8pre BY (WdmW_M8 - grid) UNDEROVER TRUNCATE WdmW_M8) AND FILLW8pre
	M8FW = RECTANGLES WdmW_M8 WdmL_M8 WdmS_M8 OFFSET WdmO_M8 INSIDE OF LAYER FILLW8
	M8FW_EXP = SIZE M8FW BY (WdmS_M8 /2 + grid) OVERUNDER //merge the gaps 
	FILLM8pre = FILL8 NOT (SIZE M8FW_EXP BY (MdmS_M8 + grid))
	FILLM8 = (SIZE FILLM8pre BY (MdmW_M8 - grid) UNDEROVER TRUNCATE MdmW_M8) AND FILLM8pre
	M8F1 = RECTANGLES MdmW_M8 MdmL_M8 MdmS_M8 OFFSET MdmO_M8 INSIDE OF LAYER FILLM8
	M8R1pre = FILLM8pre NOT (SIZE M8F1 BY (dmS_M8 + grid))
	M8R1 = (SIZE M8R1pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R1pre

	M8F2 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R1
	M8R2pre = M8R1 NOT (SIZE M8F2 BY (dmS_M8 + grid))
	M8R2 = (SIZE M8R2pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R2pre

	M8F3 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 OFFSET dmO_M8 INSIDE OF LAYER M8R2
	M8R3pre = M8R2 NOT (SIZE M8F3 BY (dmS_M8 + grid))
	M8R3 = (SIZE M8R3pre BY (dmW_M8/2 - grid) UNDEROVER TRUNCATE dmW_M8) AND M8R3pre
	
	M8F4 = RECTANGLES dmW_M8 dmL_M8 dmS_M8 INSIDE OF LAYER M8R3

	M8F = (((M8F1 OR M8F2) OR M8F3) OR M8F4) OR M8FW
	FM8 = M8F NOT INTERACT (EXT M8F < dmS_M8 ABUT SINGULAR REGION)
    
	maxOPENM8 = DENSITY M8x FM8 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Max.den
		       
	FM8F = FM8 OUTSIDE maxOPENM8

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M8 = DENSITY M8x FM8F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den

	RM8EXC = SIZE FM8F BY (Odm2DM8 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M8pM = ((((PUSH D25M8) NOT FRAME8) NOT RM8EXC) NOT CTMDMY) AND CHIP
	D25M8pM_1 = (SIZE D25M8pM BY (OdmW_M8 /2 - grid) UNDEROVER TRUNCATE OdmW_M8) AND D25M8pM 
		
	RM8p1 = RECTANGLES OdmW_M8 OdmL_M8 OdmS_M8 INSIDE OF LAYER D25M8pM_1
	D25M8pM_2 = D25M8pM_1 NOT (SIZE RM8p1 BY (OdmS_M8 + grid))
	RM8p2 = RECTANGLES OdmL_M8 OdmW_M8 OdmS_M8 INSIDE OF LAYER D25M8pM_2

	D25M8pM_3pre = D25M8pM_2 NOT (SIZE RM8p2 BY (OdmS_M8 + grid))
	D25M8pM_3 = (SNAP (SIZE D25M8pM_3pre BY -grid) 5) AND D25M8pM_3pre
	RM8p3a = (INT D25M8pM_3 >=OdmW_M8 <=maxOdmW_M8 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M8pM_3 
	RM8p3b = RECTANGLE RM8p3a >= OdmW_M8 BY >= OdmL_M8 ORTHOGONAL ONLY// 0.8*1.42
	RM8p3  = RECTANGLE RM8p3b <= maxOdmW_M8 BY <= maxOdmL_M8 ORTHOGONAL ONLY// 1.5*6
	RM8A = (((RM8p1 OR RM8p2) OR RM8p3) OUTSIDE RM8EXC) OUTSIDE FRAME8
	RM8  = RM8A NOT INTERACT (EXT RM8A < OdmS_M8 ABUT SINGULAR REGION)
	
	DM8F = FM8F OR RM8

#ELSE
	D30M8 = DENSITY M8x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M8.den30
	D40M8 = DENSITY M8x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M8.den40
	D50M8 = DENSITY M8x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M8.den50
	emptyM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M8.den_empty

#IFDEF FILL_IN_SLOT
       	M8ExcHole  = COPY EMPTY	
#ELSE
   	M8InnerHole = HOLES M8i INNER
	M8BigHole = SIZE M8InnerHole BY - excludeHoleSize/2 
	M8ExcHole = (M8InnerHole OUTSIDE M8BigHole) NOT M8i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK8 = SIZE DM8EXCL BY (dm2DMEXCL + grid)	// DM8 to DM8EXCL
	
        FRAMEA8 = SIZE M8i BY (DM8_301 + grid)	  // DM8 to real metal
        FRAMEA8RM = SIZE M8i BY (DM8_304 + grid)	  // RM8 to real metal

	FRAMEA8_45 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (DM845_301 + grid) // DM8 to 45 degree metal
	FRAMEA8RM_45 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (DM845_304 + grid) // DM8 to 45 degree real metal
        
	M8mid = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i
	
	M8wide_W1 = (SIZE M8mid BY wideM8_W1/2 UNDEROVER TRUNCATE wideM8_W1/2) AND M8i	
	M8wide_W11 = (SIZE M8wide_W1 BY wideM8_W11/2 UNDEROVER TRUNCATE wideM8_W11/2) AND M8i
	M8wide_W2 = (SIZE M8wide_W1 BY wideM8_W2/2 UNDEROVER TRUNCATE wideM8_W2/2) AND M8i
	M8wide = (SIZE M8wide_W2 BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i

	FRAMEB8 = SIZE M8wide BY (dm2WM8 + grid) // DM8 to wide metal 4.5
	FRAMEB8_W2 = SIZE M8wide_W2 BY (dm2WM8_W2 + grid) // DM8 to 1.5um wide metal 0.5
	FRAMEB8_W1 = SIZE M8wide_W1 BY (dm2WM8_W1 + grid) // DM8 to 0.21um wide metal
	FRAMEB8_W11 = SIZE M8wide_W11 BY (dm2WM8_W11 + grid) // DM8 to 0.38um wide metal
    
	FRAMEC8 = SIZE DUM8 BY (dm2DM8 + grid)   // DM8 to existed dummy metal 0.4
	FRAMEC8RM = SIZE DUM8 BY (Odm2DM8 + grid)   // ODM8 to existed dummy metal 0.6 
	FRAME8Pre = ((((FRAMEA8 OR FRAMEB8) OR FRAMEC8) OR M8ExcHole) OR FRAMEB8_W2) OR FRAMEA8_45
	FRAME8PreRM = ((((((FRAMEA8RM OR FRAMEB8) OR FRAMEC8RM) OR M8ExcHole) OR FRAMEB8_W2) OR FRAMEB8_W1) OR FRAMEB8_W11) OR FRAMEA8RM_45
	
	#IFDEF CBM_OVER_M8
	    FRAME8 = (((((FRAME8Pre OR BLOCK8) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M8
	    FRAME8RM = ((((FRAME8PreRM OR BLOCK8) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M8
	#ELSE
        FRAME8 = ((((FRAME8Pre OR BLOCK8) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M8
	    FRAME8RM = (((FRAME8PreRM OR BLOCK8) OR NFILLRM) OR HVxx) OR OD_RDG_M8
	#ENDIF

//****************************************************************************

	D30M8p = (PUSH D30M8) NOT FRAME8
	O30M8pre = D30M8p AND CHIP
	FD21M8s = COPY FRAME8

	O30M8preA = SIZE O30M8pre BY - (DM8_303 + grid)
	O30M8preB = (SIZE O30M8preA BY (WM8_303 - grid) UNDEROVER TRUNCATE WM8_303) AND O30M8preA

	// 1st 2*2
	F303M8 = (RECTANGLES WM8_303 LM8_303 SM8_303 OFFSET OM8_303  INSIDE OF LAYER O30M8preB) NOT INTERACT IND_COIL_EXD

	
	F303M8_EXP = SIZE F303M8 BY ( WM8_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M8preF1 = O30M8pre NOT (SIZE F303M8_EXP BY (SM8_302 + grid))
	O30M8preF = (SNAP (SIZE O30M8preF1 BY -grid) 5) AND O30M8preF1

	B30M8pre = (INT O30M8preF >= WM8_301 <= maxW_DM8V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M8preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M8pre2 = RECTANGLE B30M8pre >= WM8_301 BY >= minL_DM8V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M8pre3 = RECTANGLE B30M8pre2 <= maxW_DM8V_3011 BY <= maxL_DM8V_3011 ORTHOGONAL ONLY

	B30M8 = (B30M8pre3 NOT INTERACT (EXT B30M8pre3 < SM8_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M8s = ((SIZE B30M8 BY (SM8_301 + grid)) OR FD21M8s) OR (SIZE F303M8_EXP BY (SM8_302 + grid))
	O30M8 = O30M8preF NOT B30M8s

	
	// 3rd, 0.5*1.2
	F302M8 = (RECTANGLES WM8_302 LM8_302 SM8_302 OFFSET OM8_302 INSIDE OF LAYER O30M8) NOT INTERACT IND_COIL_EXD
	F302M8s = (SIZE F302M8 BY (SM8_301 + grid)) OR B30M8s
	R302M8pre = O30M8 NOT F302M8s
	R302M8 = (SIZE R302M8pre BY (WM8_301/2 + grid) UNDEROVER TRUNCATE WM8_301) AND R302M8pre

	// 4th, 0.5*0.5
	F3012M8 = (RECTANGLES WM8_301 LM8_301 SM8_301 OFFSET OM8_301 INSIDE OF LAYER R302M8) NOT INTERACT IND_COIL_EXD
	F3012M8s = (SIZE F3012M8 BY (SM8_301 + grid)) OR F302M8s
	R3012M8pre = R302M8pre NOT F3012M8s
	R3012M8 = (SIZE R3012M8pre BY (WM8_301/2 + grid) UNDEROVER TRUNCATE WM8_301) AND R3012M8pre

	// 5th, regular 0.5*0.5
	F301M8 = (RECTANGLES WM8_301 LM8_301 SM8_301 INSIDE OF LAYER R3012M8) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M8s = (SIZE F301M8 BY (SM8_301 + grid)) OR F3012M8s

	F30M8 = (((B30M8 OR F302M8) OR F3012M8) OR F301M8) OR F303M8
	O40M8pre = (((PUSH D40M8) NOT FRAME8) NOT F301M8s) AND CHIP


	O40M8preA = SIZE O40M8pre BY - (DM8_403 + grid)
	O40M8preB = (SIZE O40M8preA BY (WM8_403 - grid) UNDEROVER TRUNCATE WM8_403) AND O40M8preA

	// 1st 2*2
	F403M8 = RECTANGLES WM8_403 LM8_403 SM8_403 OFFSET OM8_403  INSIDE OF LAYER O40M8preB

	
	F403M8_EXP = SIZE F403M8 BY ( WM8_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M8preF1 = O40M8pre NOT (SIZE F403M8_EXP BY (SM8_402 + grid))
	O40M8preF = (SNAP (SIZE O40M8preF1 BY -grid) 5) AND O40M8preF1

	B40M8pre = (INT O40M8preF >= WM8_401 <= maxW_DM8V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M8preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M8pre2 = RECTANGLE B40M8pre >= WM8_401 BY >= minL_DM8V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M8pre3 = RECTANGLE B40M8pre2 <= maxW_DM8V_4011 BY <= maxL_DM8V_4011 ORTHOGONAL ONLY

	B40M8 = (B40M8pre3 NOT INTERACT (EXT B40M8pre3 < SM8_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M8s = ((SIZE B40M8 BY (SM8_401 + grid)) OR F301M8s) OR (SIZE F403M8_EXP BY (SM8_402 + grid))
	O40M8 = O40M8preF NOT B40M8s

	
	// 3rd, 0.5*1.2
	F402M8 = (RECTANGLES WM8_402 LM8_402 SM8_402 OFFSET OM8_402 INSIDE OF LAYER O40M8) NOT INTERACT IND_COIL_EXD
	F402M8s = (SIZE F402M8 BY (SM8_401 + grid)) OR B40M8s
	R402M8pre = O40M8 NOT F402M8s
	R402M8 = (SIZE R402M8pre BY (WM8_401/2 + grid) UNDEROVER TRUNCATE WM8_401) AND R402M8pre

	// 4th, 0.5*0.5
	F4012M8 = (RECTANGLES WM8_401 LM8_401 SM8_401 OFFSET OM8_401 INSIDE OF LAYER R402M8) NOT INTERACT IND_COIL_EXD
	F4012M8s = (SIZE F4012M8 BY (SM8_401 + grid)) OR F402M8s
	R4012M8pre = R402M8pre NOT F4012M8s
	R4012M8 = (SIZE R4012M8pre BY (WM8_401/2 + grid) UNDEROVER TRUNCATE WM8_401) AND R4012M8pre

	// 5th, regular 0.5*0.5
	F401M8 = (RECTANGLES WM8_401 LM8_401 SM8_401 INSIDE OF LAYER R4012M8) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M8s = (SIZE F401M8 BY (SM8_401 + grid)) OR F4012M8s

	F40M8 = (((B40M8 OR F402M8) OR F4012M8) OR F401M8) OR F403M8
	O50M8pre = (((PUSH (D50M8 OR emptyM8)) NOT FRAME8) NOT F401M8s) AND CHIP


	O50M8preA = SIZE O50M8pre BY - (DM8_503 + grid)
	O50M8preB = (SIZE O50M8preA BY (WM8_503 - grid) UNDEROVER TRUNCATE WM8_503) AND O50M8preA

	// 1st 2*2
	F503M8 = RECTANGLES WM8_503 LM8_503 SM8_503 OFFSET OM8_503  INSIDE OF LAYER O50M8preB

	
	F503M8_EXP = SIZE F503M8 BY ( WM8_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M8preF1 = O50M8pre NOT (SIZE F503M8_EXP BY (SM8_502 + grid))
	O50M8preF = (SNAP (SIZE O50M8preF1 BY -grid) 5) AND O50M8preF1

	B50M8pre = (INT O50M8preF >= WM8_501 <= maxW_DM8V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M8preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M8pre2 = RECTANGLE B50M8pre >= WM8_501 BY >= minL_DM8V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M8pre3 = RECTANGLE B50M8pre2 <= maxW_DM8V_5011 BY <= maxL_DM8V_5011 ORTHOGONAL ONLY

	B50M8 = (B50M8pre3 NOT INTERACT (EXT B50M8pre3 < SM8_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M8s = ((SIZE B50M8 BY (SM8_501 + grid)) OR F401M8s) OR (SIZE F503M8_EXP BY (SM8_502 + grid))
	O50M8 = O50M8preF NOT B50M8s

	
	// 3rd, 0.5*1.2
	F502M8 = (RECTANGLES WM8_502 LM8_502 SM8_502 OFFSET OM8_502 INSIDE OF LAYER O50M8) NOT INTERACT IND_COIL_EXD
	F502M8s = (SIZE F502M8 BY (SM8_501 + grid)) OR B50M8s
	R502M8pre = O50M8 NOT F502M8s
	R502M8 = (SIZE R502M8pre BY (WM8_501/2 + grid) UNDEROVER TRUNCATE WM8_501) AND R502M8pre

	// 4th, 0.5*0.5
	F5012M8 = (RECTANGLES WM8_501 LM8_501 SM8_501 OFFSET OM8_501 INSIDE OF LAYER R502M8) NOT INTERACT IND_COIL_EXD
	F5012M8s = (SIZE F5012M8 BY (SM8_501 + grid)) OR F502M8s
	R5012M8pre = R502M8pre NOT F5012M8s
	R5012M8 = (SIZE R5012M8pre BY (WM8_501/2 + grid) UNDEROVER TRUNCATE WM8_501) AND R5012M8pre

	// 5th, regular 0.5*0.5
	F501M8 = (RECTANGLES WM8_501 LM8_501 SM8_501 INSIDE OF LAYER R5012M8) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M8s = (SIZE F501M8 BY (SM8_501 + grid)) OR F5012M8s

	F50M8 = (((B50M8 OR F502M8) OR F5012M8) OR F501M8) OR F503M8

//****************************************************************************
    
	exceedM8 = DENSITY M8x F30M8 F40M8 F50M8 > maxD_M8 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M8.den_exceed
	exceedM8DN2 = DENSITY M8x F30M8 F40M8 F50M8 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M8.DN.2.den_exceed

	removeM8R = ((PUSH (exceedM8 AND (D50M8 OR emptyM8))) NOT FRAME8) AND CHIP 
	removeM8 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM8R
	
	F30M8x = (F30M8 NOT INTERACT exceedM8DN2) NOT INTERACT removeM8
	F40M8x = (F40M8 NOT INTERACT exceedM8DN2) NOT INTERACT removeM8
	F50M8x = (F50M8 NOT INTERACT exceedM8DN2) NOT INTERACT removeM8
	FM8xA  = (F30M8x OR F40M8x) OR F50M8x
	FM8x   = FM8xA NOT INTERACT (EXT FM8xA < DM8_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM8
	lackM8 = DENSITY M8x FM8x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M8.den_lack
	RM8EXC = SIZE (((FM8x OR F303M8_EXP) OR F403M8_EXP) OR F503M8_EXP) BY (DM8_301 + grid)
	BigemptyM8 = PUSH ((SIZE emptyM8 BY 25 UNDEROVER) AND emptyM8)
    
	lackM8pRM = (((((PUSH lackM8) NOT RM8EXC) NOT BigemptyM8) NOT exceedM8) NOT FRAME8RM ) AND CHIP
	lackM8pRM_1 = WITH WIDTH lackM8pRM >= minWM8_304
        RM8p1 = RECTANGLES minWM8_304 minLM8_304 SM8_304 OFFSET OM8_304 INSIDE OF LAYER lackM8pRM_1
	lackM8pRM_2 = WITH WIDTH (lackM8pRM_1 NOT (SIZE RM8p1 BY (SM8_304 + grid))) >= minWM8_304
        RM8p2 = RECTANGLES minLM8_304 minWM8_304 SM8_304 OFFSET OM8_304 INSIDE OF LAYER lackM8pRM_2
        lackM8pRM_3pre = lackM8pRM_2 NOT (SIZE RM8p2 BY (SM8_304 + grid))
	lackM8pRM_3 = (SNAP (SIZE lackM8pRM_3pre BY -grid) 5) AND lackM8pRM_3pre 
	       
	RM8p3pre = (INT lackM8pRM_3 >= minWM8_304 <= maxWM8_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM8pRM_3 
	RM8p3pre2 = RECTANGLE RM8p3pre >= minWM8_304 BY >= minLM8_304 ORTHOGONAL ONLY// 0.13*0.6
	RM8p3 = RECTANGLE RM8p3pre2 <= maxWM8_304 BY <= maxLM8_304 ORTHOGONAL ONLY// 0.2*6

	RM8A = ((((RM8p1 OR RM8p2) OR RM8p3) OUTSIDE RM8EXC) OUTSIDE FRAME8RM) NOT INTERACT IND_COIL_EXD
	RM8F = RM8A NOT INTERACT (EXT RM8A < SM8_304 ABUT SINGULAR REGION)

#ENDIF

DM8F = COPY FM8x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM9

#IFDEF 34K_THICK_M9
	minOPENM9 = DENSITY M9x < minD_M9 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den
	emptyOPENM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M9Empty.den
        #IFDEF FILL_IN_SLOT
       	M9ExcHole  = COPY EMPTY	
        #ELSE
   	M9InnerHole = HOLES M9i INNER
	M9BigHole = SIZE M9InnerHole BY - excludeHoleSize/2
	M9ExcHole = (M9InnerHole OUTSIDE M9BigHole) NOT M9i
        #ENDIF	
        BLOCK9    = SIZE DM9EXCL BY (dm2DMEXCL + grid)
        FRAMEA9   = SIZE M9i BY (dm2M9 + grid)
	M9mid     = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i
	M9wide    = (SIZE M9mid BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i
	FRAMEB9   = SIZE M9wide BY (dm2WM9 + grid) // DM9 to 4.5um wide metal 3um
	FRAMEC9   = SIZE DUM9 BY (dm2DM9 + grid)    
	FRAME9Pre = ((FRAMEA9 OR FRAMEB9) OR FRAMEC9) OR M9ExcHole
	#IFDEF CBM_OVER_M9
        FRAME9 = ((((FRAME9Pre OR BLOCK9) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M9  
	#ELSE
	    FRAME9 = (((FRAME9Pre OR BLOCK9) OR NFILL) OR HVxx) OR OD_RDG_M9
	#ENDIF	
	OPENM9 = PUSH ((minOPENM9 OR emptyOPENM9) AND CHIP)
	FILL9 = OPENM9 NOT FRAME9
	FILLW9pre = SIZE FILL9 BY - (Wdm2M9 + grid)
	FILLW9 = (SIZE FILLW9pre BY (WdmW_M9 - grid) UNDEROVER TRUNCATE WdmW_M9) AND FILLW9pre
	M9FW = RECTANGLES WdmW_M9 WdmL_M9 WdmS_M9 OFFSET WdmO_M9 INSIDE OF LAYER FILLW9
	M9FW_EXP = SIZE M9FW BY (WdmS_M9 /2 + grid) OVERUNDER	// merge the gaps
	FILLM9pre = FILL9 NOT (SIZE M9FW_EXP BY (MdmS_M9 + grid))
	FILLM9 = (SIZE FILLM9pre BY (MdmW_M9 - grid) UNDEROVER TRUNCATE MdmW_M9) AND FILLM9pre
	M9F1 = RECTANGLES MdmW_M9 MdmL_M9 MdmS_M9 OFFSET MdmO_M9 INSIDE OF LAYER FILLM9
	M9R1pre = FILLM9pre NOT (SIZE M9F1 BY (dmS_M9 + grid))
	M9R1 = (SIZE M9R1pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R1pre

	M9F2 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R1
	M9R2pre = M9R1 NOT (SIZE M9F2 BY (dmS_M9 + grid))
	M9R2 = (SIZE M9R2pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R2pre

	M9F3 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R2
	M9R3pre = M9R2 NOT (SIZE M9F3 BY (dmS_M9 + grid))
	M9R3 = (SIZE M9R3pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R3pre
	
	M9F4 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 INSIDE OF LAYER M9R3 

	M9F = (((M9F1 OR M9F2) OR M9F3) OR M9F4) OR M9FW
	FM9 = M9F NOT INTERACT (EXT M9F < dmS_M9 ABUT SINGULAR REGION)

	maxOPENM9 = DENSITY M9x FM9 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Max.den
		       
	DM9F = FM9 OUTSIDE maxOPENM9

#ELSE
#IFDEF 12K_THICK_M9
	
	minOPENM9 = DENSITY M9x < minD_M9 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den
	emptyOPENM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M9Empty.den
#IFDEF FILL_IN_SLOT
       	M9ExcHole  = COPY EMPTY	
#ELSE
   	M9InnerHole = HOLES M9i INNER
	M9BigHole = SIZE M9InnerHole BY - excludeHoleSize/2 
	M9ExcHole = (M9InnerHole OUTSIDE M9BigHole) NOT M9i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK9 = SIZE DM9EXCL BY (dm2DMEXCL + grid)	// DM9 to DM9EXCL
    
        FRAMEA9 = SIZE M9i BY (dm2M9 + grid) // DM9 to metal
	M9mid = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i
	M9wide = (SIZE M9mid BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i
	FRAMEB9 = SIZE M9wide BY (dm2WM9 + grid) // DM9 to 4.5um wide metal, 1.5um
	FRAMEC9 = SIZE DUM9 BY (dm2DM9 + grid)   // ODM9 or DM9 to existed dummy metal 0.6um 
	FRAME9Pre = ((FRAMEA9 OR FRAMEB9) OR FRAMEC9) OR M9ExcHole
        #IFDEF CBM_OVER_M9
	   FRAME9 = ((((FRAME9Pre OR BLOCK9) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M9	// wrong setting will add nothing
        #ELSE 
	   FRAME9 = (((FRAME9Pre OR BLOCK9) OR NFILL) OR HVxx) OR OD_RDG_M9
        #ENDIF 

	OPENM9 = PUSH ((minOPENM9 OR emptyOPENM9) AND CHIP)
	FILL9 = OPENM9 NOT FRAME9
	FILLW9pre = SIZE FILL9 BY - (Wdm2M9 + grid)
	FILLW9 = (SIZE FILLW9pre BY (WdmW_M9 - grid) UNDEROVER TRUNCATE WdmW_M9) AND FILLW9pre
	M9FW = RECTANGLES WdmW_M9 WdmL_M9 WdmS_M9 OFFSET WdmO_M9 INSIDE OF LAYER FILLW9
	M9FW_EXP = SIZE M9FW BY (WdmS_M9 /2 + grid) OVERUNDER //merge the gaps 
	FILLM9pre = FILL9 NOT (SIZE M9FW_EXP BY (MdmS_M9 + grid))
	FILLM9 = (SIZE FILLM9pre BY (MdmW_M9 - grid) UNDEROVER TRUNCATE MdmW_M9) AND FILLM9pre
	M9F1 = RECTANGLES MdmW_M9 MdmL_M9 MdmS_M9 OFFSET MdmO_M9 INSIDE OF LAYER FILLM9
	M9R1pre = FILLM9pre NOT (SIZE M9F1 BY (dmS_M9 + grid))
	M9R1 = (SIZE M9R1pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R1pre

	M9F2 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R1
	M9R2pre = M9R1 NOT (SIZE M9F2 BY (dmS_M9 + grid))
	M9R2 = (SIZE M9R2pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R2pre

	M9F3 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R2
	M9R3pre = M9R2 NOT (SIZE M9F3 BY (dmS_M9 + grid))
	M9R3 = (SIZE M9R3pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R3pre
	
	M9F4 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 INSIDE OF LAYER M9R3

	M9F = (((M9F1 OR M9F2) OR M9F3) OR M9F4) OR M9FW
	FM9 = M9F NOT INTERACT (EXT M9F < dmS_M9 ABUT SINGULAR REGION)
    
	maxOPENM9 = DENSITY M9x FM9 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Max.den
		       
	FM9F = FM9 OUTSIDE maxOPENM9

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M9 = DENSITY M9x FM9F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den

	RM9EXC = SIZE FM9F BY (Odm2DM9 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M9pM = ((((PUSH D25M9) NOT FRAME9) NOT RM9EXC) NOT CTMDMY) AND CHIP
	D25M9pM_1 = (SIZE D25M9pM BY (OdmW_M9 /2 - grid) UNDEROVER TRUNCATE OdmW_M9) AND D25M9pM 
		
	RM9p1 = RECTANGLES OdmW_M9 OdmL_M9 OdmS_M9 INSIDE OF LAYER D25M9pM_1
	D25M9pM_2 = D25M9pM_1 NOT (SIZE RM9p1 BY (OdmS_M9 + grid))
	RM9p2 = RECTANGLES OdmL_M9 OdmW_M9 OdmS_M9 INSIDE OF LAYER D25M9pM_2

	D25M9pM_3pre = D25M9pM_2 NOT (SIZE RM9p2 BY (OdmS_M9 + grid))
	D25M9pM_3 = (SNAP (SIZE D25M9pM_3pre BY -grid) 5) AND D25M9pM_3pre
	RM9p3a = (INT D25M9pM_3 >=OdmW_M9 <=maxOdmW_M9 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M9pM_3 
	RM9p3b = RECTANGLE RM9p3a >= OdmW_M9 BY >= OdmL_M9 ORTHOGONAL ONLY // 1*1.44
	RM9p3  = RECTANGLE RM9p3b <= maxOdmW_M9 BY <= maxOdmL_M9 ORTHOGONAL ONLY// 1.5*6
	RM9A = (((RM9p1 OR RM9p2) OR RM9p3) OUTSIDE RM9EXC) OUTSIDE FRAME9
	RM9  = RM9A NOT INTERACT (EXT RM9A < OdmS_M9 ABUT SINGULAR REGION)
	
	DM9F = FM9F OR RM9

#ELSE
#IFDEF 9K_THICK_M9
	minOPENM9 = DENSITY M9x < minD_M9 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den
	emptyOPENM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M9Empty.den

#IFDEF FILL_IN_SLOT
       	M9ExcHole  = COPY EMPTY	
#ELSE
   	M9InnerHole = HOLES M9i INNER
	M9BigHole = SIZE M9InnerHole BY - excludeHoleSize/2 
	M9ExcHole = (M9InnerHole OUTSIDE M9BigHole) NOT M9i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK9 = SIZE DM9EXCL BY (dm2DMEXCL + grid)	// DM9 to DM9EXCL
	FRAMEA9 = SIZE M9i BY (dm2M9 + grid) // DM9 to metal

    
	M9mid = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i
	M9wide = (SIZE M9mid BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i
	FRAMEB9 = SIZE M9wide BY (dm2WM9 + grid) // DM9 to 4.5um wide metal, 1.5um
	FRAMEC9 = SIZE DUM9 BY (dm2DM9 + grid)   // DM9 to existed dummy metal 0.6um 
	FRAME9Pre = ((FRAMEA9 OR FRAMEB9) OR FRAMEC9) OR M9ExcHole
	#IFDEF CBM_OVER_M9
	    FRAME9 = (((((FRAME9Pre OR BLOCK9) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M9
	#ELSE
	    FRAME9 = ((((FRAME9Pre OR BLOCK9) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M9
    #ENDIF    
	OPENM9 = PUSH ((minOPENM9 OR emptyOPENM9) AND CHIP)
    #IFDEF CBM_OVER_M8
        CTMDMY_BLOCK1 = SIZE M9x_CTMDMY BY (dm2M9_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
        TFRDUMMY_BLOCK9_1 = SIZE M9x_TFRDMY_8 BY (dm2M9_TFRDMY + grid)
        TFRDUMMY_BLOCK9 = TFRDUMMY_BLOCK9_1 OR TFRDUMMY_8
	    FILL9 = ((OPENM9 NOT FRAME9) NOT CTMDMY_BLOCK) NOT TFRDUMMY_BLOCK9
	#ELSE
        TFRDUMMY_BLOCK9_1 = SIZE M9x_TFRDMY_8 BY (dm2M9_TFRDMY + grid)
        TFRDUMMY_BLOCK9 = TFRDUMMY_BLOCK9_1 OR TFRDUMMY_8
        FILL9 = (OPENM9 NOT FRAME9) NOT TFRDUMMY_BLOCK9
    #ENDIF

	FILLW9pre = SIZE FILL9 BY - (Wdm2M9 + grid)
	FILLW9 = (SIZE FILLW9pre BY (WdmW_M9 - grid) UNDEROVER TRUNCATE WdmW_M9) AND FILLW9pre
	M9FW = RECTANGLES WdmW_M9 WdmL_M9 WdmS_M9 OFFSET WdmO_M9 INSIDE OF LAYER FILLW9
	M9FW_EXP = SIZE M9FW BY (WdmS_M9 /2 + grid) OVERUNDER //merge the gaps 
	FILLM9pre = FILL9 NOT (SIZE M9FW_EXP BY (MdmS_M9 + grid))
	FILLM9 = (SIZE FILLM9pre BY (MdmW_M9 - grid) UNDEROVER TRUNCATE MdmW_M9) AND FILLM9pre
	M9F1 = RECTANGLES MdmW_M9 MdmL_M9 MdmS_M9 OFFSET MdmO_M9 INSIDE OF LAYER FILLM9
	M9R1pre = FILLM9pre NOT (SIZE M9F1 BY (dmS_M9 + grid))
	M9R1 = (SIZE M9R1pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R1pre

	M9F2 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R1
	M9R2pre = M9R1 NOT (SIZE M9F2 BY (dmS_M9 + grid))
	M9R2 = (SIZE M9R2pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R2pre

	M9F3 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R2
	M9R3pre = M9R2 NOT (SIZE M9F3 BY (dmS_M9 + grid))
	M9R3 = (SIZE M9R3pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R3pre
	
	M9F4 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 INSIDE OF LAYER M9R3

	M9F = ((((M9F1 OR M9F2) OR M9F3) OR M9F4) OR M9FW) NOT INTERACT IND_COIL_EXD
	FM9 = M9F NOT INTERACT (EXT M9F < dmS_M9 ABUT SINGULAR REGION)
    
	maxOPENM9 = DENSITY M9x FM9 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Max.den
		       
	FM9F = FM9 OUTSIDE maxOPENM9

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M9 = DENSITY M9x FM9F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den

	RM9EXC = SIZE FM9F BY (Odm2DM9 + grid)
// do not fill DMz_S over CTMDMY 
	D25M9pM = (((((PUSH D25M9) NOT FRAME9) NOT RM9EXC) NOT CTMDMY) NOT TFRDUMMY_8) AND CHIP
	D25M9pM_1 = (SIZE D25M9pM BY (OdmW_M9 /2 - grid) UNDEROVER TRUNCATE OdmW_M9) AND D25M9pM 

	RM9p1 = RECTANGLES OdmW_M9 OdmL_M9 OdmS_M9 INSIDE OF LAYER D25M9pM_1
	D25M9pM_2 = D25M9pM_1 NOT (SIZE RM9p1 BY (OdmS_M9 + grid))
	RM9p2 = RECTANGLES OdmL_M9 OdmW_M9 OdmS_M9 INSIDE OF LAYER D25M9pM_2

	D25M9pM_3pre = D25M9pM_2 NOT (SIZE RM9p2 BY (OdmS_M9 + grid))
	D25M9pM_3 = (SNAP (SIZE D25M9pM_3pre BY -grid) 5) AND D25M9pM_3pre
	RM9p3a = (INT D25M9pM_3 >=OdmW_M9 <=maxOdmW_M9 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M9pM_3 
	RM9p3b = RECTANGLE RM9p3a >= OdmW_M9 BY >= OdmL_M9 ORTHOGONAL ONLY// 0.4*1.42
	RM9p3  = RECTANGLE RM9p3b <= maxOdmW_M9 BY <= maxOdmL_M9 ORTHOGONAL ONLY// 1.5*6
	RM9A = ((((RM9p1 OR RM9p2) OR RM9p3) OUTSIDE RM9EXC) OUTSIDE FRAME9) NOT INTERACT IND_COIL_EXD
	RM9  = RM9A NOT INTERACT (EXT RM9A < OdmS_M9 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M8
        FILLM9_CTMDMY = (CTMDMY NOT (SIZE ((FM9F OR RM9) OR (M9x NOT OUTSIDE CTMDMY)) BY (dmS_M9_CTMDMY + grid))) NOT FRAME9
 	    M9F1_CTMDMY = RECTANGLES WdmW_M9 WdmL_M9 dmS_M9_CTMDMY OFFSET WdmO_M9 INSIDE OF LAYER FILLM9_CTMDMY
        M9R1_CTMDMY = FILLM9_CTMDMY NOT (SIZE M9F1_CTMDMY BY (dmS_M9_CTMDMY + grid))
        M9F2_CTMDMY = RECTANGLES WdmW_M9 WdmL_M9 dmS_M9_CTMDMY OFFSET WdmO_M9 INSIDE OF LAYER M9R1_CTMDMY
        M9R2_CTMDMY = WITH WIDTH (M9R1_CTMDMY NOT (SIZE M9F2_CTMDMY BY (dmS_M9_CTMDMY + grid))) >= min_dmW_M9_CTMDMY
        M9F3_CTMDMY = RECTANGLES min_dmW_M9_CTMDMY min_dmW_M9_CTMDMY dmS_M9_CTMDMY OFFSET dmO_M9 INSIDE OF LAYER M9R2_CTMDMY
	    M9R3_CTMDMY = WITH WIDTH (M9R2_CTMDMY NOT (SIZE M9F3_CTMDMY BY (dmS_M9_CTMDMY + grid))) >= min_dmW_M9_CTMDMY
        M9F4_CTMDMY = RECTANGLES min_dmW_M9_CTMDMY min_dmW_M9_CTMDMY dmS_M9_CTMDMY OFFSET dmO_M9 INSIDE OF LAYER M9R3_CTMDMY
	    M9F_CTMDMY_A = ((M9F1_CTMDMY OR M9F2_CTMDMY) OR M9F3_CTMDMY) OR  M9F4_CTMDMY
	    M9F_CTMDMY = M9F_CTMDMY_A NOT INTERACT (EXT M9F_CTMDMY_A < dmS_M9_CTMDMY ABUT SINGULAR REGION)
	    DM9F_pre = (FM9F OR RM9) OR M9F_CTMDMY
    #ELSE
        DM9F_pre = FM9F OR RM9
    #ENDIF
        FILLM9_TFRDMY = (TFRDUMMY_8 NOT (SIZE ((FM9F OR RM9) OR (M9x NOT OUTSIDE TFRDUMMY_8)) BY (dmS_M9_TFRDMY + grid))) NOT FRAME9
     	M9F1_TFRDMY = RECTANGLES dmW_M9_TFRDMY dmL_M9_TFRDMY dmS_M9_TFRDMY OFFSET dmO_M9_TFRDMY INSIDE OF LAYER FILLM9_TFRDMY
        M9R1_TFRDMY = FILLM9_TFRDMY NOT (SIZE M9F1_TFRDMY BY (dmS_M9_TFRDMY + grid))
        M9F2_TFRDMY = RECTANGLES dmW_M9_TFRDMY dmL_M9_TFRDMY dmS_M9_TFRDMY OFFSET dmO_M9_TFRDMY INSIDE OF LAYER M9R1_TFRDMY
        M9R2_TFRDMY = M9R1_TFRDMY NOT (SIZE M9F2_TFRDMY BY (dmS_M9_TFRDMY + grid))
        M9F3_TFRDMY = RECTANGLES dmW_M9_TFRDMY dmL_M9_TFRDMY dmS_M9_TFRDMY OFFSET dmO_M9_TFRDMY INSIDE OF LAYER M9R2_TFRDMY
        M9R3_TFRDMY = M9R2_TFRDMY NOT (SIZE M9F3_TFRDMY BY (dmS_M9_TFRDMY + grid))
        M9F4_TFRDMY = RECTANGLES dmW_M9_TFRDMY dmL_M9_TFRDMY dmS_M9_TFRDMY OFFSET dmO_M9_TFRDMY INSIDE OF LAYER M9R3_TFRDMY
	    M9F_TFRDMY_A = ((M9F1_TFRDMY OR M9F2_TFRDMY) OR M9F3_TFRDMY) OR  M9F4_TFRDMY
	    M9F_TFRDMY = M9F_TFRDMY_A NOT INTERACT (EXT M9F_TFRDMY_A < dmS_M9_TFRDMY ABUT SINGULAR REGION)
        DM9F = DM9F_pre OR M9F_TFRDMY
#ELSE	
#IFDEF 5K_THICK_M9
	minOPENM9 = DENSITY M9x < minD_M9 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den
	emptyOPENM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M9Empty.den

#IFDEF FILL_IN_SLOT
       	M9ExcHole  = COPY EMPTY	
#ELSE
   	M9InnerHole = HOLES M9i INNER
	M9BigHole = SIZE M9InnerHole BY - excludeHoleSize/2 
	M9ExcHole = (M9InnerHole OUTSIDE M9BigHole) NOT M9i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK9 = SIZE DM9EXCL BY (dm2DMEXCL + grid)	// DM9 to DM9EXCL
    
        FRAMEA9 = SIZE M9i BY (dm2M9 + grid) // DM9 to metal
	M9mid = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i
	M9wide = (SIZE M9mid BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i
	FRAMEB9 = SIZE M9wide BY (dm2WM9 + grid) // DM9 to 4.5um wide metal, 1.5um
	FRAMEC9 = SIZE DUM9 BY (dm2DM9 + grid)   // ODM9 or DM9 to existed dummy metal 0.6um 
	FRAME9Pre = ((FRAMEA9 OR FRAMEB9) OR FRAMEC9) OR M9ExcHole
	#IFDEF CBM_OVER_M9
	   FRAME9 = ((((FRAME9Pre OR BLOCK9) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M9
        #ELSE
	   FRAME9 = (((FRAME9Pre OR BLOCK9) OR NFILL) OR HVxx) OR OD_RDG_M9
        #ENDIF
	OPENM9 = PUSH ((minOPENM9 OR emptyOPENM9) AND CHIP)
	FILL9 = OPENM9 NOT FRAME9
	FILLW9pre = SIZE FILL9 BY - (Wdm2M9 + grid)
	FILLW9 = (SIZE FILLW9pre BY (WdmW_M9 - grid) UNDEROVER TRUNCATE WdmW_M9) AND FILLW9pre
	M9FW = RECTANGLES WdmW_M9 WdmL_M9 WdmS_M9 OFFSET WdmO_M9 INSIDE OF LAYER FILLW9
	M9FW_EXP = SIZE M9FW BY (WdmS_M9 /2 + grid) OVERUNDER //merge the gaps 
	FILLM9pre = FILL9 NOT (SIZE M9FW_EXP BY (MdmS_M9 + grid))
	FILLM9 = (SIZE FILLM9pre BY (MdmW_M9 - grid) UNDEROVER TRUNCATE MdmW_M9) AND FILLM9pre
	M9F1 = RECTANGLES MdmW_M9 MdmL_M9 MdmS_M9 OFFSET MdmO_M9 INSIDE OF LAYER FILLM9
	M9R1pre = FILLM9pre NOT (SIZE M9F1 BY (dmS_M9 + grid))
	M9R1 = (SIZE M9R1pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R1pre

	M9F2 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R1
	M9R2pre = M9R1 NOT (SIZE M9F2 BY (dmS_M9 + grid))
	M9R2 = (SIZE M9R2pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R2pre

	M9F3 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 OFFSET dmO_M9 INSIDE OF LAYER M9R2
	M9R3pre = M9R2 NOT (SIZE M9F3 BY (dmS_M9 + grid))
	M9R3 = (SIZE M9R3pre BY (dmW_M9/2 - grid) UNDEROVER TRUNCATE dmW_M9) AND M9R3pre
	
	M9F4 = RECTANGLES dmW_M9 dmL_M9 dmS_M9 INSIDE OF LAYER M9R3

	M9F = (((M9F1 OR M9F2) OR M9F3) OR M9F4) OR M9FW
	FM9 = M9F NOT INTERACT (EXT M9F < dmS_M9 ABUT SINGULAR REGION)
    
	maxOPENM9 = DENSITY M9x FM9 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Max.den
		       
	FM9F = FM9 OUTSIDE maxOPENM9

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M9 = DENSITY M9x FM9F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den

	RM9EXC = SIZE FM9F BY (Odm2DM9 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M9pM = ((((PUSH D25M9) NOT FRAME9) NOT RM9EXC) NOT CTMDMY) AND CHIP
	D25M9pM_1 = (SIZE D25M9pM BY (OdmW_M9 /2 - grid) UNDEROVER TRUNCATE OdmW_M9) AND D25M9pM 
		
	RM9p1 = RECTANGLES OdmW_M9 OdmL_M9 OdmS_M9 INSIDE OF LAYER D25M9pM_1
	D25M9pM_2 = D25M9pM_1 NOT (SIZE RM9p1 BY (OdmS_M9 + grid))
	RM9p2 = RECTANGLES OdmL_M9 OdmW_M9 OdmS_M9 INSIDE OF LAYER D25M9pM_2

	D25M9pM_3pre = D25M9pM_2 NOT (SIZE RM9p2 BY (OdmS_M9 + grid))
	D25M9pM_3 = (SNAP (SIZE D25M9pM_3pre BY -grid) 5) AND D25M9pM_3pre
	RM9p3a = (INT D25M9pM_3 >=OdmW_M9 <=maxOdmW_M9 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M9pM_3 
	RM9p3b = RECTANGLE RM9p3a >= OdmW_M9 BY >= OdmL_M9 ORTHOGONAL ONLY// 0.8*1.42
	RM9p3  = RECTANGLE RM9p3b <= maxOdmW_M9 BY <= maxOdmL_M9 ORTHOGONAL ONLY// 1.5*6
	RM9A = (((RM9p1 OR RM9p2) OR RM9p3) OUTSIDE RM9EXC) OUTSIDE FRAME9
	RM9  = RM9A NOT INTERACT (EXT RM9A < OdmS_M9 ABUT SINGULAR REGION)
	
	DM9F = FM9F OR RM9

#ELSE
	D30M9 = DENSITY M9x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M9.den30
	D40M9 = DENSITY M9x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M9.den40
	D50M9 = DENSITY M9x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M9.den50
	emptyM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M9.den_empty

#IFDEF FILL_IN_SLOT
       	M9ExcHole  = COPY EMPTY	
#ELSE
   	M9InnerHole = HOLES M9i INNER
	M9BigHole = SIZE M9InnerHole BY - excludeHoleSize/2 
	M9ExcHole = (M9InnerHole OUTSIDE M9BigHole) NOT M9i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK9 = SIZE DM9EXCL BY (dm2DMEXCL + grid)	// DM9 to DM9EXCL
	
        FRAMEA9 = SIZE M9i BY (DM9_301 + grid)	  // DM9 to real metal
        FRAMEA9RM = SIZE M9i BY (DM9_304 + grid)	  // RM9 to real metal

	FRAMEA9_45 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (DM945_301 + grid) // DM9 to 45 degree metal
	FRAMEA9RM_45 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (DM945_304 + grid) // DM9 to 45 degree real metal
        
	M9mid = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i
	
	M9wide_W1 = (SIZE M9mid BY wideM9_W1/2 UNDEROVER TRUNCATE wideM9_W1/2) AND M9i	
	M9wide_W11 = (SIZE M9wide_W1 BY wideM9_W11/2 UNDEROVER TRUNCATE wideM9_W11/2) AND M9i
	M9wide_W2 = (SIZE M9wide_W1 BY wideM9_W2/2 UNDEROVER TRUNCATE wideM9_W2/2) AND M9i
	M9wide = (SIZE M9wide_W2 BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i

	FRAMEB9 = SIZE M9wide BY (dm2WM9 + grid) // DM9 to wide metal 4.5
	FRAMEB9_W2 = SIZE M9wide_W2 BY (dm2WM9_W2 + grid) // DM9 to 1.5um wide metal 0.5
	FRAMEB9_W1 = SIZE M9wide_W1 BY (dm2WM9_W1 + grid) // DM9 to 0.21um wide metal
	FRAMEB9_W11 = SIZE M9wide_W11 BY (dm2WM9_W11 + grid) // DM9 to 0.38um wide metal
    
	FRAMEC9 = SIZE DUM9 BY (dm2DM9 + grid)   // DM9 to existed dummy metal 0.4
	FRAMEC9RM = SIZE DUM9 BY (Odm2DM9 + grid)   // ODM9 to existed dummy metal 0.6 
	FRAME9Pre = ((((FRAMEA9 OR FRAMEB9) OR FRAMEC9) OR M9ExcHole) OR FRAMEB9_W2) OR FRAMEA9_45
	FRAME9PreRM = ((((((FRAMEA9RM OR FRAMEB9) OR FRAMEC9RM) OR M9ExcHole) OR FRAMEB9_W2) OR FRAMEB9_W1) OR FRAMEB9_W11) OR FRAMEA9RM_45
	
	#IFDEF CBM_OVER_M9
	    FRAME9 = (((((FRAME9Pre OR BLOCK9) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M9
	    FRAME9RM = ((((FRAME9PreRM OR BLOCK9) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M9
	#ELSE
        FRAME9 = ((((FRAME9Pre OR BLOCK9) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M9
	    FRAME9RM = (((FRAME9PreRM OR BLOCK9) OR NFILLRM) OR HVxx) OR OD_RDG_M9
	#ENDIF

//****************************************************************************

	D30M9p = (PUSH D30M9) NOT FRAME9
	O30M9pre = D30M9p AND CHIP
	FD21M9s = COPY FRAME9

	O30M9preA = SIZE O30M9pre BY - (DM9_303 + grid)
	O30M9preB = (SIZE O30M9preA BY (WM9_303 - grid) UNDEROVER TRUNCATE WM9_303) AND O30M9preA

	// 1st 2*2
	F303M9 = (RECTANGLES WM9_303 LM9_303 SM9_303 OFFSET OM9_303  INSIDE OF LAYER O30M9preB) NOT INTERACT IND_COIL_EXD

	
	F303M9_EXP = SIZE F303M9 BY ( WM9_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M9preF1 = O30M9pre NOT (SIZE F303M9_EXP BY (SM9_302 + grid))
	O30M9preF = (SNAP (SIZE O30M9preF1 BY -grid) 5) AND O30M9preF1

	B30M9pre = (INT O30M9preF >= WM9_301 <= maxW_DM9V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M9preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M9pre2 = RECTANGLE B30M9pre >= WM9_301 BY >= minL_DM9V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M9pre3 = RECTANGLE B30M9pre2 <= maxW_DM9V_3011 BY <= maxL_DM9V_3011 ORTHOGONAL ONLY

	B30M9 = (B30M9pre3 NOT INTERACT (EXT B30M9pre3 < SM9_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M9s = ((SIZE B30M9 BY (SM9_301 + grid)) OR FD21M9s) OR (SIZE F303M9_EXP BY (SM9_302 + grid))
	O30M9 = O30M9preF NOT B30M9s

	
	// 3rd, 0.5*1.2
	F302M9 = (RECTANGLES WM9_302 LM9_302 SM9_302 OFFSET OM9_302 INSIDE OF LAYER O30M9) NOT INTERACT IND_COIL_EXD
	F302M9s = (SIZE F302M9 BY (SM9_301 + grid)) OR B30M9s
	R302M9pre = O30M9 NOT F302M9s
	R302M9 = (SIZE R302M9pre BY (WM9_301/2 + grid) UNDEROVER TRUNCATE WM9_301) AND R302M9pre

	// 4th, 0.5*0.5
	F3012M9 = (RECTANGLES WM9_301 LM9_301 SM9_301 OFFSET OM9_301 INSIDE OF LAYER R302M9) NOT INTERACT IND_COIL_EXD
	F3012M9s = (SIZE F3012M9 BY (SM9_301 + grid)) OR F302M9s
	R3012M9pre = R302M9pre NOT F3012M9s
	R3012M9 = (SIZE R3012M9pre BY (WM9_301/2 + grid) UNDEROVER TRUNCATE WM9_301) AND R3012M9pre

	// 5th, regular 0.5*0.5
	F301M9 = (RECTANGLES WM9_301 LM9_301 SM9_301 INSIDE OF LAYER R3012M9) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M9s = (SIZE F301M9 BY (SM9_301 + grid)) OR F3012M9s

	F30M9 = (((B30M9 OR F302M9) OR F3012M9) OR F301M9) OR F303M9
	O40M9pre = (((PUSH D40M9) NOT FRAME9) NOT F301M9s) AND CHIP


	O40M9preA = SIZE O40M9pre BY - (DM9_403 + grid)
	O40M9preB = (SIZE O40M9preA BY (WM9_403 - grid) UNDEROVER TRUNCATE WM9_403) AND O40M9preA

	// 1st 2*2
	F403M9 = RECTANGLES WM9_403 LM9_403 SM9_403 OFFSET OM9_403  INSIDE OF LAYER O40M9preB

	
	F403M9_EXP = SIZE F403M9 BY ( WM9_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M9preF1 = O40M9pre NOT (SIZE F403M9_EXP BY (SM9_402 + grid))
	O40M9preF = (SNAP (SIZE O40M9preF1 BY -grid) 5) AND O40M9preF1

	B40M9pre = (INT O40M9preF >= WM9_401 <= maxW_DM9V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M9preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M9pre2 = RECTANGLE B40M9pre >= WM9_401 BY >= minL_DM9V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M9pre3 = RECTANGLE B40M9pre2 <= maxW_DM9V_4011 BY <= maxL_DM9V_4011 ORTHOGONAL ONLY

	B40M9 = (B40M9pre3 NOT INTERACT (EXT B40M9pre3 < SM9_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M9s = ((SIZE B40M9 BY (SM9_401 + grid)) OR F301M9s) OR (SIZE F403M9_EXP BY (SM9_402 + grid))
	O40M9 = O40M9preF NOT B40M9s

	
	// 3rd, 0.5*1.2
	F402M9 = (RECTANGLES WM9_402 LM9_402 SM9_402 OFFSET OM9_402 INSIDE OF LAYER O40M9) NOT INTERACT IND_COIL_EXD
	F402M9s = (SIZE F402M9 BY (SM9_401 + grid)) OR B40M9s
	R402M9pre = O40M9 NOT F402M9s
	R402M9 = (SIZE R402M9pre BY (WM9_401/2 + grid) UNDEROVER TRUNCATE WM9_401) AND R402M9pre

	// 4th, 0.5*0.5
	F4012M9 = (RECTANGLES WM9_401 LM9_401 SM9_401 OFFSET OM9_401 INSIDE OF LAYER R402M9) NOT INTERACT IND_COIL_EXD
	F4012M9s = (SIZE F4012M9 BY (SM9_401 + grid)) OR F402M9s
	R4012M9pre = R402M9pre NOT F4012M9s
	R4012M9 = (SIZE R4012M9pre BY (WM9_401/2 + grid) UNDEROVER TRUNCATE WM9_401) AND R4012M9pre

	// 5th, regular 0.5*0.5
	F401M9 = (RECTANGLES WM9_401 LM9_401 SM9_401 INSIDE OF LAYER R4012M9) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M9s = (SIZE F401M9 BY (SM9_401 + grid)) OR F4012M9s

	F40M9 = (((B40M9 OR F402M9) OR F4012M9) OR F401M9) OR F403M9
	O50M9pre = (((PUSH (D50M9 OR emptyM9)) NOT FRAME9) NOT F401M9s) AND CHIP


	O50M9preA = SIZE O50M9pre BY - (DM9_503 + grid)
	O50M9preB = (SIZE O50M9preA BY (WM9_503 - grid) UNDEROVER TRUNCATE WM9_503) AND O50M9preA

	// 1st 2*2
	F503M9 = RECTANGLES WM9_503 LM9_503 SM9_503 OFFSET OM9_503  INSIDE OF LAYER O50M9preB

	
	F503M9_EXP = SIZE F503M9 BY ( WM9_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M9preF1 = O50M9pre NOT (SIZE F503M9_EXP BY (SM9_502 + grid))
	O50M9preF = (SNAP (SIZE O50M9preF1 BY -grid) 5) AND O50M9preF1

	B50M9pre = (INT O50M9preF >= WM9_501 <= maxW_DM9V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M9preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M9pre2 = RECTANGLE B50M9pre >= WM9_501 BY >= minL_DM9V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M9pre3 = RECTANGLE B50M9pre2 <= maxW_DM9V_5011 BY <= maxL_DM9V_5011 ORTHOGONAL ONLY

	B50M9 = (B50M9pre3 NOT INTERACT (EXT B50M9pre3 < SM9_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M9s = ((SIZE B50M9 BY (SM9_501 + grid)) OR F401M9s) OR (SIZE F503M9_EXP BY (SM9_502 + grid))
	O50M9 = O50M9preF NOT B50M9s

	
	// 3rd, 0.5*1.2
	F502M9 = (RECTANGLES WM9_502 LM9_502 SM9_502 OFFSET OM9_502 INSIDE OF LAYER O50M9) NOT INTERACT IND_COIL_EXD
	F502M9s = (SIZE F502M9 BY (SM9_501 + grid)) OR B50M9s
	R502M9pre = O50M9 NOT F502M9s
	R502M9 = (SIZE R502M9pre BY (WM9_501/2 + grid) UNDEROVER TRUNCATE WM9_501) AND R502M9pre

	// 4th, 0.5*0.5
	F5012M9 = (RECTANGLES WM9_501 LM9_501 SM9_501 OFFSET OM9_501 INSIDE OF LAYER R502M9) NOT INTERACT IND_COIL_EXD
	F5012M9s = (SIZE F5012M9 BY (SM9_501 + grid)) OR F502M9s
	R5012M9pre = R502M9pre NOT F5012M9s
	R5012M9 = (SIZE R5012M9pre BY (WM9_501/2 + grid) UNDEROVER TRUNCATE WM9_501) AND R5012M9pre

	// 5th, regular 0.5*0.5
	F501M9 = (RECTANGLES WM9_501 LM9_501 SM9_501 INSIDE OF LAYER R5012M9) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M9s = (SIZE F501M9 BY (SM9_501 + grid)) OR F5012M9s

	F50M9 = (((B50M9 OR F502M9) OR F5012M9) OR F501M9) OR F503M9

//****************************************************************************
    
	exceedM9 = DENSITY M9x F30M9 F40M9 F50M9 > maxD_M9 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M9.den_exceed
	exceedM9DN2 = DENSITY M9x F30M9 F40M9 F50M9 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M9.DN.2.den_exceed

	removeM9R = ((PUSH (exceedM9 AND (D50M9 OR emptyM9))) NOT FRAME9) AND CHIP 
	removeM9 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM9R
	
	F30M9x = (F30M9 NOT INTERACT exceedM9DN2) NOT INTERACT removeM9
	F40M9x = (F40M9 NOT INTERACT exceedM9DN2) NOT INTERACT removeM9
	F50M9x = (F50M9 NOT INTERACT exceedM9DN2) NOT INTERACT removeM9
	FM9xA  = (F30M9x OR F40M9x) OR F50M9x
	FM9x   = FM9xA NOT INTERACT (EXT FM9xA < DM9_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM9
	lackM9 = DENSITY M9x FM9x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M9.den_lack
	RM9EXC = SIZE (((FM9x OR F303M9_EXP) OR F403M9_EXP) OR F503M9_EXP) BY (DM9_301 + grid)
	BigemptyM9 = PUSH ((SIZE emptyM9 BY 25 UNDEROVER) AND emptyM9)
    
	lackM9pRM = (((((PUSH lackM9) NOT RM9EXC) NOT BigemptyM9) NOT exceedM9) NOT FRAME9RM ) AND CHIP
	lackM9pRM_1 = WITH WIDTH lackM9pRM >= minWM9_304
	RM9p1 = RECTANGLES minLM9_304 minWM9_304 SM9_304 OFFSET OM9_304 INSIDE OF LAYER lackM9pRM_1
	lackM9pRM_2 = WITH WIDTH (lackM9pRM_1 NOT (SIZE RM9p1 BY (SM9_304 + grid))) >= minWM9_304
	RM9p2 = RECTANGLES minWM9_304 minLM9_304 SM9_304 OFFSET OM9_304 INSIDE OF LAYER lackM9pRM_2
        lackM9pRM_3pre = lackM9pRM_2 NOT (SIZE RM9p2 BY (SM9_304 + grid))
	lackM9pRM_3 = (SNAP (SIZE lackM9pRM_3pre BY -grid) 5) AND lackM9pRM_3pre 
	       
	RM9p3pre = (INT lackM9pRM_3 >= minWM9_304 <= maxWM9_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM9pRM_3 
	RM9p3pre2 = RECTANGLE RM9p3pre >= minWM9_304 BY >= minLM9_304 ORTHOGONAL ONLY// 0.13*0.6
	RM9p3 = RECTANGLE RM9p3pre2 <= maxWM9_304 BY <= maxLM9_304 ORTHOGONAL ONLY// 0.2*6

	RM9A = ((((RM9p1 OR RM9p2) OR RM9p3) OUTSIDE RM9EXC) OUTSIDE FRAME9RM) NOT INTERACT IND_COIL_EXD
	RM9F = RM9A NOT INTERACT (EXT RM9A < SM9_304 ABUT SINGULAR REGION)

#ENDIF

DM9F = COPY FM9x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM10

#IFDEF 34K_THICK_M10
	minOPENM10 = DENSITY M10x < minD_M10 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den
	emptyOPENM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M10Empty.den
        #IFDEF FILL_IN_SLOT
       	M10ExcHole  = COPY EMPTY	
        #ELSE
   	M10InnerHole = HOLES M10i INNER
	M10BigHole = SIZE M10InnerHole BY - excludeHoleSize/2
	M10ExcHole = (M10InnerHole OUTSIDE M10BigHole) NOT M10i
        #ENDIF	
        BLOCK10    = SIZE DM10EXCL BY (dm2DMEXCL + grid)
        FRAMEA10   = SIZE M10i BY (dm2M10 + grid)
	M10mid     = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i
	M10wide    = (SIZE M10mid BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i
	FRAMEB10   = SIZE M10wide BY (dm2WM10 + grid) // DM10 to 4.5um wide metal 3um
	FRAMEC10   = SIZE DUM10 BY (dm2DM10 + grid)    
	FRAME10Pre = ((FRAMEA10 OR FRAMEB10) OR FRAMEC10) OR M10ExcHole
	#IFDEF CBM_OVER_M10
        FRAME10 = ((((FRAME10Pre OR BLOCK10) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M10  
	#ELSE
	    FRAME10 = (((FRAME10Pre OR BLOCK10) OR NFILL) OR HVxx) OR OD_RDG_M10
	#ENDIF	
	OPENM10 = PUSH ((minOPENM10 OR emptyOPENM10) AND CHIP)
	FILL10 = OPENM10 NOT FRAME10
	FILLW10pre = SIZE FILL10 BY - (Wdm2M10 + grid)
	FILLW10 = (SIZE FILLW10pre BY (WdmW_M10 - grid) UNDEROVER TRUNCATE WdmW_M10) AND FILLW10pre
	M10FW = RECTANGLES WdmW_M10 WdmL_M10 WdmS_M10 OFFSET WdmO_M10 INSIDE OF LAYER FILLW10
	M10FW_EXP = SIZE M10FW BY (WdmS_M10 /2 + grid) OVERUNDER	// merge the gaps
	FILLM10pre = FILL10 NOT (SIZE M10FW_EXP BY (MdmS_M10 + grid))
	FILLM10 = (SIZE FILLM10pre BY (MdmW_M10 - grid) UNDEROVER TRUNCATE MdmW_M10) AND FILLM10pre
	M10F1 = RECTANGLES MdmW_M10 MdmL_M10 MdmS_M10 OFFSET MdmO_M10 INSIDE OF LAYER FILLM10
	M10R1pre = FILLM10pre NOT (SIZE M10F1 BY (dmS_M10 + grid))
	M10R1 = (SIZE M10R1pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R1pre

	M10F2 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R1
	M10R2pre = M10R1 NOT (SIZE M10F2 BY (dmS_M10 + grid))
	M10R2 = (SIZE M10R2pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R2pre

	M10F3 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R2
	M10R3pre = M10R2 NOT (SIZE M10F3 BY (dmS_M10 + grid))
	M10R3 = (SIZE M10R3pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R3pre
	
	M10F4 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 INSIDE OF LAYER M10R3 

	M10F = (((M10F1 OR M10F2) OR M10F3) OR M10F4) OR M10FW
	FM10 = M10F NOT INTERACT (EXT M10F < dmS_M10 ABUT SINGULAR REGION)

	maxOPENM10 = DENSITY M10x FM10 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Max.den
		       
	DM10F = FM10 OUTSIDE maxOPENM10

#ELSE
#IFDEF 12K_THICK_M10
	
	minOPENM10 = DENSITY M10x < minD_M10 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den
	emptyOPENM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M10Empty.den
#IFDEF FILL_IN_SLOT
       	M10ExcHole  = COPY EMPTY	
#ELSE
   	M10InnerHole = HOLES M10i INNER
	M10BigHole = SIZE M10InnerHole BY - excludeHoleSize/2 
	M10ExcHole = (M10InnerHole OUTSIDE M10BigHole) NOT M10i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK10 = SIZE DM10EXCL BY (dm2DMEXCL + grid)	// DM10 to DM10EXCL
    
        FRAMEA10 = SIZE M10i BY (dm2M10 + grid) // DM10 to metal
	M10mid = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i
	M10wide = (SIZE M10mid BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i
	FRAMEB10 = SIZE M10wide BY (dm2WM10 + grid) // DM10 to 4.5um wide metal, 1.5um
	FRAMEC10 = SIZE DUM10 BY (dm2DM10 + grid)   // ODM10 or DM10 to existed dummy metal 0.6um 
	FRAME10Pre = ((FRAMEA10 OR FRAMEB10) OR FRAMEC10) OR M10ExcHole
        #IFDEF CBM_OVER_M10
	   FRAME10 = ((((FRAME10Pre OR BLOCK10) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M10	// wrong setting will add nothing
        #ELSE 
	   FRAME10 = (((FRAME10Pre OR BLOCK10) OR NFILL) OR HVxx) OR OD_RDG_M10
        #ENDIF 

	OPENM10 = PUSH ((minOPENM10 OR emptyOPENM10) AND CHIP)
	FILL10 = OPENM10 NOT FRAME10
	FILLW10pre = SIZE FILL10 BY - (Wdm2M10 + grid)
	FILLW10 = (SIZE FILLW10pre BY (WdmW_M10 - grid) UNDEROVER TRUNCATE WdmW_M10) AND FILLW10pre
	M10FW = RECTANGLES WdmW_M10 WdmL_M10 WdmS_M10 OFFSET WdmO_M10 INSIDE OF LAYER FILLW10
	M10FW_EXP = SIZE M10FW BY (WdmS_M10 /2 + grid) OVERUNDER //merge the gaps 
	FILLM10pre = FILL10 NOT (SIZE M10FW_EXP BY (MdmS_M10 + grid))
	FILLM10 = (SIZE FILLM10pre BY (MdmW_M10 - grid) UNDEROVER TRUNCATE MdmW_M10) AND FILLM10pre
	M10F1 = RECTANGLES MdmW_M10 MdmL_M10 MdmS_M10 OFFSET MdmO_M10 INSIDE OF LAYER FILLM10
	M10R1pre = FILLM10pre NOT (SIZE M10F1 BY (dmS_M10 + grid))
	M10R1 = (SIZE M10R1pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R1pre

	M10F2 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R1
	M10R2pre = M10R1 NOT (SIZE M10F2 BY (dmS_M10 + grid))
	M10R2 = (SIZE M10R2pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R2pre

	M10F3 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R2
	M10R3pre = M10R2 NOT (SIZE M10F3 BY (dmS_M10 + grid))
	M10R3 = (SIZE M10R3pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R3pre
	
	M10F4 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 INSIDE OF LAYER M10R3

	M10F = (((M10F1 OR M10F2) OR M10F3) OR M10F4) OR M10FW
	FM10 = M10F NOT INTERACT (EXT M10F < dmS_M10 ABUT SINGULAR REGION)
    
	maxOPENM10 = DENSITY M10x FM10 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Max.den
		       
	FM10F = FM10 OUTSIDE maxOPENM10

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M10 = DENSITY M10x FM10F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den

	RM10EXC = SIZE FM10F BY (Odm2DM10 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M10pM = ((((PUSH D25M10) NOT FRAME10) NOT RM10EXC) NOT CTMDMY) AND CHIP
	D25M10pM_1 = (SIZE D25M10pM BY (OdmW_M10 /2 - grid) UNDEROVER TRUNCATE OdmW_M10) AND D25M10pM 
		
	RM10p1 = RECTANGLES OdmW_M10 OdmL_M10 OdmS_M10 INSIDE OF LAYER D25M10pM_1
	D25M10pM_2 = D25M10pM_1 NOT (SIZE RM10p1 BY (OdmS_M10 + grid))
	RM10p2 = RECTANGLES OdmL_M10 OdmW_M10 OdmS_M10 INSIDE OF LAYER D25M10pM_2

	D25M10pM_3pre = D25M10pM_2 NOT (SIZE RM10p2 BY (OdmS_M10 + grid))
	D25M10pM_3 = (SNAP (SIZE D25M10pM_3pre BY -grid) 5) AND D25M10pM_3pre
	RM10p3a = (INT D25M10pM_3 >=OdmW_M10 <=maxOdmW_M10 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M10pM_3 
	RM10p3b = RECTANGLE RM10p3a >= OdmW_M10 BY >= OdmL_M10 ORTHOGONAL ONLY // 1*1.44
	RM10p3  = RECTANGLE RM10p3b <= maxOdmW_M10 BY <= maxOdmL_M10 ORTHOGONAL ONLY// 1.5*6
	RM10A = (((RM10p1 OR RM10p2) OR RM10p3) OUTSIDE RM10EXC) OUTSIDE FRAME10
	RM10  = RM10A NOT INTERACT (EXT RM10A < OdmS_M10 ABUT SINGULAR REGION)
	
	DM10F = FM10F OR RM10

#ELSE
#IFDEF 9K_THICK_M10
	minOPENM10 = DENSITY M10x < minD_M10 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den
	emptyOPENM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M10Empty.den

#IFDEF FILL_IN_SLOT
       	M10ExcHole  = COPY EMPTY	
#ELSE
   	M10InnerHole = HOLES M10i INNER
	M10BigHole = SIZE M10InnerHole BY - excludeHoleSize/2 
	M10ExcHole = (M10InnerHole OUTSIDE M10BigHole) NOT M10i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK10 = SIZE DM10EXCL BY (dm2DMEXCL + grid)	// DM10 to DM10EXCL
	FRAMEA10 = SIZE M10i BY (dm2M10 + grid) // DM10 to metal

    
	M10mid = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i
	M10wide = (SIZE M10mid BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i
	FRAMEB10 = SIZE M10wide BY (dm2WM10 + grid) // DM10 to 4.5um wide metal, 1.5um
	FRAMEC10 = SIZE DUM10 BY (dm2DM10 + grid)   // DM10 to existed dummy metal 0.6um 
	FRAME10Pre = ((FRAMEA10 OR FRAMEB10) OR FRAMEC10) OR M10ExcHole
	#IFDEF CBM_OVER_M10
	    FRAME10 = (((((FRAME10Pre OR BLOCK10) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M10
	#ELSE
	    FRAME10 = ((((FRAME10Pre OR BLOCK10) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M10
    #ENDIF    
	OPENM10 = PUSH ((minOPENM10 OR emptyOPENM10) AND CHIP)
    #IFDEF CBM_OVER_M9
        CTMDMY_BLOCK1 = SIZE M10x_CTMDMY BY (dm2M10_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
	    FILL10 = (OPENM10 NOT FRAME10) NOT CTMDMY_BLOCK
	#ELSE
        FILL10 = OPENM10 NOT FRAME10
    #ENDIF

	FILLW10pre = SIZE FILL10 BY - (Wdm2M10 + grid)
	FILLW10 = (SIZE FILLW10pre BY (WdmW_M10 - grid) UNDEROVER TRUNCATE WdmW_M10) AND FILLW10pre
	M10FW = RECTANGLES WdmW_M10 WdmL_M10 WdmS_M10 OFFSET WdmO_M10 INSIDE OF LAYER FILLW10
	M10FW_EXP = SIZE M10FW BY (WdmS_M10 /2 + grid) OVERUNDER //merge the gaps 
	FILLM10pre = FILL10 NOT (SIZE M10FW_EXP BY (MdmS_M10 + grid))
	FILLM10 = (SIZE FILLM10pre BY (MdmW_M10 - grid) UNDEROVER TRUNCATE MdmW_M10) AND FILLM10pre
	M10F1 = RECTANGLES MdmW_M10 MdmL_M10 MdmS_M10 OFFSET MdmO_M10 INSIDE OF LAYER FILLM10
	M10R1pre = FILLM10pre NOT (SIZE M10F1 BY (dmS_M10 + grid))
	M10R1 = (SIZE M10R1pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R1pre

	M10F2 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R1
	M10R2pre = M10R1 NOT (SIZE M10F2 BY (dmS_M10 + grid))
	M10R2 = (SIZE M10R2pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R2pre

	M10F3 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R2
	M10R3pre = M10R2 NOT (SIZE M10F3 BY (dmS_M10 + grid))
	M10R3 = (SIZE M10R3pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R3pre
	
	M10F4 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 INSIDE OF LAYER M10R3

	M10F = ((((M10F1 OR M10F2) OR M10F3) OR M10F4) OR M10FW) NOT INTERACT IND_COIL_EXD
	FM10 = M10F NOT INTERACT (EXT M10F < dmS_M10 ABUT SINGULAR REGION)
    
	maxOPENM10 = DENSITY M10x FM10 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Max.den
		       
	FM10F = FM10 OUTSIDE maxOPENM10

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M10 = DENSITY M10x FM10F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den

	RM10EXC = SIZE FM10F BY (Odm2DM10 + grid)
// do not fill DMz_S over CTMDMY 
	D25M10pM = ((((PUSH D25M10) NOT FRAME10) NOT RM10EXC) NOT CTMDMY) AND CHIP
	D25M10pM_1 = (SIZE D25M10pM BY (OdmW_M10 /2 - grid) UNDEROVER TRUNCATE OdmW_M10) AND D25M10pM 

	RM10p1 = RECTANGLES OdmW_M10 OdmL_M10 OdmS_M10 INSIDE OF LAYER D25M10pM_1
	D25M10pM_2 = D25M10pM_1 NOT (SIZE RM10p1 BY (OdmS_M10 + grid))
	RM10p2 = RECTANGLES OdmL_M10 OdmW_M10 OdmS_M10 INSIDE OF LAYER D25M10pM_2

	D25M10pM_3pre = D25M10pM_2 NOT (SIZE RM10p2 BY (OdmS_M10 + grid))
	D25M10pM_3 = (SNAP (SIZE D25M10pM_3pre BY -grid) 5) AND D25M10pM_3pre
	RM10p3a = (INT D25M10pM_3 >=OdmW_M10 <=maxOdmW_M10 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M10pM_3 
	RM10p3b = RECTANGLE RM10p3a >= OdmW_M10 BY >= OdmL_M10 ORTHOGONAL ONLY// 0.4*1.42
	RM10p3  = RECTANGLE RM10p3b <= maxOdmW_M10 BY <= maxOdmL_M10 ORTHOGONAL ONLY// 1.5*6
	RM10A = ((((RM10p1 OR RM10p2) OR RM10p3) OUTSIDE RM10EXC) OUTSIDE FRAME10) NOT INTERACT IND_COIL_EXD
	RM10  = RM10A NOT INTERACT (EXT RM10A < OdmS_M10 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M9
        FILLM10_CTMDMY = (CTMDMY NOT (SIZE ((FM10F OR RM10) OR (M10x NOT OUTSIDE CTMDMY)) BY (dmS_M10_CTMDMY + grid))) NOT FRAME10
 	    M10F1_CTMDMY = RECTANGLES WdmW_M10 WdmL_M10 dmS_M10_CTMDMY OFFSET WdmO_M10 INSIDE OF LAYER FILLM10_CTMDMY
        M10R1_CTMDMY = FILLM10_CTMDMY NOT (SIZE M10F1_CTMDMY BY (dmS_M10_CTMDMY + grid))
        M10F2_CTMDMY = RECTANGLES WdmW_M10 WdmL_M10 dmS_M10_CTMDMY OFFSET WdmO_M10 INSIDE OF LAYER M10R1_CTMDMY
        M10R2_CTMDMY = WITH WIDTH (M10R1_CTMDMY NOT (SIZE M10F2_CTMDMY BY (dmS_M10_CTMDMY + grid))) >= min_dmW_M10_CTMDMY
        M10F3_CTMDMY = RECTANGLES min_dmW_M10_CTMDMY min_dmW_M10_CTMDMY dmS_M10_CTMDMY OFFSET dmO_M10 INSIDE OF LAYER M10R2_CTMDMY
	    M10R3_CTMDMY = WITH WIDTH (M10R2_CTMDMY NOT (SIZE M10F3_CTMDMY BY (dmS_M10_CTMDMY + grid))) >= min_dmW_M10_CTMDMY
        M10F4_CTMDMY = RECTANGLES min_dmW_M10_CTMDMY min_dmW_M10_CTMDMY dmS_M10_CTMDMY OFFSET dmO_M10 INSIDE OF LAYER M10R3_CTMDMY
	    M10F_CTMDMY_A = ((M10F1_CTMDMY OR M10F2_CTMDMY) OR M10F3_CTMDMY) OR  M10F4_CTMDMY
	    M10F_CTMDMY = M10F_CTMDMY_A NOT INTERACT (EXT M10F_CTMDMY_A < dmS_M10_CTMDMY ABUT SINGULAR REGION)
	    DM10F_pre = (FM10F OR RM10) OR M10F_CTMDMY
    #ELSE
        DM10F_pre = FM10F OR RM10
    #ENDIF
        DM10F = COPY DM10F_pre
#ELSE	
#IFDEF 5K_THICK_M10
	minOPENM10 = DENSITY M10x < minD_M10 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den
	emptyOPENM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M10Empty.den

#IFDEF FILL_IN_SLOT
       	M10ExcHole  = COPY EMPTY	
#ELSE
   	M10InnerHole = HOLES M10i INNER
	M10BigHole = SIZE M10InnerHole BY - excludeHoleSize/2 
	M10ExcHole = (M10InnerHole OUTSIDE M10BigHole) NOT M10i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK10 = SIZE DM10EXCL BY (dm2DMEXCL + grid)	// DM10 to DM10EXCL
    
        FRAMEA10 = SIZE M10i BY (dm2M10 + grid) // DM10 to metal
	M10mid = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i
	M10wide = (SIZE M10mid BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i
	FRAMEB10 = SIZE M10wide BY (dm2WM10 + grid) // DM10 to 4.5um wide metal, 1.5um
	FRAMEC10 = SIZE DUM10 BY (dm2DM10 + grid)   // ODM10 or DM10 to existed dummy metal 0.6um 
	FRAME10Pre = ((FRAMEA10 OR FRAMEB10) OR FRAMEC10) OR M10ExcHole
	#IFDEF CBM_OVER_M10
	   FRAME10 = ((((FRAME10Pre OR BLOCK10) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M10
        #ELSE
	   FRAME10 = (((FRAME10Pre OR BLOCK10) OR NFILL) OR HVxx) OR OD_RDG_M10
        #ENDIF
	OPENM10 = PUSH ((minOPENM10 OR emptyOPENM10) AND CHIP)
	FILL10 = OPENM10 NOT FRAME10
	FILLW10pre = SIZE FILL10 BY - (Wdm2M10 + grid)
	FILLW10 = (SIZE FILLW10pre BY (WdmW_M10 - grid) UNDEROVER TRUNCATE WdmW_M10) AND FILLW10pre
	M10FW = RECTANGLES WdmW_M10 WdmL_M10 WdmS_M10 OFFSET WdmO_M10 INSIDE OF LAYER FILLW10
	M10FW_EXP = SIZE M10FW BY (WdmS_M10 /2 + grid) OVERUNDER //merge the gaps 
	FILLM10pre = FILL10 NOT (SIZE M10FW_EXP BY (MdmS_M10 + grid))
	FILLM10 = (SIZE FILLM10pre BY (MdmW_M10 - grid) UNDEROVER TRUNCATE MdmW_M10) AND FILLM10pre
	M10F1 = RECTANGLES MdmW_M10 MdmL_M10 MdmS_M10 OFFSET MdmO_M10 INSIDE OF LAYER FILLM10
	M10R1pre = FILLM10pre NOT (SIZE M10F1 BY (dmS_M10 + grid))
	M10R1 = (SIZE M10R1pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R1pre

	M10F2 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R1
	M10R2pre = M10R1 NOT (SIZE M10F2 BY (dmS_M10 + grid))
	M10R2 = (SIZE M10R2pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R2pre

	M10F3 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 OFFSET dmO_M10 INSIDE OF LAYER M10R2
	M10R3pre = M10R2 NOT (SIZE M10F3 BY (dmS_M10 + grid))
	M10R3 = (SIZE M10R3pre BY (dmW_M10/2 - grid) UNDEROVER TRUNCATE dmW_M10) AND M10R3pre
	
	M10F4 = RECTANGLES dmW_M10 dmL_M10 dmS_M10 INSIDE OF LAYER M10R3

	M10F = (((M10F1 OR M10F2) OR M10F3) OR M10F4) OR M10FW
	FM10 = M10F NOT INTERACT (EXT M10F < dmS_M10 ABUT SINGULAR REGION)
    
	maxOPENM10 = DENSITY M10x FM10 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Max.den
		       
	FM10F = FM10 OUTSIDE maxOPENM10

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M10 = DENSITY M10x FM10F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den

	RM10EXC = SIZE FM10F BY (Odm2DM10 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M10pM = ((((PUSH D25M10) NOT FRAME10) NOT RM10EXC) NOT CTMDMY) AND CHIP
	D25M10pM_1 = (SIZE D25M10pM BY (OdmW_M10 /2 - grid) UNDEROVER TRUNCATE OdmW_M10) AND D25M10pM 
		
	RM10p1 = RECTANGLES OdmW_M10 OdmL_M10 OdmS_M10 INSIDE OF LAYER D25M10pM_1
	D25M10pM_2 = D25M10pM_1 NOT (SIZE RM10p1 BY (OdmS_M10 + grid))
	RM10p2 = RECTANGLES OdmL_M10 OdmW_M10 OdmS_M10 INSIDE OF LAYER D25M10pM_2

	D25M10pM_3pre = D25M10pM_2 NOT (SIZE RM10p2 BY (OdmS_M10 + grid))
	D25M10pM_3 = (SNAP (SIZE D25M10pM_3pre BY -grid) 5) AND D25M10pM_3pre
	RM10p3a = (INT D25M10pM_3 >=OdmW_M10 <=maxOdmW_M10 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M10pM_3 
	RM10p3b = RECTANGLE RM10p3a >= OdmW_M10 BY >= OdmL_M10 ORTHOGONAL ONLY// 0.8*1.42
	RM10p3  = RECTANGLE RM10p3b <= maxOdmW_M10 BY <= maxOdmL_M10 ORTHOGONAL ONLY// 1.5*6
	RM10A = (((RM10p1 OR RM10p2) OR RM10p3) OUTSIDE RM10EXC) OUTSIDE FRAME10
	RM10  = RM10A NOT INTERACT (EXT RM10A < OdmS_M10 ABUT SINGULAR REGION)
	
	DM10F = FM10F OR RM10

#ELSE
	D30M10 = DENSITY M10x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M10.den30
	D40M10 = DENSITY M10x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M10.den40
	D50M10 = DENSITY M10x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M10.den50
	emptyM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M10.den_empty

#IFDEF FILL_IN_SLOT
       	M10ExcHole  = COPY EMPTY	
#ELSE
   	M10InnerHole = HOLES M10i INNER
	M10BigHole = SIZE M10InnerHole BY - excludeHoleSize/2 
	M10ExcHole = (M10InnerHole OUTSIDE M10BigHole) NOT M10i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK10 = SIZE DM10EXCL BY (dm2DMEXCL + grid)	// DM10 to DM10EXCL
	
        FRAMEA10 = SIZE M10i BY (DM10_301 + grid)	  // DM10 to real metal
        FRAMEA10RM = SIZE M10i BY (DM10_304 + grid)	  // RM10 to real metal

	FRAMEA10_45 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (DM1045_301 + grid) // DM10 to 45 degree metal
	FRAMEA10RM_45 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (DM1045_304 + grid) // DM10 to 45 degree real metal
        
	M10mid = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i
	
	M10wide_W1 = (SIZE M10mid BY wideM10_W1/2 UNDEROVER TRUNCATE wideM10_W1/2) AND M10i	
	M10wide_W11 = (SIZE M10wide_W1 BY wideM10_W11/2 UNDEROVER TRUNCATE wideM10_W11/2) AND M10i
	M10wide_W2 = (SIZE M10wide_W1 BY wideM10_W2/2 UNDEROVER TRUNCATE wideM10_W2/2) AND M10i
	M10wide = (SIZE M10wide_W2 BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i

	FRAMEB10 = SIZE M10wide BY (dm2WM10 + grid) // DM10 to wide metal 4.5
	FRAMEB10_W2 = SIZE M10wide_W2 BY (dm2WM10_W2 + grid) // DM10 to 1.5um wide metal 0.5
	FRAMEB10_W1 = SIZE M10wide_W1 BY (dm2WM10_W1 + grid) // DM10 to 0.21um wide metal
	FRAMEB10_W11 = SIZE M10wide_W11 BY (dm2WM10_W11 + grid) // DM10 to 0.38um wide metal
    
	FRAMEC10 = SIZE DUM10 BY (dm2DM10 + grid)   // DM10 to existed dummy metal 0.4
	FRAMEC10RM = SIZE DUM10 BY (Odm2DM10 + grid)   // ODM10 to existed dummy metal 0.6 
	FRAME10Pre = ((((FRAMEA10 OR FRAMEB10) OR FRAMEC10) OR M10ExcHole) OR FRAMEB10_W2) OR FRAMEA10_45
	FRAME10PreRM = ((((((FRAMEA10RM OR FRAMEB10) OR FRAMEC10RM) OR M10ExcHole) OR FRAMEB10_W2) OR FRAMEB10_W1) OR FRAMEB10_W11) OR FRAMEA10RM_45
	
	#IFDEF CBM_OVER_M10
	    FRAME10 = (((((FRAME10Pre OR BLOCK10) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M10
	    FRAME10RM = ((((FRAME10PreRM OR BLOCK10) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M10
	#ELSE
        FRAME10 = ((((FRAME10Pre OR BLOCK10) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M10
	    FRAME10RM = (((FRAME10PreRM OR BLOCK10) OR NFILLRM) OR HVxx) OR OD_RDG_M10
	#ENDIF

//****************************************************************************

	D30M10p = (PUSH D30M10) NOT FRAME10
	O30M10pre = D30M10p AND CHIP
	FD21M10s = COPY FRAME10

	O30M10preA = SIZE O30M10pre BY - (DM10_303 + grid)
	O30M10preB = (SIZE O30M10preA BY (WM10_303 - grid) UNDEROVER TRUNCATE WM10_303) AND O30M10preA

	// 1st 2*2
	F303M10 = (RECTANGLES WM10_303 LM10_303 SM10_303 OFFSET OM10_303  INSIDE OF LAYER O30M10preB) NOT INTERACT IND_COIL_EXD

	
	F303M10_EXP = SIZE F303M10 BY ( WM10_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M10preF1 = O30M10pre NOT (SIZE F303M10_EXP BY (SM10_302 + grid))
	O30M10preF = (SNAP (SIZE O30M10preF1 BY -grid) 5) AND O30M10preF1

	B30M10pre = (INT O30M10preF >= WM10_301 <= maxW_DM10V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M10preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M10pre2 = RECTANGLE B30M10pre >= WM10_301 BY >= minL_DM10V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M10pre3 = RECTANGLE B30M10pre2 <= maxW_DM10V_3011 BY <= maxL_DM10V_3011 ORTHOGONAL ONLY

	B30M10 = (B30M10pre3 NOT INTERACT (EXT B30M10pre3 < SM10_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M10s = ((SIZE B30M10 BY (SM10_301 + grid)) OR FD21M10s) OR (SIZE F303M10_EXP BY (SM10_302 + grid))
	O30M10 = O30M10preF NOT B30M10s

	
	// 3rd, 0.5*1.2
	F302M10 = (RECTANGLES WM10_302 LM10_302 SM10_302 OFFSET OM10_302 INSIDE OF LAYER O30M10) NOT INTERACT IND_COIL_EXD
	F302M10s = (SIZE F302M10 BY (SM10_301 + grid)) OR B30M10s
	R302M10pre = O30M10 NOT F302M10s
	R302M10 = (SIZE R302M10pre BY (WM10_301/2 + grid) UNDEROVER TRUNCATE WM10_301) AND R302M10pre

	// 4th, 0.5*0.5
	F3012M10 = (RECTANGLES WM10_301 LM10_301 SM10_301 OFFSET OM10_301 INSIDE OF LAYER R302M10) NOT INTERACT IND_COIL_EXD
	F3012M10s = (SIZE F3012M10 BY (SM10_301 + grid)) OR F302M10s
	R3012M10pre = R302M10pre NOT F3012M10s
	R3012M10 = (SIZE R3012M10pre BY (WM10_301/2 + grid) UNDEROVER TRUNCATE WM10_301) AND R3012M10pre

	// 5th, regular 0.5*0.5
	F301M10 = (RECTANGLES WM10_301 LM10_301 SM10_301 INSIDE OF LAYER R3012M10) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M10s = (SIZE F301M10 BY (SM10_301 + grid)) OR F3012M10s

	F30M10 = (((B30M10 OR F302M10) OR F3012M10) OR F301M10) OR F303M10
	O40M10pre = (((PUSH D40M10) NOT FRAME10) NOT F301M10s) AND CHIP


	O40M10preA = SIZE O40M10pre BY - (DM10_403 + grid)
	O40M10preB = (SIZE O40M10preA BY (WM10_403 - grid) UNDEROVER TRUNCATE WM10_403) AND O40M10preA

	// 1st 2*2
	F403M10 = RECTANGLES WM10_403 LM10_403 SM10_403 OFFSET OM10_403  INSIDE OF LAYER O40M10preB

	
	F403M10_EXP = SIZE F403M10 BY ( WM10_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M10preF1 = O40M10pre NOT (SIZE F403M10_EXP BY (SM10_402 + grid))
	O40M10preF = (SNAP (SIZE O40M10preF1 BY -grid) 5) AND O40M10preF1

	B40M10pre = (INT O40M10preF >= WM10_401 <= maxW_DM10V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M10preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M10pre2 = RECTANGLE B40M10pre >= WM10_401 BY >= minL_DM10V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M10pre3 = RECTANGLE B40M10pre2 <= maxW_DM10V_4011 BY <= maxL_DM10V_4011 ORTHOGONAL ONLY

	B40M10 = (B40M10pre3 NOT INTERACT (EXT B40M10pre3 < SM10_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M10s = ((SIZE B40M10 BY (SM10_401 + grid)) OR F301M10s) OR (SIZE F403M10_EXP BY (SM10_402 + grid))
	O40M10 = O40M10preF NOT B40M10s

	
	// 3rd, 0.5*1.2
	F402M10 = (RECTANGLES WM10_402 LM10_402 SM10_402 OFFSET OM10_402 INSIDE OF LAYER O40M10) NOT INTERACT IND_COIL_EXD
	F402M10s = (SIZE F402M10 BY (SM10_401 + grid)) OR B40M10s
	R402M10pre = O40M10 NOT F402M10s
	R402M10 = (SIZE R402M10pre BY (WM10_401/2 + grid) UNDEROVER TRUNCATE WM10_401) AND R402M10pre

	// 4th, 0.5*0.5
	F4012M10 = (RECTANGLES WM10_401 LM10_401 SM10_401 OFFSET OM10_401 INSIDE OF LAYER R402M10) NOT INTERACT IND_COIL_EXD
	F4012M10s = (SIZE F4012M10 BY (SM10_401 + grid)) OR F402M10s
	R4012M10pre = R402M10pre NOT F4012M10s
	R4012M10 = (SIZE R4012M10pre BY (WM10_401/2 + grid) UNDEROVER TRUNCATE WM10_401) AND R4012M10pre

	// 5th, regular 0.5*0.5
	F401M10 = (RECTANGLES WM10_401 LM10_401 SM10_401 INSIDE OF LAYER R4012M10) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M10s = (SIZE F401M10 BY (SM10_401 + grid)) OR F4012M10s

	F40M10 = (((B40M10 OR F402M10) OR F4012M10) OR F401M10) OR F403M10
	O50M10pre = (((PUSH (D50M10 OR emptyM10)) NOT FRAME10) NOT F401M10s) AND CHIP


	O50M10preA = SIZE O50M10pre BY - (DM10_503 + grid)
	O50M10preB = (SIZE O50M10preA BY (WM10_503 - grid) UNDEROVER TRUNCATE WM10_503) AND O50M10preA

	// 1st 2*2
	F503M10 = RECTANGLES WM10_503 LM10_503 SM10_503 OFFSET OM10_503  INSIDE OF LAYER O50M10preB

	
	F503M10_EXP = SIZE F503M10 BY ( WM10_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M10preF1 = O50M10pre NOT (SIZE F503M10_EXP BY (SM10_502 + grid))
	O50M10preF = (SNAP (SIZE O50M10preF1 BY -grid) 5) AND O50M10preF1

	B50M10pre = (INT O50M10preF >= WM10_501 <= maxW_DM10V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M10preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M10pre2 = RECTANGLE B50M10pre >= WM10_501 BY >= minL_DM10V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M10pre3 = RECTANGLE B50M10pre2 <= maxW_DM10V_5011 BY <= maxL_DM10V_5011 ORTHOGONAL ONLY

	B50M10 = (B50M10pre3 NOT INTERACT (EXT B50M10pre3 < SM10_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M10s = ((SIZE B50M10 BY (SM10_501 + grid)) OR F401M10s) OR (SIZE F503M10_EXP BY (SM10_502 + grid))
	O50M10 = O50M10preF NOT B50M10s

	
	// 3rd, 0.5*1.2
	F502M10 = (RECTANGLES WM10_502 LM10_502 SM10_502 OFFSET OM10_502 INSIDE OF LAYER O50M10) NOT INTERACT IND_COIL_EXD
	F502M10s = (SIZE F502M10 BY (SM10_501 + grid)) OR B50M10s
	R502M10pre = O50M10 NOT F502M10s
	R502M10 = (SIZE R502M10pre BY (WM10_501/2 + grid) UNDEROVER TRUNCATE WM10_501) AND R502M10pre

	// 4th, 0.5*0.5
	F5012M10 = (RECTANGLES WM10_501 LM10_501 SM10_501 OFFSET OM10_501 INSIDE OF LAYER R502M10) NOT INTERACT IND_COIL_EXD
	F5012M10s = (SIZE F5012M10 BY (SM10_501 + grid)) OR F502M10s
	R5012M10pre = R502M10pre NOT F5012M10s
	R5012M10 = (SIZE R5012M10pre BY (WM10_501/2 + grid) UNDEROVER TRUNCATE WM10_501) AND R5012M10pre

	// 5th, regular 0.5*0.5
	F501M10 = (RECTANGLES WM10_501 LM10_501 SM10_501 INSIDE OF LAYER R5012M10) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M10s = (SIZE F501M10 BY (SM10_501 + grid)) OR F5012M10s

	F50M10 = (((B50M10 OR F502M10) OR F5012M10) OR F501M10) OR F503M10

//****************************************************************************
    
	exceedM10 = DENSITY M10x F30M10 F40M10 F50M10 > maxD_M10 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M10.den_exceed
	exceedM10DN2 = DENSITY M10x F30M10 F40M10 F50M10 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M10.DN.2.den_exceed

	removeM10R = ((PUSH (exceedM10 AND (D50M10 OR emptyM10))) NOT FRAME10) AND CHIP 
	removeM10 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM10R
	
	F30M10x = (F30M10 NOT INTERACT exceedM10DN2) NOT INTERACT removeM10
	F40M10x = (F40M10 NOT INTERACT exceedM10DN2) NOT INTERACT removeM10
	F50M10x = (F50M10 NOT INTERACT exceedM10DN2) NOT INTERACT removeM10
	FM10xA  = (F30M10x OR F40M10x) OR F50M10x
	FM10x   = FM10xA NOT INTERACT (EXT FM10xA < DM10_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM10
	lackM10 = DENSITY M10x FM10x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M10.den_lack
	RM10EXC = SIZE (((FM10x OR F303M10_EXP) OR F403M10_EXP) OR F503M10_EXP) BY (DM10_301 + grid)
	BigemptyM10 = PUSH ((SIZE emptyM10 BY 25 UNDEROVER) AND emptyM10)
    
	lackM10pRM = (((((PUSH lackM10) NOT RM10EXC) NOT BigemptyM10) NOT exceedM10) NOT FRAME10RM ) AND CHIP
	lackM10pRM_1 = WITH WIDTH lackM10pRM >= minWM10_304
        RM10p1 = RECTANGLES minWM10_304 minLM10_304 SM10_304 OFFSET OM10_304 INSIDE OF LAYER lackM10pRM_1
	lackM10pRM_2 = WITH WIDTH (lackM10pRM_1 NOT (SIZE RM10p1 BY (SM10_304 + grid))) >= minWM10_304
        RM10p2 = RECTANGLES minLM10_304 minWM10_304 SM10_304 OFFSET OM10_304 INSIDE OF LAYER lackM10pRM_2
        lackM10pRM_3pre = lackM10pRM_2 NOT (SIZE RM10p2 BY (SM10_304 + grid))
	lackM10pRM_3 = (SNAP (SIZE lackM10pRM_3pre BY -grid) 5) AND lackM10pRM_3pre 
	       
	RM10p3pre = (INT lackM10pRM_3 >= minWM10_304 <= maxWM10_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM10pRM_3 
	RM10p3pre2 = RECTANGLE RM10p3pre >= minWM10_304 BY >= minLM10_304 ORTHOGONAL ONLY// 0.13*0.6
	RM10p3 = RECTANGLE RM10p3pre2 <= maxWM10_304 BY <= maxLM10_304 ORTHOGONAL ONLY// 0.2*6

	RM10A = ((((RM10p1 OR RM10p2) OR RM10p3) OUTSIDE RM10EXC) OUTSIDE FRAME10RM) NOT INTERACT IND_COIL_EXD
	RM10F = RM10A NOT INTERACT (EXT RM10A < SM10_304 ABUT SINGULAR REGION)

#ENDIF

DM10F = COPY FM10x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF FILL_DM11

#IFDEF 34K_THICK_M11
	minOPENM11 = DENSITY M11x < minD_M11 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den
	emptyOPENM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M11Empty.den
        #IFDEF FILL_IN_SLOT
       	M11ExcHole  = COPY EMPTY	
        #ELSE
   	M11InnerHole = HOLES M11i INNER
	M11BigHole = SIZE M11InnerHole BY - excludeHoleSize/2
	M11ExcHole = (M11InnerHole OUTSIDE M11BigHole) NOT M11i
        #ENDIF	
        BLOCK11    = SIZE DM11EXCL BY (dm2DMEXCL + grid)
        FRAMEA11   = SIZE M11i BY (dm2M11 + grid)
	M11mid     = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i
	M11wide    = (SIZE M11mid BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i
	FRAMEB11   = SIZE M11wide BY (dm2WM11 + grid) // DM11 to 4.5um wide metal 3um
	FRAMEC11   = SIZE DUM11 BY (dm2DM11 + grid)    
	FRAME11Pre = ((FRAMEA11 OR FRAMEB11) OR FRAMEC11) OR M11ExcHole
	#IFDEF CBM_OVER_M11
        FRAME11 = ((((FRAME11Pre OR BLOCK11) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M11  
	#ELSE
	    FRAME11 = (((FRAME11Pre OR BLOCK11) OR NFILL) OR HVxx) OR OD_RDG_M11
	#ENDIF	
	OPENM11 = PUSH ((minOPENM11 OR emptyOPENM11) AND CHIP)
	FILL11 = OPENM11 NOT FRAME11
	FILLW11pre = SIZE FILL11 BY - (Wdm2M11 + grid)
	FILLW11 = (SIZE FILLW11pre BY (WdmW_M11 - grid) UNDEROVER TRUNCATE WdmW_M11) AND FILLW11pre
	M11FW = RECTANGLES WdmW_M11 WdmL_M11 WdmS_M11 OFFSET WdmO_M11 INSIDE OF LAYER FILLW11
	M11FW_EXP = SIZE M11FW BY (WdmS_M11 /2 + grid) OVERUNDER	// merge the gaps
	FILLM11pre = FILL11 NOT (SIZE M11FW_EXP BY (MdmS_M11 + grid))
	FILLM11 = (SIZE FILLM11pre BY (MdmW_M11 - grid) UNDEROVER TRUNCATE MdmW_M11) AND FILLM11pre
	M11F1 = RECTANGLES MdmW_M11 MdmL_M11 MdmS_M11 OFFSET MdmO_M11 INSIDE OF LAYER FILLM11
	M11R1pre = FILLM11pre NOT (SIZE M11F1 BY (dmS_M11 + grid))
	M11R1 = (SIZE M11R1pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R1pre

	M11F2 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R1
	M11R2pre = M11R1 NOT (SIZE M11F2 BY (dmS_M11 + grid))
	M11R2 = (SIZE M11R2pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R2pre

	M11F3 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R2
	M11R3pre = M11R2 NOT (SIZE M11F3 BY (dmS_M11 + grid))
	M11R3 = (SIZE M11R3pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R3pre
	
	M11F4 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 INSIDE OF LAYER M11R3 

	M11F = (((M11F1 OR M11F2) OR M11F3) OR M11F4) OR M11FW
	FM11 = M11F NOT INTERACT (EXT M11F < dmS_M11 ABUT SINGULAR REGION)

	maxOPENM11 = DENSITY M11x FM11 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Max.den
		       
	DM11F = FM11 OUTSIDE maxOPENM11

#ELSE
#IFDEF 12K_THICK_M11
	
	minOPENM11 = DENSITY M11x < minD_M11 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den
	emptyOPENM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M11Empty.den
#IFDEF FILL_IN_SLOT
       	M11ExcHole  = COPY EMPTY	
#ELSE
   	M11InnerHole = HOLES M11i INNER
	M11BigHole = SIZE M11InnerHole BY - excludeHoleSize/2 
	M11ExcHole = (M11InnerHole OUTSIDE M11BigHole) NOT M11i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK11 = SIZE DM11EXCL BY (dm2DMEXCL + grid)	// DM11 to DM11EXCL
    
        FRAMEA11 = SIZE M11i BY (dm2M11 + grid) // DM11 to metal
	M11mid = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i
	M11wide = (SIZE M11mid BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i
	FRAMEB11 = SIZE M11wide BY (dm2WM11 + grid) // DM11 to 4.5um wide metal, 1.5um
	FRAMEC11 = SIZE DUM11 BY (dm2DM11 + grid)   // ODM11 or DM11 to existed dummy metal 0.6um 
	FRAME11Pre = ((FRAMEA11 OR FRAMEB11) OR FRAMEC11) OR M11ExcHole
        #IFDEF CBM_OVER_M11
	   FRAME11 = ((((FRAME11Pre OR BLOCK11) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M11	// wrong setting will add nothing
        #ELSE 
	   FRAME11 = (((FRAME11Pre OR BLOCK11) OR NFILL) OR HVxx) OR OD_RDG_M11
        #ENDIF 

	OPENM11 = PUSH ((minOPENM11 OR emptyOPENM11) AND CHIP)
	FILL11 = OPENM11 NOT FRAME11
	FILLW11pre = SIZE FILL11 BY - (Wdm2M11 + grid)
	FILLW11 = (SIZE FILLW11pre BY (WdmW_M11 - grid) UNDEROVER TRUNCATE WdmW_M11) AND FILLW11pre
	M11FW = RECTANGLES WdmW_M11 WdmL_M11 WdmS_M11 OFFSET WdmO_M11 INSIDE OF LAYER FILLW11
	M11FW_EXP = SIZE M11FW BY (WdmS_M11 /2 + grid) OVERUNDER //merge the gaps 
	FILLM11pre = FILL11 NOT (SIZE M11FW_EXP BY (MdmS_M11 + grid))
	FILLM11 = (SIZE FILLM11pre BY (MdmW_M11 - grid) UNDEROVER TRUNCATE MdmW_M11) AND FILLM11pre
	M11F1 = RECTANGLES MdmW_M11 MdmL_M11 MdmS_M11 OFFSET MdmO_M11 INSIDE OF LAYER FILLM11
	M11R1pre = FILLM11pre NOT (SIZE M11F1 BY (dmS_M11 + grid))
	M11R1 = (SIZE M11R1pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R1pre

	M11F2 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R1
	M11R2pre = M11R1 NOT (SIZE M11F2 BY (dmS_M11 + grid))
	M11R2 = (SIZE M11R2pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R2pre

	M11F3 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R2
	M11R3pre = M11R2 NOT (SIZE M11F3 BY (dmS_M11 + grid))
	M11R3 = (SIZE M11R3pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R3pre
	
	M11F4 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 INSIDE OF LAYER M11R3

	M11F = (((M11F1 OR M11F2) OR M11F3) OR M11F4) OR M11FW
	FM11 = M11F NOT INTERACT (EXT M11F < dmS_M11 ABUT SINGULAR REGION)
    
	maxOPENM11 = DENSITY M11x FM11 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Max.den
		       
	FM11F = FM11 OUTSIDE maxOPENM11

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M11 = DENSITY M11x FM11F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den

	RM11EXC = SIZE FM11F BY (Odm2DM11 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M11pM = ((((PUSH D25M11) NOT FRAME11) NOT RM11EXC) NOT CTMDMY) AND CHIP
	D25M11pM_1 = (SIZE D25M11pM BY (OdmW_M11 /2 - grid) UNDEROVER TRUNCATE OdmW_M11) AND D25M11pM 
		
	RM11p1 = RECTANGLES OdmW_M11 OdmL_M11 OdmS_M11 INSIDE OF LAYER D25M11pM_1
	D25M11pM_2 = D25M11pM_1 NOT (SIZE RM11p1 BY (OdmS_M11 + grid))
	RM11p2 = RECTANGLES OdmL_M11 OdmW_M11 OdmS_M11 INSIDE OF LAYER D25M11pM_2

	D25M11pM_3pre = D25M11pM_2 NOT (SIZE RM11p2 BY (OdmS_M11 + grid))
	D25M11pM_3 = (SNAP (SIZE D25M11pM_3pre BY -grid) 5) AND D25M11pM_3pre
	RM11p3a = (INT D25M11pM_3 >=OdmW_M11 <=maxOdmW_M11 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M11pM_3 
	RM11p3b = RECTANGLE RM11p3a >= OdmW_M11 BY >= OdmL_M11 ORTHOGONAL ONLY // 1*1.44
	RM11p3  = RECTANGLE RM11p3b <= maxOdmW_M11 BY <= maxOdmL_M11 ORTHOGONAL ONLY// 1.5*6
	RM11A = (((RM11p1 OR RM11p2) OR RM11p3) OUTSIDE RM11EXC) OUTSIDE FRAME11
	RM11  = RM11A NOT INTERACT (EXT RM11A < OdmS_M11 ABUT SINGULAR REGION)
	
	DM11F = FM11F OR RM11

#ELSE
#IFDEF 9K_THICK_M11
	minOPENM11 = DENSITY M11x < minD_M11 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den
	emptyOPENM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M11Empty.den

#IFDEF FILL_IN_SLOT
       	M11ExcHole  = COPY EMPTY	
#ELSE
   	M11InnerHole = HOLES M11i INNER
	M11BigHole = SIZE M11InnerHole BY - excludeHoleSize/2 
	M11ExcHole = (M11InnerHole OUTSIDE M11BigHole) NOT M11i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK11 = SIZE DM11EXCL BY (dm2DMEXCL + grid)	// DM11 to DM11EXCL
	FRAMEA11 = SIZE M11i BY (dm2M11 + grid) // DM11 to metal

    
	M11mid = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i
	M11wide = (SIZE M11mid BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i
	FRAMEB11 = SIZE M11wide BY (dm2WM11 + grid) // DM11 to 4.5um wide metal, 1.5um
	FRAMEC11 = SIZE DUM11 BY (dm2DM11 + grid)   // DM11 to existed dummy metal 0.6um 
	FRAME11Pre = ((FRAMEA11 OR FRAMEB11) OR FRAMEC11) OR M11ExcHole
	#IFDEF CBM_OVER_M11
	    FRAME11 = (((((FRAME11Pre OR BLOCK11) OR NFILL) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M11
	#ELSE
	    FRAME11 = ((((FRAME11Pre OR BLOCK11) OR NFILL) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M11
    #ENDIF    
	OPENM11 = PUSH ((minOPENM11 OR emptyOPENM11) AND CHIP)
    #IFDEF CBM_OVER_M10
        CTMDMY_BLOCK1 = SIZE M11x_CTMDMY BY (dm2M11_CTMDMY + grid)  
        CTMDMY_BLOCK = CTMDMY_BLOCK1 OR CTMDMY
	    FILL11 = (OPENM11 NOT FRAME11) NOT CTMDMY_BLOCK
	#ELSE
        FILL11 = OPENM11 NOT FRAME11
    #ENDIF

	FILLW11pre = SIZE FILL11 BY - (Wdm2M11 + grid)
	FILLW11 = (SIZE FILLW11pre BY (WdmW_M11 - grid) UNDEROVER TRUNCATE WdmW_M11) AND FILLW11pre
	M11FW = RECTANGLES WdmW_M11 WdmL_M11 WdmS_M11 OFFSET WdmO_M11 INSIDE OF LAYER FILLW11
	M11FW_EXP = SIZE M11FW BY (WdmS_M11 /2 + grid) OVERUNDER //merge the gaps 
	FILLM11pre = FILL11 NOT (SIZE M11FW_EXP BY (MdmS_M11 + grid))
	FILLM11 = (SIZE FILLM11pre BY (MdmW_M11 - grid) UNDEROVER TRUNCATE MdmW_M11) AND FILLM11pre
	M11F1 = RECTANGLES MdmW_M11 MdmL_M11 MdmS_M11 OFFSET MdmO_M11 INSIDE OF LAYER FILLM11
	M11R1pre = FILLM11pre NOT (SIZE M11F1 BY (dmS_M11 + grid))
	M11R1 = (SIZE M11R1pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R1pre

	M11F2 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R1
	M11R2pre = M11R1 NOT (SIZE M11F2 BY (dmS_M11 + grid))
	M11R2 = (SIZE M11R2pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R2pre

	M11F3 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R2
	M11R3pre = M11R2 NOT (SIZE M11F3 BY (dmS_M11 + grid))
	M11R3 = (SIZE M11R3pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R3pre
	
	M11F4 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 INSIDE OF LAYER M11R3

	M11F = ((((M11F1 OR M11F2) OR M11F3) OR M11F4) OR M11FW) NOT INTERACT IND_COIL_EXD
	FM11 = M11F NOT INTERACT (EXT M11F < dmS_M11 ABUT SINGULAR REGION)
    
	maxOPENM11 = DENSITY M11x FM11 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Max.den
		       
	FM11F = FM11 OUTSIDE maxOPENM11

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.20 
	D25M11 = DENSITY M11x FM11F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den

	RM11EXC = SIZE FM11F BY (Odm2DM11 + grid)
// do not fill DMz_S over CTMDMY 
	D25M11pM = ((((PUSH D25M11) NOT FRAME11) NOT RM11EXC) NOT CTMDMY) AND CHIP
	D25M11pM_1 = (SIZE D25M11pM BY (OdmW_M11 /2 - grid) UNDEROVER TRUNCATE OdmW_M11) AND D25M11pM 

	RM11p1 = RECTANGLES OdmW_M11 OdmL_M11 OdmS_M11 INSIDE OF LAYER D25M11pM_1
	D25M11pM_2 = D25M11pM_1 NOT (SIZE RM11p1 BY (OdmS_M11 + grid))
	RM11p2 = RECTANGLES OdmL_M11 OdmW_M11 OdmS_M11 INSIDE OF LAYER D25M11pM_2

	D25M11pM_3pre = D25M11pM_2 NOT (SIZE RM11p2 BY (OdmS_M11 + grid))
	D25M11pM_3 = (SNAP (SIZE D25M11pM_3pre BY -grid) 5) AND D25M11pM_3pre
	RM11p3a = (INT D25M11pM_3 >=OdmW_M11 <=maxOdmW_M11 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M11pM_3 
	RM11p3b = RECTANGLE RM11p3a >= OdmW_M11 BY >= OdmL_M11 ORTHOGONAL ONLY// 0.4*1.42
	RM11p3  = RECTANGLE RM11p3b <= maxOdmW_M11 BY <= maxOdmL_M11 ORTHOGONAL ONLY// 1.5*6
	RM11A = ((((RM11p1 OR RM11p2) OR RM11p3) OUTSIDE RM11EXC) OUTSIDE FRAME11) NOT INTERACT IND_COIL_EXD
	RM11  = RM11A NOT INTERACT (EXT RM11A < OdmS_M11 ABUT SINGULAR REGION)
    #IFDEF CBM_OVER_M10
        FILLM11_CTMDMY = (CTMDMY NOT (SIZE ((FM11F OR RM11) OR (M11x NOT OUTSIDE CTMDMY)) BY (dmS_M11_CTMDMY + grid))) NOT FRAME11
 	    M11F1_CTMDMY = RECTANGLES WdmW_M11 WdmL_M11 dmS_M11_CTMDMY OFFSET WdmO_M11 INSIDE OF LAYER FILLM11_CTMDMY
        M11R1_CTMDMY = FILLM11_CTMDMY NOT (SIZE M11F1_CTMDMY BY (dmS_M11_CTMDMY + grid))
        M11F2_CTMDMY = RECTANGLES WdmW_M11 WdmL_M11 dmS_M11_CTMDMY OFFSET WdmO_M11 INSIDE OF LAYER M11R1_CTMDMY
        M11R2_CTMDMY = WITH WIDTH (M11R1_CTMDMY NOT (SIZE M11F2_CTMDMY BY (dmS_M11_CTMDMY + grid))) >= min_dmW_M11_CTMDMY
        M11F3_CTMDMY = RECTANGLES min_dmW_M11_CTMDMY min_dmW_M11_CTMDMY dmS_M11_CTMDMY OFFSET dmO_M11 INSIDE OF LAYER M11R2_CTMDMY
	    M11R3_CTMDMY = WITH WIDTH (M11R2_CTMDMY NOT (SIZE M11F3_CTMDMY BY (dmS_M11_CTMDMY + grid))) >= min_dmW_M11_CTMDMY
        M11F4_CTMDMY = RECTANGLES min_dmW_M11_CTMDMY min_dmW_M11_CTMDMY dmS_M11_CTMDMY OFFSET dmO_M11 INSIDE OF LAYER M11R3_CTMDMY
	    M11F_CTMDMY_A = ((M11F1_CTMDMY OR M11F2_CTMDMY) OR M11F3_CTMDMY) OR  M11F4_CTMDMY
	    M11F_CTMDMY = M11F_CTMDMY_A NOT INTERACT (EXT M11F_CTMDMY_A < dmS_M11_CTMDMY ABUT SINGULAR REGION)
	    DM11F_pre = (FM11F OR RM11) OR M11F_CTMDMY
    #ELSE
        DM11F_pre = FM11F OR RM11
    #ENDIF
        DM11F = COPY DM11F_pre
#ELSE	
#IFDEF 5K_THICK_M11
	minOPENM11 = DENSITY M11x < minD_M11 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den
	emptyOPENM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M11Empty.den

#IFDEF FILL_IN_SLOT
       	M11ExcHole  = COPY EMPTY	
#ELSE
   	M11InnerHole = HOLES M11i INNER
	M11BigHole = SIZE M11InnerHole BY - excludeHoleSize/2 
	M11ExcHole = (M11InnerHole OUTSIDE M11BigHole) NOT M11i // do not fill in hole/slot with width < 4
#ENDIF	
        BLOCK11 = SIZE DM11EXCL BY (dm2DMEXCL + grid)	// DM11 to DM11EXCL
    
        FRAMEA11 = SIZE M11i BY (dm2M11 + grid) // DM11 to metal
	M11mid = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i
	M11wide = (SIZE M11mid BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i
	FRAMEB11 = SIZE M11wide BY (dm2WM11 + grid) // DM11 to 4.5um wide metal, 1.5um
	FRAMEC11 = SIZE DUM11 BY (dm2DM11 + grid)   // ODM11 or DM11 to existed dummy metal 0.6um 
	FRAME11Pre = ((FRAMEA11 OR FRAMEB11) OR FRAMEC11) OR M11ExcHole
	#IFDEF CBM_OVER_M11
	   FRAME11 = ((((FRAME11Pre OR BLOCK11) OR NFILL) OR CBMx) OR HVxx) OR OD_RDG_M11
        #ELSE
	   FRAME11 = (((FRAME11Pre OR BLOCK11) OR NFILL) OR HVxx) OR OD_RDG_M11
        #ENDIF
	OPENM11 = PUSH ((minOPENM11 OR emptyOPENM11) AND CHIP)
	FILL11 = OPENM11 NOT FRAME11
	FILLW11pre = SIZE FILL11 BY - (Wdm2M11 + grid)
	FILLW11 = (SIZE FILLW11pre BY (WdmW_M11 - grid) UNDEROVER TRUNCATE WdmW_M11) AND FILLW11pre
	M11FW = RECTANGLES WdmW_M11 WdmL_M11 WdmS_M11 OFFSET WdmO_M11 INSIDE OF LAYER FILLW11
	M11FW_EXP = SIZE M11FW BY (WdmS_M11 /2 + grid) OVERUNDER //merge the gaps 
	FILLM11pre = FILL11 NOT (SIZE M11FW_EXP BY (MdmS_M11 + grid))
	FILLM11 = (SIZE FILLM11pre BY (MdmW_M11 - grid) UNDEROVER TRUNCATE MdmW_M11) AND FILLM11pre
	M11F1 = RECTANGLES MdmW_M11 MdmL_M11 MdmS_M11 OFFSET MdmO_M11 INSIDE OF LAYER FILLM11
	M11R1pre = FILLM11pre NOT (SIZE M11F1 BY (dmS_M11 + grid))
	M11R1 = (SIZE M11R1pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R1pre

	M11F2 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R1
	M11R2pre = M11R1 NOT (SIZE M11F2 BY (dmS_M11 + grid))
	M11R2 = (SIZE M11R2pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R2pre

	M11F3 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 OFFSET dmO_M11 INSIDE OF LAYER M11R2
	M11R3pre = M11R2 NOT (SIZE M11F3 BY (dmS_M11 + grid))
	M11R3 = (SIZE M11R3pre BY (dmW_M11/2 - grid) UNDEROVER TRUNCATE dmW_M11) AND M11R3pre
	
	M11F4 = RECTANGLES dmW_M11 dmL_M11 dmS_M11 INSIDE OF LAYER M11R3

	M11F = (((M11F1 OR M11F2) OR M11F3) OR M11F4) OR M11FW
	FM11 = M11F NOT INTERACT (EXT M11F < dmS_M11 ABUT SINGULAR REGION)
    
	maxOPENM11 = DENSITY M11x FM11 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Max.den
		       
	FM11F = FM11 OUTSIDE maxOPENM11

// DMz_S to enhance the fill in the region of density < 25%, rule value = 0.15 
	D25M11 = DENSITY M11x FM11F < 0.25 WINDOW WindowSize STEP WindowStep 
	        INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den

	RM11EXC = SIZE FM11F BY (Odm2DM11 + grid)
	// do not fill DMz_S over CTMDMY 
	D25M11pM = ((((PUSH D25M11) NOT FRAME11) NOT RM11EXC) NOT CTMDMY) AND CHIP
	D25M11pM_1 = (SIZE D25M11pM BY (OdmW_M11 /2 - grid) UNDEROVER TRUNCATE OdmW_M11) AND D25M11pM 
		
	RM11p1 = RECTANGLES OdmW_M11 OdmL_M11 OdmS_M11 INSIDE OF LAYER D25M11pM_1
	D25M11pM_2 = D25M11pM_1 NOT (SIZE RM11p1 BY (OdmS_M11 + grid))
	RM11p2 = RECTANGLES OdmL_M11 OdmW_M11 OdmS_M11 INSIDE OF LAYER D25M11pM_2

	D25M11pM_3pre = D25M11pM_2 NOT (SIZE RM11p2 BY (OdmS_M11 + grid))
	D25M11pM_3 = (SNAP (SIZE D25M11pM_3pre BY -grid) 5) AND D25M11pM_3pre
	RM11p3a = (INT D25M11pM_3 >=OdmW_M11 <=maxOdmW_M11 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE D25M11pM_3 
	RM11p3b = RECTANGLE RM11p3a >= OdmW_M11 BY >= OdmL_M11 ORTHOGONAL ONLY// 0.8*1.42
	RM11p3  = RECTANGLE RM11p3b <= maxOdmW_M11 BY <= maxOdmL_M11 ORTHOGONAL ONLY// 1.5*6
	RM11A = (((RM11p1 OR RM11p2) OR RM11p3) OUTSIDE RM11EXC) OUTSIDE FRAME11
	RM11  = RM11A NOT INTERACT (EXT RM11A < OdmS_M11 ABUT SINGULAR REGION)
	
	DM11F = FM11F OR RM11

#ELSE
	D30M11 = DENSITY M11x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M11.den30
	D40M11 = DENSITY M11x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M11.den40
	D50M11 = DENSITY M11x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M11.den50
	emptyM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M11.den_empty

#IFDEF FILL_IN_SLOT
       	M11ExcHole  = COPY EMPTY	
#ELSE
   	M11InnerHole = HOLES M11i INNER
	M11BigHole = SIZE M11InnerHole BY - excludeHoleSize/2 
	M11ExcHole = (M11InnerHole OUTSIDE M11BigHole) NOT M11i // do not fill in hole/slot with width < 4
#ENDIF	
	BLOCK11 = SIZE DM11EXCL BY (dm2DMEXCL + grid)	// DM11 to DM11EXCL
	
        FRAMEA11 = SIZE M11i BY (DM11_301 + grid)	  // DM11 to real metal
        FRAMEA11RM = SIZE M11i BY (DM11_304 + grid)	  // RM11 to real metal

	FRAMEA11_45 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (DM1145_301 + grid) // DM11 to 45 degree metal
	FRAMEA11RM_45 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (DM1145_304 + grid) // DM11 to 45 degree real metal
        
	M11mid = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i
	
	M11wide_W1 = (SIZE M11mid BY wideM11_W1/2 UNDEROVER TRUNCATE wideM11_W1/2) AND M11i	
	M11wide_W11 = (SIZE M11wide_W1 BY wideM11_W11/2 UNDEROVER TRUNCATE wideM11_W11/2) AND M11i
	M11wide_W2 = (SIZE M11wide_W1 BY wideM11_W2/2 UNDEROVER TRUNCATE wideM11_W2/2) AND M11i
	M11wide = (SIZE M11wide_W2 BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i

	FRAMEB11 = SIZE M11wide BY (dm2WM11 + grid) // DM11 to wide metal 4.5
	FRAMEB11_W2 = SIZE M11wide_W2 BY (dm2WM11_W2 + grid) // DM11 to 1.5um wide metal 0.5
	FRAMEB11_W1 = SIZE M11wide_W1 BY (dm2WM11_W1 + grid) // DM11 to 0.21um wide metal
	FRAMEB11_W11 = SIZE M11wide_W11 BY (dm2WM11_W11 + grid) // DM11 to 0.38um wide metal
    
	FRAMEC11 = SIZE DUM11 BY (dm2DM11 + grid)   // DM11 to existed dummy metal 0.4
	FRAMEC11RM = SIZE DUM11 BY (Odm2DM11 + grid)   // ODM11 to existed dummy metal 0.6 
	FRAME11Pre = ((((FRAMEA11 OR FRAMEB11) OR FRAMEC11) OR M11ExcHole) OR FRAMEB11_W2) OR FRAMEA11_45
	FRAME11PreRM = ((((((FRAMEA11RM OR FRAMEB11) OR FRAMEC11RM) OR M11ExcHole) OR FRAMEB11_W2) OR FRAMEB11_W1) OR FRAMEB11_W11) OR FRAMEA11RM_45
	
	#IFDEF CBM_OVER_M11
	    FRAME11 = (((((FRAME11Pre OR BLOCK11) OR NFILL) OR CBMx) OR HVNWxx) OR HVxx) OR OD_RDG_M11
	    FRAME11RM = ((((FRAME11PreRM OR BLOCK11) OR NFILLRM) OR CBMx) OR HVxx) OR OD_RDG_M11
	#ELSE
        FRAME11 = ((((FRAME11Pre OR BLOCK11) OR NFILL) OR HVNWxx) OR HVxx) OR OD_RDG_M11
	    FRAME11RM = (((FRAME11PreRM OR BLOCK11) OR NFILLRM) OR HVxx) OR OD_RDG_M11
	#ENDIF

//****************************************************************************

	D30M11p = (PUSH D30M11) NOT FRAME11
	O30M11pre = D30M11p AND CHIP
	FD21M11s = COPY FRAME11

	O30M11preA = SIZE O30M11pre BY - (DM11_303 + grid)
	O30M11preB = (SIZE O30M11preA BY (WM11_303 - grid) UNDEROVER TRUNCATE WM11_303) AND O30M11preA

	// 1st 2*2
	F303M11 = (RECTANGLES WM11_303 LM11_303 SM11_303 OFFSET OM11_303  INSIDE OF LAYER O30M11preB) NOT INTERACT IND_COIL_EXD

	
	F303M11_EXP = SIZE F303M11 BY ( WM11_303 / 2 + grid ) OVERUNDER	// merge the gaps
	O30M11preF1 = O30M11pre NOT (SIZE F303M11_EXP BY (SM11_302 + grid))
	O30M11preF = (SNAP (SIZE O30M11preF1 BY -grid) 5) AND O30M11preF1

	B30M11pre = (INT O30M11preF >= WM11_301 <= maxW_DM11V_3011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O30M11preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B30M11pre2 = RECTANGLE B30M11pre >= WM11_301 BY >= minL_DM11V_3011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B30M11pre3 = RECTANGLE B30M11pre2 <= maxW_DM11V_3011 BY <= maxL_DM11V_3011 ORTHOGONAL ONLY

	B30M11 = (B30M11pre3 NOT INTERACT (EXT B30M11pre3 < SM11_301 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B30M11s = ((SIZE B30M11 BY (SM11_301 + grid)) OR FD21M11s) OR (SIZE F303M11_EXP BY (SM11_302 + grid))
	O30M11 = O30M11preF NOT B30M11s

	
	// 3rd, 0.5*1.2
	F302M11 = (RECTANGLES WM11_302 LM11_302 SM11_302 OFFSET OM11_302 INSIDE OF LAYER O30M11) NOT INTERACT IND_COIL_EXD
	F302M11s = (SIZE F302M11 BY (SM11_301 + grid)) OR B30M11s
	R302M11pre = O30M11 NOT F302M11s
	R302M11 = (SIZE R302M11pre BY (WM11_301/2 + grid) UNDEROVER TRUNCATE WM11_301) AND R302M11pre

	// 4th, 0.5*0.5
	F3012M11 = (RECTANGLES WM11_301 LM11_301 SM11_301 OFFSET OM11_301 INSIDE OF LAYER R302M11) NOT INTERACT IND_COIL_EXD
	F3012M11s = (SIZE F3012M11 BY (SM11_301 + grid)) OR F302M11s
	R3012M11pre = R302M11pre NOT F3012M11s
	R3012M11 = (SIZE R3012M11pre BY (WM11_301/2 + grid) UNDEROVER TRUNCATE WM11_301) AND R3012M11pre

	// 5th, regular 0.5*0.5
	F301M11 = (RECTANGLES WM11_301 LM11_301 SM11_301 INSIDE OF LAYER R3012M11) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F301M11s = (SIZE F301M11 BY (SM11_301 + grid)) OR F3012M11s

	F30M11 = (((B30M11 OR F302M11) OR F3012M11) OR F301M11) OR F303M11
	O40M11pre = (((PUSH D40M11) NOT FRAME11) NOT F301M11s) AND CHIP


	O40M11preA = SIZE O40M11pre BY - (DM11_403 + grid)
	O40M11preB = (SIZE O40M11preA BY (WM11_403 - grid) UNDEROVER TRUNCATE WM11_403) AND O40M11preA

	// 1st 2*2
	F403M11 = RECTANGLES WM11_403 LM11_403 SM11_403 OFFSET OM11_403  INSIDE OF LAYER O40M11preB

	
	F403M11_EXP = SIZE F403M11 BY ( WM11_403 / 2 + grid ) OVERUNDER	// merge the gaps
	O40M11preF1 = O40M11pre NOT (SIZE F403M11_EXP BY (SM11_402 + grid))
	O40M11preF = (SNAP (SIZE O40M11preF1 BY -grid) 5) AND O40M11preF1

	B40M11pre = (INT O40M11preF >= WM11_401 <= maxW_DM11V_4011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O40M11preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B40M11pre2 = RECTANGLE B40M11pre >= WM11_401 BY >= minL_DM11V_4011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B40M11pre3 = RECTANGLE B40M11pre2 <= maxW_DM11V_4011 BY <= maxL_DM11V_4011 ORTHOGONAL ONLY

	B40M11 = (B40M11pre3 NOT INTERACT (EXT B40M11pre3 < SM11_401 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B40M11s = ((SIZE B40M11 BY (SM11_401 + grid)) OR F301M11s) OR (SIZE F403M11_EXP BY (SM11_402 + grid))
	O40M11 = O40M11preF NOT B40M11s

	
	// 3rd, 0.5*1.2
	F402M11 = (RECTANGLES WM11_402 LM11_402 SM11_402 OFFSET OM11_402 INSIDE OF LAYER O40M11) NOT INTERACT IND_COIL_EXD
	F402M11s = (SIZE F402M11 BY (SM11_401 + grid)) OR B40M11s
	R402M11pre = O40M11 NOT F402M11s
	R402M11 = (SIZE R402M11pre BY (WM11_401/2 + grid) UNDEROVER TRUNCATE WM11_401) AND R402M11pre

	// 4th, 0.5*0.5
	F4012M11 = (RECTANGLES WM11_401 LM11_401 SM11_401 OFFSET OM11_401 INSIDE OF LAYER R402M11) NOT INTERACT IND_COIL_EXD
	F4012M11s = (SIZE F4012M11 BY (SM11_401 + grid)) OR F402M11s
	R4012M11pre = R402M11pre NOT F4012M11s
	R4012M11 = (SIZE R4012M11pre BY (WM11_401/2 + grid) UNDEROVER TRUNCATE WM11_401) AND R4012M11pre

	// 5th, regular 0.5*0.5
	F401M11 = (RECTANGLES WM11_401 LM11_401 SM11_401 INSIDE OF LAYER R4012M11) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F401M11s = (SIZE F401M11 BY (SM11_401 + grid)) OR F4012M11s

	F40M11 = (((B40M11 OR F402M11) OR F4012M11) OR F401M11) OR F403M11
	O50M11pre = (((PUSH (D50M11 OR emptyM11)) NOT FRAME11) NOT F401M11s) AND CHIP


	O50M11preA = SIZE O50M11pre BY - (DM11_503 + grid)
	O50M11preB = (SIZE O50M11preA BY (WM11_503 - grid) UNDEROVER TRUNCATE WM11_503) AND O50M11preA

	// 1st 2*2
	F503M11 = RECTANGLES WM11_503 LM11_503 SM11_503 OFFSET OM11_503  INSIDE OF LAYER O50M11preB

	
	F503M11_EXP = SIZE F503M11 BY ( WM11_503 / 2 + grid ) OVERUNDER	// merge the gaps
	O50M11preF1 = O50M11pre NOT (SIZE F503M11_EXP BY (SM11_502 + grid))
	O50M11preF = (SNAP (SIZE O50M11preF1 BY -grid) 5) AND O50M11preF1

	B50M11pre = (INT O50M11preF >= WM11_501 <= maxW_DM11V_5011 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE O50M11preF
	// 2nd, irregular dummy metal > 0.5*0.8
	B50M11pre2 = RECTANGLE B50M11pre >= WM11_501 BY >= minL_DM11V_5011 ORTHOGONAL ONLY
	// 2nd, irregular dummy metal length <= 1.2*6
	B50M11pre3 = RECTANGLE B50M11pre2 <= maxW_DM11V_5011 BY <= maxL_DM11V_5011 ORTHOGONAL ONLY

	B50M11 = (B50M11pre3 NOT INTERACT (EXT B50M11pre3 < SM11_501 ABUT SINGULAR REGION)) NOT INTERACT IND_COIL_EXD

	B50M11s = ((SIZE B50M11 BY (SM11_501 + grid)) OR F401M11s) OR (SIZE F503M11_EXP BY (SM11_502 + grid))
	O50M11 = O50M11preF NOT B50M11s

	
	// 3rd, 0.5*1.2
	F502M11 = (RECTANGLES WM11_502 LM11_502 SM11_502 OFFSET OM11_502 INSIDE OF LAYER O50M11) NOT INTERACT IND_COIL_EXD
	F502M11s = (SIZE F502M11 BY (SM11_501 + grid)) OR B50M11s
	R502M11pre = O50M11 NOT F502M11s
	R502M11 = (SIZE R502M11pre BY (WM11_501/2 + grid) UNDEROVER TRUNCATE WM11_501) AND R502M11pre

	// 4th, 0.5*0.5
	F5012M11 = (RECTANGLES WM11_501 LM11_501 SM11_501 OFFSET OM11_501 INSIDE OF LAYER R502M11) NOT INTERACT IND_COIL_EXD
	F5012M11s = (SIZE F5012M11 BY (SM11_501 + grid)) OR F502M11s
	R5012M11pre = R502M11pre NOT F5012M11s
	R5012M11 = (SIZE R5012M11pre BY (WM11_501/2 + grid) UNDEROVER TRUNCATE WM11_501) AND R5012M11pre

	// 5th, regular 0.5*0.5
	F501M11 = (RECTANGLES WM11_501 LM11_501 SM11_501 INSIDE OF LAYER R5012M11) NOT INTERACT IND_COIL_EXD //MAINTAIN SPACING
	F501M11s = (SIZE F501M11 BY (SM11_501 + grid)) OR F5012M11s

	F50M11 = (((B50M11 OR F502M11) OR F5012M11) OR F501M11) OR F503M11

//****************************************************************************
    
	exceedM11 = DENSITY M11x F30M11 F40M11 F50M11 > maxD_M11 
		   WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M11.den_exceed
	exceedM11DN2 = DENSITY M11x F30M11 F40M11 F50M11 > 0.9
	              WINDOW 20 STEP 10 INSIDE OF LAYER bulk BACKUP // PRINT M11.DN.2.den_exceed

	removeM11R = ((PUSH (exceedM11 AND (D50M11 OR emptyM11))) NOT FRAME11) AND CHIP 
	removeM11 = RECTANGLES 0.4 0.4 3.6 INSIDE OF LAYER removeM11R
	
	F30M11x = (F30M11 NOT INTERACT exceedM11DN2) NOT INTERACT removeM11
	F40M11x = (F40M11 NOT INTERACT exceedM11DN2) NOT INTERACT removeM11
	F50M11x = (F50M11 NOT INTERACT exceedM11DN2) NOT INTERACT removeM11
	FM11xA  = (F30M11x OR F40M11x) OR F50M11x
	FM11x   = FM11xA NOT INTERACT (EXT FM11xA < DM11_S_1 ABUT SINGULAR REGION)

#IFDEF FILL_OPCDM11
	lackM11 = DENSITY M11x FM11x < 0.2 
	         WINDOW WindowSize STEP WindowStep INSIDE OF LAYER bulk BACKUP // PRINT M11.den_lack
	RM11EXC = SIZE (((FM11x OR F303M11_EXP) OR F403M11_EXP) OR F503M11_EXP) BY (DM11_301 + grid)
	BigemptyM11 = PUSH ((SIZE emptyM11 BY 25 UNDEROVER) AND emptyM11)
    
	lackM11pRM = (((((PUSH lackM11) NOT RM11EXC) NOT BigemptyM11) NOT exceedM11) NOT FRAME11RM ) AND CHIP
	lackM11pRM_1 = WITH WIDTH lackM11pRM >= minWM11_304
	RM11p1 = RECTANGLES minLM11_304 minWM11_304 SM11_304 OFFSET OM11_304 INSIDE OF LAYER lackM11pRM_1
	lackM11pRM_2 = WITH WIDTH (lackM11pRM_1 NOT (SIZE RM11p1 BY (SM11_304 + grid))) >= minWM11_304
	RM11p2 = RECTANGLES minWM11_304 minLM11_304 SM11_304 OFFSET OM11_304 INSIDE OF LAYER lackM11pRM_2
        lackM11pRM_3pre = lackM11pRM_2 NOT (SIZE RM11p2 BY (SM11_304 + grid))
	lackM11pRM_3 = (SNAP (SIZE lackM11pRM_3pre BY -grid) 5) AND lackM11pRM_3pre 
	       
	RM11p3pre = (INT lackM11pRM_3 >= minWM11_304 <= maxWM11_304 ABUT < 90 OPPOSITE PARALLEL ONLY REGION) INSIDE lackM11pRM_3 
	RM11p3pre2 = RECTANGLE RM11p3pre >= minWM11_304 BY >= minLM11_304 ORTHOGONAL ONLY// 0.13*0.6
	RM11p3 = RECTANGLE RM11p3pre2 <= maxWM11_304 BY <= maxLM11_304 ORTHOGONAL ONLY// 0.2*6

	RM11A = ((((RM11p1 OR RM11p2) OR RM11p3) OUTSIDE RM11EXC) OUTSIDE FRAME11RM) NOT INTERACT IND_COIL_EXD
	RM11F = RM11A NOT INTERACT (EXT RM11A < SM11_304 ABUT SINGULAR REGION)

#ENDIF

DM11F = COPY FM11x   

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//***********************************************************************************************************
// begin INDDMY_MD/INDDMY_HD/INDDMY_COIL dummy metal generation process : filling pattern
//***********************************************************************************************************
#IFDEF 34K_THICK_M1
	FRAMEind34kdm1 = SIZE M1i BY (dm2M1_ind + grid) // DM1 to metal
	FRAMEind4534kdm1 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (dm452M1_ind + grid) // DM1 to 45 degree metal
	FRAMEind9kdm1 = COPY EMPTY
	FRAMEind459kdm1 = COPY EMPTY
	FRAMEind3kdm1 = COPY EMPTY
	FRAMEind453kdm1 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M1
	FRAMEind34kdm1 = COPY EMPTY
	FRAMEind4534kdm1 = COPY EMPTY
	FRAMEind9kdm1 = COPY EMPTY
	FRAMEind459kdm1 = COPY EMPTY
	FRAMEind3kdm1 = COPY EMPTY
	FRAMEind453kdm1 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M1
	FRAMEind34kdm1 = COPY EMPTY
	FRAMEind4534kdm1 = COPY EMPTY
	FRAMEind9kdm1 = SIZE M1i BY (dm2M1_ind + grid) // DM1 to metal
	FRAMEind459kdm1 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (dm452M1_ind + grid) // DM1 to 45 degree metal
	FRAMEind3kdm1 = COPY EMPTY
	FRAMEind453kdm1 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M1
	FRAMEind34kdm1 = COPY EMPTY
	FRAMEind4534kdm1 = COPY EMPTY
	FRAMEind9kdm1 = COPY EMPTY
	FRAMEind459kdm1 = COPY EMPTY
	FRAMEind3kdm1 = COPY EMPTY
	FRAMEind453kdm1 = COPY EMPTY
#ELSE	// 3K_THICK_M1
	FRAMEind34kdm1 = COPY EMPTY
	FRAMEind4534kdm1 = COPY EMPTY
	FRAMEind9kdm1 = COPY EMPTY
	FRAMEind459kdm1 = COPY EMPTY
	FRAMEind3kdm1 = SIZE M1i BY (dm2M1_ind + grid) // DM1 to metal
	FRAMEind453kdm1 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (dm452M1_ind + grid) // DM1 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M2
	FRAMEind34kdm2 = SIZE M2i BY (dm2M2_ind + grid) // DM2 to metal
	FRAMEind4534kdm2 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (dm452M2_ind + grid) // DM2 to 45 degree metal
	FRAMEind9kdm2 = COPY EMPTY
	FRAMEind459kdm2 = COPY EMPTY
	FRAMEind3kdm2 = COPY EMPTY
	FRAMEind453kdm2 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M2
	FRAMEind34kdm2 = COPY EMPTY
	FRAMEind4534kdm2 = COPY EMPTY
	FRAMEind9kdm2 = COPY EMPTY
	FRAMEind459kdm2 = COPY EMPTY
	FRAMEind3kdm2 = COPY EMPTY
	FRAMEind453kdm2 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M2
	FRAMEind34kdm2 = COPY EMPTY
	FRAMEind4534kdm2 = COPY EMPTY
	FRAMEind9kdm2 = SIZE M2i BY (dm2M2_ind + grid) // DM2 to metal
	FRAMEind459kdm2 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (dm452M2_ind + grid) // DM2 to 45 degree metal
	FRAMEind3kdm2 = COPY EMPTY
	FRAMEind453kdm2 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M2
	FRAMEind34kdm2 = COPY EMPTY
	FRAMEind4534kdm2 = COPY EMPTY
	FRAMEind9kdm2 = COPY EMPTY
	FRAMEind459kdm2 = COPY EMPTY
	FRAMEind3kdm2 = COPY EMPTY
	FRAMEind453kdm2 = COPY EMPTY
#ELSE	// 3K_THICK_M2
	FRAMEind34kdm2 = COPY EMPTY
	FRAMEind4534kdm2 = COPY EMPTY
	FRAMEind9kdm2 = COPY EMPTY
	FRAMEind459kdm2 = COPY EMPTY
	FRAMEind3kdm2 = SIZE M2i BY (dm2M2_ind + grid) // DM2 to metal
	FRAMEind453kdm2 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (dm452M2_ind + grid) // DM2 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M3
	FRAMEind34kdm3 = SIZE M3i BY (dm2M3_ind + grid) // DM3 to metal
	FRAMEind4534kdm3 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (dm452M3_ind + grid) // DM3 to 45 degree metal
	FRAMEind9kdm3 = COPY EMPTY
	FRAMEind459kdm3 = COPY EMPTY
	FRAMEind3kdm3 = COPY EMPTY
	FRAMEind453kdm3 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M3
	FRAMEind34kdm3 = COPY EMPTY
	FRAMEind4534kdm3 = COPY EMPTY
	FRAMEind9kdm3 = COPY EMPTY
	FRAMEind459kdm3 = COPY EMPTY
	FRAMEind3kdm3 = COPY EMPTY
	FRAMEind453kdm3 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M3
	FRAMEind34kdm3 = COPY EMPTY
	FRAMEind4534kdm3 = COPY EMPTY
	FRAMEind9kdm3 = SIZE M3i BY (dm2M3_ind + grid) // DM3 to metal
	FRAMEind459kdm3 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (dm452M3_ind + grid) // DM3 to 45 degree metal
	FRAMEind3kdm3 = COPY EMPTY
	FRAMEind453kdm3 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M3
	FRAMEind34kdm3 = COPY EMPTY
	FRAMEind4534kdm3 = COPY EMPTY
	FRAMEind9kdm3 = COPY EMPTY
	FRAMEind459kdm3 = COPY EMPTY
	FRAMEind3kdm3 = COPY EMPTY
	FRAMEind453kdm3 = COPY EMPTY
#ELSE	// 3K_THICK_M3
	FRAMEind34kdm3 = COPY EMPTY
	FRAMEind4534kdm3 = COPY EMPTY
	FRAMEind9kdm3 = COPY EMPTY
	FRAMEind459kdm3 = COPY EMPTY
	FRAMEind3kdm3 = SIZE M3i BY (dm2M3_ind + grid) // DM3 to metal
	FRAMEind453kdm3 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (dm452M3_ind + grid) // DM3 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M4
	FRAMEind34kdm4 = SIZE M4i BY (dm2M4_ind + grid) // DM4 to metal
	FRAMEind4534kdm4 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (dm452M4_ind + grid) // DM4 to 45 degree metal
	FRAMEind9kdm4 = COPY EMPTY
	FRAMEind459kdm4 = COPY EMPTY
	FRAMEind3kdm4 = COPY EMPTY
	FRAMEind453kdm4 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M4
	FRAMEind34kdm4 = COPY EMPTY
	FRAMEind4534kdm4 = COPY EMPTY
	FRAMEind9kdm4 = COPY EMPTY
	FRAMEind459kdm4 = COPY EMPTY
	FRAMEind3kdm4 = COPY EMPTY
	FRAMEind453kdm4 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M4
	FRAMEind34kdm4 = COPY EMPTY
	FRAMEind4534kdm4 = COPY EMPTY
	FRAMEind9kdm4 = SIZE M4i BY (dm2M4_ind + grid) // DM4 to metal
	FRAMEind459kdm4 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (dm452M4_ind + grid) // DM4 to 45 degree metal
	FRAMEind3kdm4 = COPY EMPTY
	FRAMEind453kdm4 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M4
	FRAMEind34kdm4 = COPY EMPTY
	FRAMEind4534kdm4 = COPY EMPTY
	FRAMEind9kdm4 = COPY EMPTY
	FRAMEind459kdm4 = COPY EMPTY
	FRAMEind3kdm4 = COPY EMPTY
	FRAMEind453kdm4 = COPY EMPTY
#ELSE	// 3K_THICK_M4
	FRAMEind34kdm4 = COPY EMPTY
	FRAMEind4534kdm4 = COPY EMPTY
	FRAMEind9kdm4 = COPY EMPTY
	FRAMEind459kdm4 = COPY EMPTY
	FRAMEind3kdm4 = SIZE M4i BY (dm2M4_ind + grid) // DM4 to metal
	FRAMEind453kdm4 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (dm452M4_ind + grid) // DM4 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M5
	FRAMEind34kdm5 = SIZE M5i BY (dm2M5_ind + grid) // DM5 to metal
	FRAMEind4534kdm5 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (dm452M5_ind + grid) // DM5 to 45 degree metal
	FRAMEind9kdm5 = COPY EMPTY
	FRAMEind459kdm5 = COPY EMPTY
	FRAMEind3kdm5 = COPY EMPTY
	FRAMEind453kdm5 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M5
	FRAMEind34kdm5 = COPY EMPTY
	FRAMEind4534kdm5 = COPY EMPTY
	FRAMEind9kdm5 = COPY EMPTY
	FRAMEind459kdm5 = COPY EMPTY
	FRAMEind3kdm5 = COPY EMPTY
	FRAMEind453kdm5 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M5
	FRAMEind34kdm5 = COPY EMPTY
	FRAMEind4534kdm5 = COPY EMPTY
	FRAMEind9kdm5 = SIZE M5i BY (dm2M5_ind + grid) // DM5 to metal
	FRAMEind459kdm5 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (dm452M5_ind + grid) // DM5 to 45 degree metal
	FRAMEind3kdm5 = COPY EMPTY
	FRAMEind453kdm5 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M5
	FRAMEind34kdm5 = COPY EMPTY
	FRAMEind4534kdm5 = COPY EMPTY
	FRAMEind9kdm5 = COPY EMPTY
	FRAMEind459kdm5 = COPY EMPTY
	FRAMEind3kdm5 = COPY EMPTY
	FRAMEind453kdm5 = COPY EMPTY
#ELSE	// 3K_THICK_M5
	FRAMEind34kdm5 = COPY EMPTY
	FRAMEind4534kdm5 = COPY EMPTY
	FRAMEind9kdm5 = COPY EMPTY
	FRAMEind459kdm5 = COPY EMPTY
	FRAMEind3kdm5 = SIZE M5i BY (dm2M5_ind + grid) // DM5 to metal
	FRAMEind453kdm5 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (dm452M5_ind + grid) // DM5 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M6
	FRAMEind34kdm6 = SIZE M6i BY (dm2M6_ind + grid) // DM6 to metal
	FRAMEind4534kdm6 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (dm452M6_ind + grid) // DM6 to 45 degree metal
	FRAMEind9kdm6 = COPY EMPTY
	FRAMEind459kdm6 = COPY EMPTY
	FRAMEind3kdm6 = COPY EMPTY
	FRAMEind453kdm6 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M6
	FRAMEind34kdm6 = COPY EMPTY
	FRAMEind4534kdm6 = COPY EMPTY
	FRAMEind9kdm6 = COPY EMPTY
	FRAMEind459kdm6 = COPY EMPTY
	FRAMEind3kdm6 = COPY EMPTY
	FRAMEind453kdm6 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M6
	FRAMEind34kdm6 = COPY EMPTY
	FRAMEind4534kdm6 = COPY EMPTY
	FRAMEind9kdm6 = SIZE M6i BY (dm2M6_ind + grid) // DM6 to metal
	FRAMEind459kdm6 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (dm452M6_ind + grid) // DM6 to 45 degree metal
	FRAMEind3kdm6 = COPY EMPTY
	FRAMEind453kdm6 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M6
	FRAMEind34kdm6 = COPY EMPTY
	FRAMEind4534kdm6 = COPY EMPTY
	FRAMEind9kdm6 = COPY EMPTY
	FRAMEind459kdm6 = COPY EMPTY
	FRAMEind3kdm6 = COPY EMPTY
	FRAMEind453kdm6 = COPY EMPTY
#ELSE	// 3K_THICK_M6
	FRAMEind34kdm6 = COPY EMPTY
	FRAMEind4534kdm6 = COPY EMPTY
	FRAMEind9kdm6 = COPY EMPTY
	FRAMEind459kdm6 = COPY EMPTY
	FRAMEind3kdm6 = SIZE M6i BY (dm2M6_ind + grid) // DM6 to metal
	FRAMEind453kdm6 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (dm452M6_ind + grid) // DM6 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M7
	FRAMEind34kdm7 = SIZE M7i BY (dm2M7_ind + grid) // DM7 to metal
	FRAMEind4534kdm7 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (dm452M7_ind + grid) // DM7 to 45 degree metal
	FRAMEind9kdm7 = COPY EMPTY
	FRAMEind459kdm7 = COPY EMPTY
	FRAMEind3kdm7 = COPY EMPTY
	FRAMEind453kdm7 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M7
	FRAMEind34kdm7 = COPY EMPTY
	FRAMEind4534kdm7 = COPY EMPTY
	FRAMEind9kdm7 = COPY EMPTY
	FRAMEind459kdm7 = COPY EMPTY
	FRAMEind3kdm7 = COPY EMPTY
	FRAMEind453kdm7 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M7
	FRAMEind34kdm7 = COPY EMPTY
	FRAMEind4534kdm7 = COPY EMPTY
	FRAMEind9kdm7 = SIZE M7i BY (dm2M7_ind + grid) // DM7 to metal
	FRAMEind459kdm7 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (dm452M7_ind + grid) // DM7 to 45 degree metal
	FRAMEind3kdm7 = COPY EMPTY
	FRAMEind453kdm7 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M7
	FRAMEind34kdm7 = COPY EMPTY
	FRAMEind4534kdm7 = COPY EMPTY
	FRAMEind9kdm7 = COPY EMPTY
	FRAMEind459kdm7 = COPY EMPTY
	FRAMEind3kdm7 = COPY EMPTY
	FRAMEind453kdm7 = COPY EMPTY
#ELSE	// 3K_THICK_M7
	FRAMEind34kdm7 = COPY EMPTY
	FRAMEind4534kdm7 = COPY EMPTY
	FRAMEind9kdm7 = COPY EMPTY
	FRAMEind459kdm7 = COPY EMPTY
	FRAMEind3kdm7 = SIZE M7i BY (dm2M7_ind + grid) // DM7 to metal
	FRAMEind453kdm7 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (dm452M7_ind + grid) // DM7 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M8
	FRAMEind34kdm8 = SIZE M8i BY (dm2M8_ind + grid) // DM8 to metal
	FRAMEind4534kdm8 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (dm452M8_ind + grid) // DM8 to 45 degree metal
	FRAMEind9kdm8 = COPY EMPTY
	FRAMEind459kdm8 = COPY EMPTY
	FRAMEind3kdm8 = COPY EMPTY
	FRAMEind453kdm8 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M8
	FRAMEind34kdm8 = COPY EMPTY
	FRAMEind4534kdm8 = COPY EMPTY
	FRAMEind9kdm8 = COPY EMPTY
	FRAMEind459kdm8 = COPY EMPTY
	FRAMEind3kdm8 = COPY EMPTY
	FRAMEind453kdm8 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M8
	FRAMEind34kdm8 = COPY EMPTY
	FRAMEind4534kdm8 = COPY EMPTY
	FRAMEind9kdm8 = SIZE M8i BY (dm2M8_ind + grid) // DM8 to metal
	FRAMEind459kdm8 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (dm452M8_ind + grid) // DM8 to 45 degree metal
	FRAMEind3kdm8 = COPY EMPTY
	FRAMEind453kdm8 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M8
	FRAMEind34kdm8 = COPY EMPTY
	FRAMEind4534kdm8 = COPY EMPTY
	FRAMEind9kdm8 = COPY EMPTY
	FRAMEind459kdm8 = COPY EMPTY
	FRAMEind3kdm8 = COPY EMPTY
	FRAMEind453kdm8 = COPY EMPTY
#ELSE	// 3K_THICK_M8
	FRAMEind34kdm8 = COPY EMPTY
	FRAMEind4534kdm8 = COPY EMPTY
	FRAMEind9kdm8 = COPY EMPTY
	FRAMEind459kdm8 = COPY EMPTY
	FRAMEind3kdm8 = SIZE M8i BY (dm2M8_ind + grid) // DM8 to metal
	FRAMEind453kdm8 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (dm452M8_ind + grid) // DM8 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M9
	FRAMEind34kdm9 = SIZE M9i BY (dm2M9_ind + grid) // DM9 to metal
	FRAMEind4534kdm9 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (dm452M9_ind + grid) // DM9 to 45 degree metal
	FRAMEind9kdm9 = COPY EMPTY
	FRAMEind459kdm9 = COPY EMPTY
	FRAMEind3kdm9 = COPY EMPTY
	FRAMEind453kdm9 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M9
	FRAMEind34kdm9 = COPY EMPTY
	FRAMEind4534kdm9 = COPY EMPTY
	FRAMEind9kdm9 = COPY EMPTY
	FRAMEind459kdm9 = COPY EMPTY
	FRAMEind3kdm9 = COPY EMPTY
	FRAMEind453kdm9 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M9
	FRAMEind34kdm9 = COPY EMPTY
	FRAMEind4534kdm9 = COPY EMPTY
	FRAMEind9kdm9 = SIZE M9i BY (dm2M9_ind + grid) // DM9 to metal
	FRAMEind459kdm9 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (dm452M9_ind + grid) // DM9 to 45 degree metal
	FRAMEind3kdm9 = COPY EMPTY
	FRAMEind453kdm9 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M9
	FRAMEind34kdm9 = COPY EMPTY
	FRAMEind4534kdm9 = COPY EMPTY
	FRAMEind9kdm9 = COPY EMPTY
	FRAMEind459kdm9 = COPY EMPTY
	FRAMEind3kdm9 = COPY EMPTY
	FRAMEind453kdm9 = COPY EMPTY
#ELSE	// 3K_THICK_M9
	FRAMEind34kdm9 = COPY EMPTY
	FRAMEind4534kdm9 = COPY EMPTY
	FRAMEind9kdm9 = COPY EMPTY
	FRAMEind459kdm9 = COPY EMPTY
	FRAMEind3kdm9 = SIZE M9i BY (dm2M9_ind + grid) // DM9 to metal
	FRAMEind453kdm9 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (dm452M9_ind + grid) // DM9 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M10
	FRAMEind34kdm10 = SIZE M10i BY (dm2M10_ind + grid) // DM10 to metal
	FRAMEind4534kdm10 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (dm452M10_ind + grid) // DM10 to 45 degree metal
	FRAMEind9kdm10 = COPY EMPTY
	FRAMEind459kdm10 = COPY EMPTY
	FRAMEind3kdm10 = COPY EMPTY
	FRAMEind453kdm10 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M10
	FRAMEind34kdm10 = COPY EMPTY
	FRAMEind4534kdm10 = COPY EMPTY
	FRAMEind9kdm10 = COPY EMPTY
	FRAMEind459kdm10 = COPY EMPTY
	FRAMEind3kdm10 = COPY EMPTY
	FRAMEind453kdm10 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M10
	FRAMEind34kdm10 = COPY EMPTY
	FRAMEind4534kdm10 = COPY EMPTY
	FRAMEind9kdm10 = SIZE M10i BY (dm2M10_ind + grid) // DM10 to metal
	FRAMEind459kdm10 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (dm452M10_ind + grid) // DM10 to 45 degree metal
	FRAMEind3kdm10 = COPY EMPTY
	FRAMEind453kdm10 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M10
	FRAMEind34kdm10 = COPY EMPTY
	FRAMEind4534kdm10 = COPY EMPTY
	FRAMEind9kdm10 = COPY EMPTY
	FRAMEind459kdm10 = COPY EMPTY
	FRAMEind3kdm10 = COPY EMPTY
	FRAMEind453kdm10 = COPY EMPTY
#ELSE	// 3K_THICK_M10
	FRAMEind34kdm10 = COPY EMPTY
	FRAMEind4534kdm10 = COPY EMPTY
	FRAMEind9kdm10 = COPY EMPTY
	FRAMEind459kdm10 = COPY EMPTY
	FRAMEind3kdm10 = SIZE M10i BY (dm2M10_ind + grid) // DM10 to metal
	FRAMEind453kdm10 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (dm452M10_ind + grid) // DM10 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF 34K_THICK_M11
	FRAMEind34kdm11 = SIZE M11i BY (dm2M11_ind + grid) // DM11 to metal
	FRAMEind4534kdm11 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (dm452M11_ind + grid) // DM11 to 45 degree metal
	FRAMEind9kdm11 = COPY EMPTY
	FRAMEind459kdm11 = COPY EMPTY
	FRAMEind3kdm11 = COPY EMPTY
	FRAMEind453kdm11 = COPY EMPTY
#ELSE
#IFDEF 12K_THICK_M11
	FRAMEind34kdm11 = COPY EMPTY
	FRAMEind4534kdm11 = COPY EMPTY
	FRAMEind9kdm11 = COPY EMPTY
	FRAMEind459kdm11 = COPY EMPTY
	FRAMEind3kdm11 = COPY EMPTY
	FRAMEind453kdm11 = COPY EMPTY
#ELSE
#IFDEF 9K_THICK_M11
	FRAMEind34kdm11 = COPY EMPTY
	FRAMEind4534kdm11 = COPY EMPTY
	FRAMEind9kdm11 = SIZE M11i BY (dm2M11_ind + grid) // DM11 to metal
	FRAMEind459kdm11 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (dm452M11_ind + grid) // DM11 to 45 degree metal
	FRAMEind3kdm11 = COPY EMPTY
	FRAMEind453kdm11 = COPY EMPTY
#ELSE
#IFDEF 5K_THICK_M11
	FRAMEind34kdm11 = COPY EMPTY
	FRAMEind4534kdm11 = COPY EMPTY
	FRAMEind9kdm11 = COPY EMPTY
	FRAMEind459kdm11 = COPY EMPTY
	FRAMEind3kdm11 = COPY EMPTY
	FRAMEind453kdm11 = COPY EMPTY
#ELSE	// 3K_THICK_M11
	FRAMEind34kdm11 = COPY EMPTY
	FRAMEind4534kdm11 = COPY EMPTY
	FRAMEind9kdm11 = COPY EMPTY
	FRAMEind459kdm11 = COPY EMPTY
	FRAMEind3kdm11 = SIZE M11i BY (dm2M11_ind + grid) // DM11 to metal
	FRAMEind453kdm11 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (dm452M11_ind + grid) // DM11 to 45 degree metal
#ENDIF
#ENDIF
#ENDIF
#ENDIF


#IFDEF FILL_indDM1
#IFDEF 34K_THICK_M1
	ind_minOPENM1 = DENSITY M1x < minD_M1 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den
	ind_emptyOPENM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M1Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M1ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M1InnerHole = HOLES M1i INNER
	ind_M1BigHole = SIZE ind_M1InnerHole BY - excludeHoleSize/2
	ind_M1ExcHole = (ind_M1InnerHole OUTSIDE ind_M1BigHole) NOT M1i
        #ENDIF	
        ind_BLOCK1    = SIZE DM1EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA1   = SIZE M1i BY (dm2M1 + grid)
	ind_M1mid     = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i
	ind_M1wide    = (SIZE ind_M1mid BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i
	ind_FRAMEB1   = SIZE ind_M1wide BY (dm2WM1 + grid) // DM1 to 4.5um wide metal 3um
	ind_FRAMEC1   = SIZE DUM1 BY (dm2DM1 + grid)    
	ind_FRAME1Pre = ((ind_FRAMEA1 OR ind_FRAMEB1) OR ind_FRAMEC1) OR ind_M1ExcHole
	FRAMEdm1 = SIZE M1i BY (dm2M1_ind + grid) // DM1 to metal
	ind_FRAMEA1_45 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (dm452M1_ind + grid) // DM1 to 45 degree metal

    #IFDEF CBM_OVER_M1
	    ind_FRAME1 = ((((((ind_FRAME1Pre OR ind_BLOCK1) OR ind_NFILL) OR ind_FRAMEA1_45) OR FRAMEdm1) OR CBMx) OR HVxx) OR OD_RDG_M1
	#ELSE
	    ind_FRAME1 = (((((ind_FRAME1Pre OR ind_BLOCK1) OR ind_NFILL) OR ind_FRAMEA1_45) OR FRAMEdm1) OR HVxx) OR OD_RDG_M1
	#ENDIF
	    ind_FILL1_1 = INDDMY_MD_FILL NOT ind_FRAME1 
	    ind_FILL1_2 = INDDMY_HD_FILL NOT ind_FRAME1
	    ind_M1F_1 = RECTANGLES dmW_M1_ind dmL_M1_ind dmS_M1_ind_1 OFFSET dmO_M1_ind_1 INSIDE OF LAYER ind_FILL1_1
	    ind_M1F_2 = RECTANGLES dmW_M1_ind dmL_M1_ind dmS_M1_ind_2 OFFSET dmO_M1_ind_2 INSIDE OF LAYER ind_FILL1_2

	ind_FM1_1 = ind_M1F_1 NOT INTERACT (EXT ind_M1F_1 < dmS_M1_ind_1 ABUT SINGULAR REGION)
	ind_FM1_2 = ind_M1F_2 NOT INTERACT (EXT ind_M1F_2 < dmS_M1_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM1_1 = DENSITY M1x ind_FM1_1 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL1_1 BACKUP 
	ind_maxOPENM1_2 = DENSITY M1x ind_FM1_2 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL1_2 BACKUP
	ind_DM1F_1 = ind_FM1_1 OUTSIDE ind_maxOPENM1_1
	ind_DM1F_2 = ind_FM1_2 OUTSIDE ind_maxOPENM1_2
	ind_DM1F = ind_DM1F_1 OR ind_DM1F_2
#ELSE
#IFDEF 12K_THICK_M1
#ELSE
#IFDEF 9K_THICK_M1
	ind_minOPENM1 = DENSITY M1x < minD_M1 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M1Min.den
	ind_emptyOPENM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M1Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M1ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M1InnerHole = HOLES M1i INNER
	ind_M1BigHole = SIZE ind_M1InnerHole BY - excludeHoleSize/2
	ind_M1ExcHole = (ind_M1InnerHole OUTSIDE ind_M1BigHole) NOT M1i
        #ENDIF	
        ind_BLOCK1    = SIZE DM1EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA1   = SIZE M1i BY (dm2M1 + grid)
	ind_M1mid     = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i
	ind_M1wide    = (SIZE ind_M1mid BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i
	ind_FRAMEB1   = SIZE ind_M1wide BY (dm2WM1 + grid) // DM1 to 4.5um wide metal 3um
	ind_FRAMEC1   = SIZE DUM1 BY (dm2DM1 + grid)    
	ind_FRAME1Pre = ((ind_FRAMEA1 OR ind_FRAMEB1) OR ind_FRAMEC1) OR ind_M1ExcHole
	FRAMEdm1 = SIZE M1i BY (dm2M1_ind + grid) // DM1 to metal
	ind_FRAMEA1_45 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (dm452M1_ind + grid) // DM1 to 45 degree metal

    #IFDEF CBM_OVER_M1
	    ind_FRAME1 = (((((((ind_FRAME1Pre OR ind_BLOCK1) OR ind_NFILL) OR ind_FRAMEA1_45) OR FRAMEdm1) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M1
	#ELSE
	    ind_FRAME1 = ((((((ind_FRAME1Pre OR ind_BLOCK1) OR ind_NFILL) OR ind_FRAMEA1_45) OR FRAMEdm1) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M1
	#ENDIF
	    ind_FILL1_1 = INDDMY_MD_FILL NOT ind_FRAME1 
	    ind_FILL1_2 = INDDMY_HD_FILL NOT ind_FRAME1
	    ind_M1F_1 = RECTANGLES dmW_M1_ind dmL_M1_ind dmS_M1_ind_1 OFFSET dmO_M1_ind_1 INSIDE OF LAYER ind_FILL1_1
	    ind_M1F_2 = RECTANGLES dmW_M1_ind dmL_M1_ind dmS_M1_ind_2 OFFSET dmO_M1_ind_2 INSIDE OF LAYER ind_FILL1_2

	ind_FM1_1 = ind_M1F_1 NOT INTERACT (EXT ind_M1F_1 < dmS_M1_ind_1 ABUT SINGULAR REGION)
	ind_FM1_2 = ind_M1F_2 NOT INTERACT (EXT ind_M1F_2 < dmS_M1_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM1_1 = DENSITY M1x ind_FM1_1 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL1_1 BACKUP 
	ind_maxOPENM1_2 = DENSITY M1x ind_FM1_2 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL1_2 BACKUP
	ind_DM1F_1 = ind_FM1_1 OUTSIDE ind_maxOPENM1_1
	ind_DM1F_2 = ind_FM1_2 OUTSIDE ind_maxOPENM1_2
	ind_DM1F = ind_DM1F_1 OR ind_DM1F_2


#ELSE
#IFDEF 5K_THICK_M1
#ELSE	// 3K_THICK_M1
	ind_D30M1 = DENSITY M1x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M1.den30
	ind_D40M1 = DENSITY M1x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M1.den40
	ind_D50M1 = DENSITY M1x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M1.den50
	ind_emptyM1 = DENSITY M1x < emptyD_M1 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M1.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M1ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M1InnerHole = HOLES M1i INNER
	ind_M1BigHole = SIZE ind_M1InnerHole BY - excludeHoleSize/2
	ind_M1ExcHole = (ind_M1InnerHole OUTSIDE ind_M1BigHole) NOT M1i
        #ENDIF	
        ind_BLOCK1    = SIZE DM1EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA1   = SIZE M1i BY (DM1_301 + grid)
	ind_FRAMEA1_o45 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (DM145_301 + grid)
	ind_M1mid     = (SIZE M1i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M1i

	ind_M1wide_W1 = (SIZE ind_M1mid BY wideM1_W1/2 UNDEROVER TRUNCATE wideM1_W1/2) AND M1i	
	ind_M1wide_W11 = (SIZE ind_M1wide_W1 BY wideM1_W11/2 UNDEROVER TRUNCATE wideM1_W11/2) AND M1i
	ind_M1wide_W2 = (SIZE ind_M1wide_W1 BY wideM1_W2/2 UNDEROVER TRUNCATE wideM1_W2/2) AND M1i
	ind_M1wide = (SIZE ind_M1wide_W2 BY wideM1/2 UNDEROVER TRUNCATE wideM1/2) AND M1i
	
	ind_FRAMEB1   = SIZE ind_M1wide BY (dm2WM1 + grid) // DM1 to 4.5um wide metal 3um
	ind_FRAMEB1_W2 = SIZE ind_M1wide_W2 BY (dm2WM1_W2 + grid) // DM1 to 1.5um wide metal 0.5
	ind_FRAMEB1_W1 = SIZE ind_M1wide_W1 BY (dm2WM1_W1 + grid) // DM1 to 0.21um wide metal
	ind_FRAMEB1_W11 = SIZE ind_M1wide_W11 BY (dm2WM1_W11 + grid) // DM1 to 0.38um wide metal

	ind_FRAMEC1   = SIZE DUM1 BY (dm2DM1 + grid)    
	ind_FRAME1Pre = ((((ind_FRAMEA1 OR ind_FRAMEB1) OR ind_FRAMEC1) OR ind_M1ExcHole) OR ind_FRAMEB1_W2) OR ind_FRAMEA1_o45
	FRAMEdm1 = SIZE M1i BY (dm2M1_ind + grid) // DM1 to metal
	ind_FRAMEA1_45 = EXPAND EDGE (M1i ANGLE == 45) OUTSIDE BY (dm452M1_ind + grid) // DM1 to 45 degree metal

    #IFDEF CBM_OVER_M1
	    ind_FRAME1 = ((((((ind_FRAME1Pre OR ind_BLOCK1) OR ind_NFILL) OR ind_FRAMEA1_45) OR FRAMEdm1) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M1
	#ELSE
	    ind_FRAME1 = (((((ind_FRAME1Pre OR ind_BLOCK1) OR ind_NFILL) OR ind_FRAMEA1_45) OR FRAMEdm1) OR (HVxx OR HVNWxx)) OR OD_RDG_M1
	#ENDIF
	    ind_FILL1_1 = INDDMY_MD_FILL NOT ind_FRAME1 
	    ind_FILL1_2 = INDDMY_HD_FILL NOT ind_FRAME1
	    ind_M1F_1 = RECTANGLES dmW_M1_ind dmL_M1_ind dmS_M1_ind_1 OFFSET dmO_M1_ind_1 INSIDE OF LAYER ind_FILL1_1
	    ind_M1F_2 = RECTANGLES dmW_M1_ind dmL_M1_ind dmS_M1_ind_2 OFFSET dmO_M1_ind_2 INSIDE OF LAYER ind_FILL1_2

	ind_FM1_1 = ind_M1F_1 NOT INTERACT (EXT ind_M1F_1 < dmS_M1_ind_1 ABUT SINGULAR REGION)
	ind_FM1_2 = ind_M1F_2 NOT INTERACT (EXT ind_M1F_2 < dmS_M1_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM1_1 = DENSITY M1x ind_FM1_1 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL1_1 BACKUP 
	ind_maxOPENM1_2 = DENSITY M1x ind_FM1_2 > maxD_M1 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL1_2 BACKUP
	ind_DM1F_1 = ind_FM1_1 OUTSIDE ind_maxOPENM1_1
	ind_DM1F_2 = ind_FM1_2 OUTSIDE ind_maxOPENM1_2
	ind_DM1F = ind_DM1F_1 OR ind_DM1F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM2
#IFDEF 34K_THICK_M2
	ind_minOPENM2 = DENSITY M2x < minD_M2 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den
	ind_emptyOPENM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M2Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M2ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M2InnerHole = HOLES M2i INNER
	ind_M2BigHole = SIZE ind_M2InnerHole BY - excludeHoleSize/2
	ind_M2ExcHole = (ind_M2InnerHole OUTSIDE ind_M2BigHole) NOT M2i
        #ENDIF	
        ind_BLOCK2    = SIZE DM2EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA2   = SIZE M2i BY (dm2M2 + grid)
	ind_M2mid     = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i
	ind_M2wide    = (SIZE ind_M2mid BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i
	ind_FRAMEB2   = SIZE ind_M2wide BY (dm2WM2 + grid) // DM2 to 4.5um wide metal 3um
	ind_FRAMEC2   = SIZE DUM2 BY (dm2DM2 + grid)    
	ind_FRAME2Pre = ((ind_FRAMEA2 OR ind_FRAMEB2) OR ind_FRAMEC2) OR ind_M2ExcHole
	FRAMEdm2 = SIZE M2i BY (dm2M2_ind + grid) // DM2 to metal
	ind_FRAMEA2_45 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (dm452M2_ind + grid) // DM2 to 45 degree metal

    #IFDEF CBM_OVER_M2
	    ind_FRAME2 = ((((((ind_FRAME2Pre OR ind_BLOCK2) OR ind_NFILL) OR ind_FRAMEA2_45) OR FRAMEdm2) OR CBMx) OR HVxx) OR OD_RDG_M2
	#ELSE
	    ind_FRAME2 = (((((ind_FRAME2Pre OR ind_BLOCK2) OR ind_NFILL) OR ind_FRAMEA2_45) OR FRAMEdm2) OR HVxx) OR OD_RDG_M2
	#ENDIF
	    ind_FILL2_1 = INDDMY_MD_FILL NOT ind_FRAME2 
	    ind_FILL2_2 = INDDMY_HD_FILL NOT ind_FRAME2
	    ind_M2F_1 = RECTANGLES dmW_M2_ind dmL_M2_ind dmS_M2_ind_1 OFFSET dmO_M2_ind_1 INSIDE OF LAYER ind_FILL2_1
	    ind_M2F_2 = RECTANGLES dmW_M2_ind dmL_M2_ind dmS_M2_ind_2 OFFSET dmO_M2_ind_2 INSIDE OF LAYER ind_FILL2_2

	ind_FM2_1 = ind_M2F_1 NOT INTERACT (EXT ind_M2F_1 < dmS_M2_ind_1 ABUT SINGULAR REGION)
	ind_FM2_2 = ind_M2F_2 NOT INTERACT (EXT ind_M2F_2 < dmS_M2_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM2_1 = DENSITY M2x ind_FM2_1 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL2_1 BACKUP 
	ind_maxOPENM2_2 = DENSITY M2x ind_FM2_2 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL2_2 BACKUP
	ind_DM2F_1 = ind_FM2_1 OUTSIDE ind_maxOPENM2_1
	ind_DM2F_2 = ind_FM2_2 OUTSIDE ind_maxOPENM2_2
	ind_DM2F = ind_DM2F_1 OR ind_DM2F_2
#ELSE
#IFDEF 12K_THICK_M2
#ELSE
#IFDEF 9K_THICK_M2
	ind_minOPENM2 = DENSITY M2x < minD_M2 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M2Min.den
	ind_emptyOPENM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M2Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M2ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M2InnerHole = HOLES M2i INNER
	ind_M2BigHole = SIZE ind_M2InnerHole BY - excludeHoleSize/2
	ind_M2ExcHole = (ind_M2InnerHole OUTSIDE ind_M2BigHole) NOT M2i
        #ENDIF	
        ind_BLOCK2    = SIZE DM2EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA2   = SIZE M2i BY (dm2M2 + grid)
	ind_M2mid     = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i
	ind_M2wide    = (SIZE ind_M2mid BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i
	ind_FRAMEB2   = SIZE ind_M2wide BY (dm2WM2 + grid) // DM2 to 4.5um wide metal 3um
	ind_FRAMEC2   = SIZE DUM2 BY (dm2DM2 + grid)    
	ind_FRAME2Pre = ((ind_FRAMEA2 OR ind_FRAMEB2) OR ind_FRAMEC2) OR ind_M2ExcHole
	FRAMEdm2 = SIZE M2i BY (dm2M2_ind + grid) // DM2 to metal
	ind_FRAMEA2_45 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (dm452M2_ind + grid) // DM2 to 45 degree metal

    #IFDEF CBM_OVER_M2
	    ind_FRAME2 = (((((((ind_FRAME2Pre OR ind_BLOCK2) OR ind_NFILL) OR ind_FRAMEA2_45) OR FRAMEdm2) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M2
	#ELSE
	    ind_FRAME2 = ((((((ind_FRAME2Pre OR ind_BLOCK2) OR ind_NFILL) OR ind_FRAMEA2_45) OR FRAMEdm2) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M2
	#ENDIF
	    ind_FILL2_1 = INDDMY_MD_FILL NOT ind_FRAME2 
	    ind_FILL2_2 = INDDMY_HD_FILL NOT ind_FRAME2
	    ind_M2F_1 = RECTANGLES dmW_M2_ind dmL_M2_ind dmS_M2_ind_1 OFFSET dmO_M2_ind_1 INSIDE OF LAYER ind_FILL2_1
	    ind_M2F_2 = RECTANGLES dmW_M2_ind dmL_M2_ind dmS_M2_ind_2 OFFSET dmO_M2_ind_2 INSIDE OF LAYER ind_FILL2_2

	ind_FM2_1 = ind_M2F_1 NOT INTERACT (EXT ind_M2F_1 < dmS_M2_ind_1 ABUT SINGULAR REGION)
	ind_FM2_2 = ind_M2F_2 NOT INTERACT (EXT ind_M2F_2 < dmS_M2_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM2_1 = DENSITY M2x ind_FM2_1 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL2_1 BACKUP 
	ind_maxOPENM2_2 = DENSITY M2x ind_FM2_2 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL2_2 BACKUP
	ind_DM2F_1 = ind_FM2_1 OUTSIDE ind_maxOPENM2_1
	ind_DM2F_2 = ind_FM2_2 OUTSIDE ind_maxOPENM2_2
	ind_DM2F = ind_DM2F_1 OR ind_DM2F_2


#ELSE
#IFDEF 5K_THICK_M2
#ELSE	// 3K_THICK_M2
	ind_D30M2 = DENSITY M2x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M2.den30
	ind_D40M2 = DENSITY M2x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M2.den40
	ind_D50M2 = DENSITY M2x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M2.den50
	ind_emptyM2 = DENSITY M2x < emptyD_M2 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M2.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M2ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M2InnerHole = HOLES M2i INNER
	ind_M2BigHole = SIZE ind_M2InnerHole BY - excludeHoleSize/2
	ind_M2ExcHole = (ind_M2InnerHole OUTSIDE ind_M2BigHole) NOT M2i
        #ENDIF	
        ind_BLOCK2    = SIZE DM2EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA2   = SIZE M2i BY (DM2_301 + grid)
	ind_FRAMEA2_o45 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (DM245_301 + grid)
	ind_M2mid     = (SIZE M2i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M2i

	ind_M2wide_W1 = (SIZE ind_M2mid BY wideM2_W1/2 UNDEROVER TRUNCATE wideM2_W1/2) AND M2i	
	ind_M2wide_W11 = (SIZE ind_M2wide_W1 BY wideM2_W11/2 UNDEROVER TRUNCATE wideM2_W11/2) AND M2i
	ind_M2wide_W2 = (SIZE ind_M2wide_W1 BY wideM2_W2/2 UNDEROVER TRUNCATE wideM2_W2/2) AND M2i
	ind_M2wide = (SIZE ind_M2wide_W2 BY wideM2/2 UNDEROVER TRUNCATE wideM2/2) AND M2i
	
	ind_FRAMEB2   = SIZE ind_M2wide BY (dm2WM2 + grid) // DM2 to 4.5um wide metal 3um
	ind_FRAMEB2_W2 = SIZE ind_M2wide_W2 BY (dm2WM2_W2 + grid) // DM2 to 1.5um wide metal 0.5
	ind_FRAMEB2_W1 = SIZE ind_M2wide_W1 BY (dm2WM2_W1 + grid) // DM2 to 0.21um wide metal
	ind_FRAMEB2_W11 = SIZE ind_M2wide_W11 BY (dm2WM2_W11 + grid) // DM2 to 0.38um wide metal

	ind_FRAMEC2   = SIZE DUM2 BY (dm2DM2 + grid)    
	ind_FRAME2Pre = ((((ind_FRAMEA2 OR ind_FRAMEB2) OR ind_FRAMEC2) OR ind_M2ExcHole) OR ind_FRAMEB2_W2) OR ind_FRAMEA2_o45
	FRAMEdm2 = SIZE M2i BY (dm2M2_ind + grid) // DM2 to metal
	ind_FRAMEA2_45 = EXPAND EDGE (M2i ANGLE == 45) OUTSIDE BY (dm452M2_ind + grid) // DM2 to 45 degree metal

    #IFDEF CBM_OVER_M2
	    ind_FRAME2 = ((((((ind_FRAME2Pre OR ind_BLOCK2) OR ind_NFILL) OR ind_FRAMEA2_45) OR FRAMEdm2) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M2
	#ELSE
	    ind_FRAME2 = (((((ind_FRAME2Pre OR ind_BLOCK2) OR ind_NFILL) OR ind_FRAMEA2_45) OR FRAMEdm2) OR (HVxx OR HVNWxx)) OR OD_RDG_M2
	#ENDIF
	    ind_FILL2_1 = INDDMY_MD_FILL NOT ind_FRAME2 
	    ind_FILL2_2 = INDDMY_HD_FILL NOT ind_FRAME2
	    ind_M2F_1 = RECTANGLES dmW_M2_ind dmL_M2_ind dmS_M2_ind_1 OFFSET dmO_M2_ind_1 INSIDE OF LAYER ind_FILL2_1
	    ind_M2F_2 = RECTANGLES dmW_M2_ind dmL_M2_ind dmS_M2_ind_2 OFFSET dmO_M2_ind_2 INSIDE OF LAYER ind_FILL2_2

	ind_FM2_1 = ind_M2F_1 NOT INTERACT (EXT ind_M2F_1 < dmS_M2_ind_1 ABUT SINGULAR REGION)
	ind_FM2_2 = ind_M2F_2 NOT INTERACT (EXT ind_M2F_2 < dmS_M2_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM2_1 = DENSITY M2x ind_FM2_1 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL2_1 BACKUP 
	ind_maxOPENM2_2 = DENSITY M2x ind_FM2_2 > maxD_M2 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL2_2 BACKUP
	ind_DM2F_1 = ind_FM2_1 OUTSIDE ind_maxOPENM2_1
	ind_DM2F_2 = ind_FM2_2 OUTSIDE ind_maxOPENM2_2
	ind_DM2F = ind_DM2F_1 OR ind_DM2F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM3
#IFDEF 34K_THICK_M3
	ind_minOPENM3 = DENSITY M3x < minD_M3 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den
	ind_emptyOPENM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M3Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M3ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M3InnerHole = HOLES M3i INNER
	ind_M3BigHole = SIZE ind_M3InnerHole BY - excludeHoleSize/2
	ind_M3ExcHole = (ind_M3InnerHole OUTSIDE ind_M3BigHole) NOT M3i
        #ENDIF	
        ind_BLOCK3    = SIZE DM3EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA3   = SIZE M3i BY (dm2M3 + grid)
	ind_M3mid     = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i
	ind_M3wide    = (SIZE ind_M3mid BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i
	ind_FRAMEB3   = SIZE ind_M3wide BY (dm2WM3 + grid) // DM3 to 4.5um wide metal 3um
	ind_FRAMEC3   = SIZE DUM3 BY (dm2DM3 + grid)    
	ind_FRAME3Pre = ((ind_FRAMEA3 OR ind_FRAMEB3) OR ind_FRAMEC3) OR ind_M3ExcHole
	FRAMEdm3 = SIZE M3i BY (dm2M3_ind + grid) // DM3 to metal
	ind_FRAMEA3_45 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (dm452M3_ind + grid) // DM3 to 45 degree metal

    #IFDEF CBM_OVER_M3
	    ind_FRAME3 = ((((((ind_FRAME3Pre OR ind_BLOCK3) OR ind_NFILL) OR ind_FRAMEA3_45) OR FRAMEdm3) OR CBMx) OR HVxx) OR OD_RDG_M3
	#ELSE
	    ind_FRAME3 = (((((ind_FRAME3Pre OR ind_BLOCK3) OR ind_NFILL) OR ind_FRAMEA3_45) OR FRAMEdm3) OR HVxx) OR OD_RDG_M3
	#ENDIF
	    ind_FILL3_1 = INDDMY_MD_FILL NOT ind_FRAME3 
	    ind_FILL3_2 = INDDMY_HD_FILL NOT ind_FRAME3
	    ind_M3F_1 = RECTANGLES dmW_M3_ind dmL_M3_ind dmS_M3_ind_1 OFFSET dmO_M3_ind_1 INSIDE OF LAYER ind_FILL3_1
	    ind_M3F_2 = RECTANGLES dmW_M3_ind dmL_M3_ind dmS_M3_ind_2 OFFSET dmO_M3_ind_2 INSIDE OF LAYER ind_FILL3_2

	ind_FM3_1 = ind_M3F_1 NOT INTERACT (EXT ind_M3F_1 < dmS_M3_ind_1 ABUT SINGULAR REGION)
	ind_FM3_2 = ind_M3F_2 NOT INTERACT (EXT ind_M3F_2 < dmS_M3_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM3_1 = DENSITY M3x ind_FM3_1 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL3_1 BACKUP 
	ind_maxOPENM3_2 = DENSITY M3x ind_FM3_2 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL3_2 BACKUP
	ind_DM3F_1 = ind_FM3_1 OUTSIDE ind_maxOPENM3_1
	ind_DM3F_2 = ind_FM3_2 OUTSIDE ind_maxOPENM3_2
	ind_DM3F = ind_DM3F_1 OR ind_DM3F_2
#ELSE
#IFDEF 12K_THICK_M3
#ELSE
#IFDEF 9K_THICK_M3
	ind_minOPENM3 = DENSITY M3x < minD_M3 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M3Min.den
	ind_emptyOPENM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M3Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M3ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M3InnerHole = HOLES M3i INNER
	ind_M3BigHole = SIZE ind_M3InnerHole BY - excludeHoleSize/2
	ind_M3ExcHole = (ind_M3InnerHole OUTSIDE ind_M3BigHole) NOT M3i
        #ENDIF	
        ind_BLOCK3    = SIZE DM3EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA3   = SIZE M3i BY (dm2M3 + grid)
	ind_M3mid     = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i
	ind_M3wide    = (SIZE ind_M3mid BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i
	ind_FRAMEB3   = SIZE ind_M3wide BY (dm2WM3 + grid) // DM3 to 4.5um wide metal 3um
	ind_FRAMEC3   = SIZE DUM3 BY (dm2DM3 + grid)    
	ind_FRAME3Pre = ((ind_FRAMEA3 OR ind_FRAMEB3) OR ind_FRAMEC3) OR ind_M3ExcHole
	FRAMEdm3 = SIZE M3i BY (dm2M3_ind + grid) // DM3 to metal
	ind_FRAMEA3_45 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (dm452M3_ind + grid) // DM3 to 45 degree metal

    #IFDEF CBM_OVER_M3
	    ind_FRAME3 = (((((((ind_FRAME3Pre OR ind_BLOCK3) OR ind_NFILL) OR ind_FRAMEA3_45) OR FRAMEdm3) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M3
	#ELSE
	    ind_FRAME3 = ((((((ind_FRAME3Pre OR ind_BLOCK3) OR ind_NFILL) OR ind_FRAMEA3_45) OR FRAMEdm3) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M3
	#ENDIF
	    ind_FILL3_1 = INDDMY_MD_FILL NOT ind_FRAME3 
	    ind_FILL3_2 = INDDMY_HD_FILL NOT ind_FRAME3
	    ind_M3F_1 = RECTANGLES dmW_M3_ind dmL_M3_ind dmS_M3_ind_1 OFFSET dmO_M3_ind_1 INSIDE OF LAYER ind_FILL3_1
	    ind_M3F_2 = RECTANGLES dmW_M3_ind dmL_M3_ind dmS_M3_ind_2 OFFSET dmO_M3_ind_2 INSIDE OF LAYER ind_FILL3_2

	ind_FM3_1 = ind_M3F_1 NOT INTERACT (EXT ind_M3F_1 < dmS_M3_ind_1 ABUT SINGULAR REGION)
	ind_FM3_2 = ind_M3F_2 NOT INTERACT (EXT ind_M3F_2 < dmS_M3_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM3_1 = DENSITY M3x ind_FM3_1 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL3_1 BACKUP 
	ind_maxOPENM3_2 = DENSITY M3x ind_FM3_2 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL3_2 BACKUP
	ind_DM3F_1 = ind_FM3_1 OUTSIDE ind_maxOPENM3_1
	ind_DM3F_2 = ind_FM3_2 OUTSIDE ind_maxOPENM3_2
	ind_DM3F = ind_DM3F_1 OR ind_DM3F_2


#ELSE
#IFDEF 5K_THICK_M3
#ELSE	// 3K_THICK_M3
	ind_D30M3 = DENSITY M3x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M3.den30
	ind_D40M3 = DENSITY M3x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M3.den40
	ind_D50M3 = DENSITY M3x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M3.den50
	ind_emptyM3 = DENSITY M3x < emptyD_M3 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M3.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M3ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M3InnerHole = HOLES M3i INNER
	ind_M3BigHole = SIZE ind_M3InnerHole BY - excludeHoleSize/2
	ind_M3ExcHole = (ind_M3InnerHole OUTSIDE ind_M3BigHole) NOT M3i
        #ENDIF	
        ind_BLOCK3    = SIZE DM3EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA3   = SIZE M3i BY (DM3_301 + grid)
	ind_FRAMEA3_o45 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (DM345_301 + grid)
	ind_M3mid     = (SIZE M3i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M3i

	ind_M3wide_W1 = (SIZE ind_M3mid BY wideM3_W1/2 UNDEROVER TRUNCATE wideM3_W1/2) AND M3i	
	ind_M3wide_W11 = (SIZE ind_M3wide_W1 BY wideM3_W11/2 UNDEROVER TRUNCATE wideM3_W11/2) AND M3i
	ind_M3wide_W2 = (SIZE ind_M3wide_W1 BY wideM3_W2/2 UNDEROVER TRUNCATE wideM3_W2/2) AND M3i
	ind_M3wide = (SIZE ind_M3wide_W2 BY wideM3/2 UNDEROVER TRUNCATE wideM3/2) AND M3i
	
	ind_FRAMEB3   = SIZE ind_M3wide BY (dm2WM3 + grid) // DM3 to 4.5um wide metal 3um
	ind_FRAMEB3_W2 = SIZE ind_M3wide_W2 BY (dm2WM3_W2 + grid) // DM3 to 1.5um wide metal 0.5
	ind_FRAMEB3_W1 = SIZE ind_M3wide_W1 BY (dm2WM3_W1 + grid) // DM3 to 0.21um wide metal
	ind_FRAMEB3_W11 = SIZE ind_M3wide_W11 BY (dm2WM3_W11 + grid) // DM3 to 0.38um wide metal

	ind_FRAMEC3   = SIZE DUM3 BY (dm2DM3 + grid)    
	ind_FRAME3Pre = ((((ind_FRAMEA3 OR ind_FRAMEB3) OR ind_FRAMEC3) OR ind_M3ExcHole) OR ind_FRAMEB3_W2) OR ind_FRAMEA3_o45
	FRAMEdm3 = SIZE M3i BY (dm2M3_ind + grid) // DM3 to metal
	ind_FRAMEA3_45 = EXPAND EDGE (M3i ANGLE == 45) OUTSIDE BY (dm452M3_ind + grid) // DM3 to 45 degree metal

    #IFDEF CBM_OVER_M3
	    ind_FRAME3 = ((((((ind_FRAME3Pre OR ind_BLOCK3) OR ind_NFILL) OR ind_FRAMEA3_45) OR FRAMEdm3) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M3
	#ELSE
	    ind_FRAME3 = (((((ind_FRAME3Pre OR ind_BLOCK3) OR ind_NFILL) OR ind_FRAMEA3_45) OR FRAMEdm3) OR (HVxx OR HVNWxx)) OR OD_RDG_M3
	#ENDIF
	    ind_FILL3_1 = INDDMY_MD_FILL NOT ind_FRAME3 
	    ind_FILL3_2 = INDDMY_HD_FILL NOT ind_FRAME3
	    ind_M3F_1 = RECTANGLES dmW_M3_ind dmL_M3_ind dmS_M3_ind_1 OFFSET dmO_M3_ind_1 INSIDE OF LAYER ind_FILL3_1
	    ind_M3F_2 = RECTANGLES dmW_M3_ind dmL_M3_ind dmS_M3_ind_2 OFFSET dmO_M3_ind_2 INSIDE OF LAYER ind_FILL3_2

	ind_FM3_1 = ind_M3F_1 NOT INTERACT (EXT ind_M3F_1 < dmS_M3_ind_1 ABUT SINGULAR REGION)
	ind_FM3_2 = ind_M3F_2 NOT INTERACT (EXT ind_M3F_2 < dmS_M3_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM3_1 = DENSITY M3x ind_FM3_1 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL3_1 BACKUP 
	ind_maxOPENM3_2 = DENSITY M3x ind_FM3_2 > maxD_M3 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL3_2 BACKUP
	ind_DM3F_1 = ind_FM3_1 OUTSIDE ind_maxOPENM3_1
	ind_DM3F_2 = ind_FM3_2 OUTSIDE ind_maxOPENM3_2
	ind_DM3F = ind_DM3F_1 OR ind_DM3F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM4
#IFDEF 34K_THICK_M4
	ind_minOPENM4 = DENSITY M4x < minD_M4 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den
	ind_emptyOPENM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M4Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M4ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M4InnerHole = HOLES M4i INNER
	ind_M4BigHole = SIZE ind_M4InnerHole BY - excludeHoleSize/2
	ind_M4ExcHole = (ind_M4InnerHole OUTSIDE ind_M4BigHole) NOT M4i
        #ENDIF	
        ind_BLOCK4    = SIZE DM4EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA4   = SIZE M4i BY (dm2M4 + grid)
	ind_M4mid     = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i
	ind_M4wide    = (SIZE ind_M4mid BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i
	ind_FRAMEB4   = SIZE ind_M4wide BY (dm2WM4 + grid) // DM4 to 4.5um wide metal 3um
	ind_FRAMEC4   = SIZE DUM4 BY (dm2DM4 + grid)    
	ind_FRAME4Pre = ((ind_FRAMEA4 OR ind_FRAMEB4) OR ind_FRAMEC4) OR ind_M4ExcHole
	FRAMEdm4 = SIZE M4i BY (dm2M4_ind + grid) // DM4 to metal
	ind_FRAMEA4_45 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (dm452M4_ind + grid) // DM4 to 45 degree metal

    #IFDEF CBM_OVER_M4
	    ind_FRAME4 = ((((((ind_FRAME4Pre OR ind_BLOCK4) OR ind_NFILL) OR ind_FRAMEA4_45) OR FRAMEdm4) OR CBMx) OR HVxx) OR OD_RDG_M4
	#ELSE
	    ind_FRAME4 = (((((ind_FRAME4Pre OR ind_BLOCK4) OR ind_NFILL) OR ind_FRAMEA4_45) OR FRAMEdm4) OR HVxx) OR OD_RDG_M4
	#ENDIF
	    ind_FILL4_1 = INDDMY_MD_FILL NOT ind_FRAME4 
	    ind_FILL4_2 = INDDMY_HD_FILL NOT ind_FRAME4
	    ind_M4F_1 = RECTANGLES dmW_M4_ind dmL_M4_ind dmS_M4_ind_1 OFFSET dmO_M4_ind_1 INSIDE OF LAYER ind_FILL4_1
	    ind_M4F_2 = RECTANGLES dmW_M4_ind dmL_M4_ind dmS_M4_ind_2 OFFSET dmO_M4_ind_2 INSIDE OF LAYER ind_FILL4_2

	ind_FM4_1 = ind_M4F_1 NOT INTERACT (EXT ind_M4F_1 < dmS_M4_ind_1 ABUT SINGULAR REGION)
	ind_FM4_2 = ind_M4F_2 NOT INTERACT (EXT ind_M4F_2 < dmS_M4_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM4_1 = DENSITY M4x ind_FM4_1 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL4_1 BACKUP 
	ind_maxOPENM4_2 = DENSITY M4x ind_FM4_2 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL4_2 BACKUP
	ind_DM4F_1 = ind_FM4_1 OUTSIDE ind_maxOPENM4_1
	ind_DM4F_2 = ind_FM4_2 OUTSIDE ind_maxOPENM4_2
	ind_DM4F = ind_DM4F_1 OR ind_DM4F_2
#ELSE
#IFDEF 12K_THICK_M4
#ELSE
#IFDEF 9K_THICK_M4
	ind_minOPENM4 = DENSITY M4x < minD_M4 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M4Min.den
	ind_emptyOPENM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M4Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M4ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M4InnerHole = HOLES M4i INNER
	ind_M4BigHole = SIZE ind_M4InnerHole BY - excludeHoleSize/2
	ind_M4ExcHole = (ind_M4InnerHole OUTSIDE ind_M4BigHole) NOT M4i
        #ENDIF	
        ind_BLOCK4    = SIZE DM4EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA4   = SIZE M4i BY (dm2M4 + grid)
	ind_M4mid     = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i
	ind_M4wide    = (SIZE ind_M4mid BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i
	ind_FRAMEB4   = SIZE ind_M4wide BY (dm2WM4 + grid) // DM4 to 4.5um wide metal 3um
	ind_FRAMEC4   = SIZE DUM4 BY (dm2DM4 + grid)    
	ind_FRAME4Pre = ((ind_FRAMEA4 OR ind_FRAMEB4) OR ind_FRAMEC4) OR ind_M4ExcHole
	FRAMEdm4 = SIZE M4i BY (dm2M4_ind + grid) // DM4 to metal
	ind_FRAMEA4_45 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (dm452M4_ind + grid) // DM4 to 45 degree metal

    #IFDEF CBM_OVER_M4
	    ind_FRAME4 = (((((((ind_FRAME4Pre OR ind_BLOCK4) OR ind_NFILL) OR ind_FRAMEA4_45) OR FRAMEdm4) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M4
	#ELSE
	    ind_FRAME4 = ((((((ind_FRAME4Pre OR ind_BLOCK4) OR ind_NFILL) OR ind_FRAMEA4_45) OR FRAMEdm4) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M4
	#ENDIF
	    ind_FILL4_1 = INDDMY_MD_FILL NOT ind_FRAME4 
	    ind_FILL4_2 = INDDMY_HD_FILL NOT ind_FRAME4
	    ind_M4F_1 = RECTANGLES dmW_M4_ind dmL_M4_ind dmS_M4_ind_1 OFFSET dmO_M4_ind_1 INSIDE OF LAYER ind_FILL4_1
	    ind_M4F_2 = RECTANGLES dmW_M4_ind dmL_M4_ind dmS_M4_ind_2 OFFSET dmO_M4_ind_2 INSIDE OF LAYER ind_FILL4_2

	ind_FM4_1 = ind_M4F_1 NOT INTERACT (EXT ind_M4F_1 < dmS_M4_ind_1 ABUT SINGULAR REGION)
	ind_FM4_2 = ind_M4F_2 NOT INTERACT (EXT ind_M4F_2 < dmS_M4_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM4_1 = DENSITY M4x ind_FM4_1 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL4_1 BACKUP 
	ind_maxOPENM4_2 = DENSITY M4x ind_FM4_2 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL4_2 BACKUP
	ind_DM4F_1 = ind_FM4_1 OUTSIDE ind_maxOPENM4_1
	ind_DM4F_2 = ind_FM4_2 OUTSIDE ind_maxOPENM4_2
	ind_DM4F = ind_DM4F_1 OR ind_DM4F_2


#ELSE
#IFDEF 5K_THICK_M4
#ELSE	// 3K_THICK_M4
	ind_D30M4 = DENSITY M4x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M4.den30
	ind_D40M4 = DENSITY M4x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M4.den40
	ind_D50M4 = DENSITY M4x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M4.den50
	ind_emptyM4 = DENSITY M4x < emptyD_M4 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M4.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M4ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M4InnerHole = HOLES M4i INNER
	ind_M4BigHole = SIZE ind_M4InnerHole BY - excludeHoleSize/2
	ind_M4ExcHole = (ind_M4InnerHole OUTSIDE ind_M4BigHole) NOT M4i
        #ENDIF	
        ind_BLOCK4    = SIZE DM4EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA4   = SIZE M4i BY (DM4_301 + grid)
	ind_FRAMEA4_o45 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (DM445_301 + grid)
	ind_M4mid     = (SIZE M4i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M4i

	ind_M4wide_W1 = (SIZE ind_M4mid BY wideM4_W1/2 UNDEROVER TRUNCATE wideM4_W1/2) AND M4i	
	ind_M4wide_W11 = (SIZE ind_M4wide_W1 BY wideM4_W11/2 UNDEROVER TRUNCATE wideM4_W11/2) AND M4i
	ind_M4wide_W2 = (SIZE ind_M4wide_W1 BY wideM4_W2/2 UNDEROVER TRUNCATE wideM4_W2/2) AND M4i
	ind_M4wide = (SIZE ind_M4wide_W2 BY wideM4/2 UNDEROVER TRUNCATE wideM4/2) AND M4i
	
	ind_FRAMEB4   = SIZE ind_M4wide BY (dm2WM4 + grid) // DM4 to 4.5um wide metal 3um
	ind_FRAMEB4_W2 = SIZE ind_M4wide_W2 BY (dm2WM4_W2 + grid) // DM4 to 1.5um wide metal 0.5
	ind_FRAMEB4_W1 = SIZE ind_M4wide_W1 BY (dm2WM4_W1 + grid) // DM4 to 0.21um wide metal
	ind_FRAMEB4_W11 = SIZE ind_M4wide_W11 BY (dm2WM4_W11 + grid) // DM4 to 0.38um wide metal

	ind_FRAMEC4   = SIZE DUM4 BY (dm2DM4 + grid)    
	ind_FRAME4Pre = ((((ind_FRAMEA4 OR ind_FRAMEB4) OR ind_FRAMEC4) OR ind_M4ExcHole) OR ind_FRAMEB4_W2) OR ind_FRAMEA4_o45
	FRAMEdm4 = SIZE M4i BY (dm2M4_ind + grid) // DM4 to metal
	ind_FRAMEA4_45 = EXPAND EDGE (M4i ANGLE == 45) OUTSIDE BY (dm452M4_ind + grid) // DM4 to 45 degree metal

    #IFDEF CBM_OVER_M4
	    ind_FRAME4 = ((((((ind_FRAME4Pre OR ind_BLOCK4) OR ind_NFILL) OR ind_FRAMEA4_45) OR FRAMEdm4) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M4
	#ELSE
	    ind_FRAME4 = (((((ind_FRAME4Pre OR ind_BLOCK4) OR ind_NFILL) OR ind_FRAMEA4_45) OR FRAMEdm4) OR (HVxx OR HVNWxx)) OR OD_RDG_M4
	#ENDIF
	    ind_FILL4_1 = INDDMY_MD_FILL NOT ind_FRAME4 
	    ind_FILL4_2 = INDDMY_HD_FILL NOT ind_FRAME4
	    ind_M4F_1 = RECTANGLES dmW_M4_ind dmL_M4_ind dmS_M4_ind_1 OFFSET dmO_M4_ind_1 INSIDE OF LAYER ind_FILL4_1
	    ind_M4F_2 = RECTANGLES dmW_M4_ind dmL_M4_ind dmS_M4_ind_2 OFFSET dmO_M4_ind_2 INSIDE OF LAYER ind_FILL4_2

	ind_FM4_1 = ind_M4F_1 NOT INTERACT (EXT ind_M4F_1 < dmS_M4_ind_1 ABUT SINGULAR REGION)
	ind_FM4_2 = ind_M4F_2 NOT INTERACT (EXT ind_M4F_2 < dmS_M4_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM4_1 = DENSITY M4x ind_FM4_1 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL4_1 BACKUP 
	ind_maxOPENM4_2 = DENSITY M4x ind_FM4_2 > maxD_M4 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL4_2 BACKUP
	ind_DM4F_1 = ind_FM4_1 OUTSIDE ind_maxOPENM4_1
	ind_DM4F_2 = ind_FM4_2 OUTSIDE ind_maxOPENM4_2
	ind_DM4F = ind_DM4F_1 OR ind_DM4F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM5
#IFDEF 34K_THICK_M5
	ind_minOPENM5 = DENSITY M5x < minD_M5 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den
	ind_emptyOPENM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M5Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M5ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M5InnerHole = HOLES M5i INNER
	ind_M5BigHole = SIZE ind_M5InnerHole BY - excludeHoleSize/2
	ind_M5ExcHole = (ind_M5InnerHole OUTSIDE ind_M5BigHole) NOT M5i
        #ENDIF	
        ind_BLOCK5    = SIZE DM5EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA5   = SIZE M5i BY (dm2M5 + grid)
	ind_M5mid     = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i
	ind_M5wide    = (SIZE ind_M5mid BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i
	ind_FRAMEB5   = SIZE ind_M5wide BY (dm2WM5 + grid) // DM5 to 4.5um wide metal 3um
	ind_FRAMEC5   = SIZE DUM5 BY (dm2DM5 + grid)    
	ind_FRAME5Pre = ((ind_FRAMEA5 OR ind_FRAMEB5) OR ind_FRAMEC5) OR ind_M5ExcHole
	FRAMEdm5 = SIZE M5i BY (dm2M5_ind + grid) // DM5 to metal
	ind_FRAMEA5_45 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (dm452M5_ind + grid) // DM5 to 45 degree metal

    #IFDEF CBM_OVER_M5
	    ind_FRAME5 = ((((((ind_FRAME5Pre OR ind_BLOCK5) OR ind_NFILL) OR ind_FRAMEA5_45) OR FRAMEdm5) OR CBMx) OR HVxx) OR OD_RDG_M5
	#ELSE
	    ind_FRAME5 = (((((ind_FRAME5Pre OR ind_BLOCK5) OR ind_NFILL) OR ind_FRAMEA5_45) OR FRAMEdm5) OR HVxx) OR OD_RDG_M5
	#ENDIF
	    ind_FILL5_1 = INDDMY_MD_FILL NOT ind_FRAME5 
	    ind_FILL5_2 = INDDMY_HD_FILL NOT ind_FRAME5
	    ind_M5F_1 = RECTANGLES dmW_M5_ind dmL_M5_ind dmS_M5_ind_1 OFFSET dmO_M5_ind_1 INSIDE OF LAYER ind_FILL5_1
	    ind_M5F_2 = RECTANGLES dmW_M5_ind dmL_M5_ind dmS_M5_ind_2 OFFSET dmO_M5_ind_2 INSIDE OF LAYER ind_FILL5_2

	ind_FM5_1 = ind_M5F_1 NOT INTERACT (EXT ind_M5F_1 < dmS_M5_ind_1 ABUT SINGULAR REGION)
	ind_FM5_2 = ind_M5F_2 NOT INTERACT (EXT ind_M5F_2 < dmS_M5_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM5_1 = DENSITY M5x ind_FM5_1 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL5_1 BACKUP 
	ind_maxOPENM5_2 = DENSITY M5x ind_FM5_2 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL5_2 BACKUP
	ind_DM5F_1 = ind_FM5_1 OUTSIDE ind_maxOPENM5_1
	ind_DM5F_2 = ind_FM5_2 OUTSIDE ind_maxOPENM5_2
	ind_DM5F = ind_DM5F_1 OR ind_DM5F_2
#ELSE
#IFDEF 12K_THICK_M5
#ELSE
#IFDEF 9K_THICK_M5
	ind_minOPENM5 = DENSITY M5x < minD_M5 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M5Min.den
	ind_emptyOPENM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M5Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M5ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M5InnerHole = HOLES M5i INNER
	ind_M5BigHole = SIZE ind_M5InnerHole BY - excludeHoleSize/2
	ind_M5ExcHole = (ind_M5InnerHole OUTSIDE ind_M5BigHole) NOT M5i
        #ENDIF	
        ind_BLOCK5    = SIZE DM5EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA5   = SIZE M5i BY (dm2M5 + grid)
	ind_M5mid     = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i
	ind_M5wide    = (SIZE ind_M5mid BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i
	ind_FRAMEB5   = SIZE ind_M5wide BY (dm2WM5 + grid) // DM5 to 4.5um wide metal 3um
	ind_FRAMEC5   = SIZE DUM5 BY (dm2DM5 + grid)    
	ind_FRAME5Pre = ((ind_FRAMEA5 OR ind_FRAMEB5) OR ind_FRAMEC5) OR ind_M5ExcHole
	FRAMEdm5 = SIZE M5i BY (dm2M5_ind + grid) // DM5 to metal
	ind_FRAMEA5_45 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (dm452M5_ind + grid) // DM5 to 45 degree metal

    #IFDEF CBM_OVER_M5
	    ind_FRAME5 = (((((((ind_FRAME5Pre OR ind_BLOCK5) OR ind_NFILL) OR ind_FRAMEA5_45) OR FRAMEdm5) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M5
	#ELSE
	    ind_FRAME5 = ((((((ind_FRAME5Pre OR ind_BLOCK5) OR ind_NFILL) OR ind_FRAMEA5_45) OR FRAMEdm5) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M5
	#ENDIF
	    ind_FILL5_1 = INDDMY_MD_FILL NOT ind_FRAME5 
	    ind_FILL5_2 = INDDMY_HD_FILL NOT ind_FRAME5
	    ind_M5F_1 = RECTANGLES dmW_M5_ind dmL_M5_ind dmS_M5_ind_1 OFFSET dmO_M5_ind_1 INSIDE OF LAYER ind_FILL5_1
	    ind_M5F_2 = RECTANGLES dmW_M5_ind dmL_M5_ind dmS_M5_ind_2 OFFSET dmO_M5_ind_2 INSIDE OF LAYER ind_FILL5_2

	ind_FM5_1 = ind_M5F_1 NOT INTERACT (EXT ind_M5F_1 < dmS_M5_ind_1 ABUT SINGULAR REGION)
	ind_FM5_2 = ind_M5F_2 NOT INTERACT (EXT ind_M5F_2 < dmS_M5_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM5_1 = DENSITY M5x ind_FM5_1 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL5_1 BACKUP 
	ind_maxOPENM5_2 = DENSITY M5x ind_FM5_2 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL5_2 BACKUP
	ind_DM5F_1 = ind_FM5_1 OUTSIDE ind_maxOPENM5_1
	ind_DM5F_2 = ind_FM5_2 OUTSIDE ind_maxOPENM5_2
	ind_DM5F = ind_DM5F_1 OR ind_DM5F_2


#ELSE
#IFDEF 5K_THICK_M5
#ELSE	// 3K_THICK_M5
	ind_D30M5 = DENSITY M5x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M5.den30
	ind_D40M5 = DENSITY M5x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M5.den40
	ind_D50M5 = DENSITY M5x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M5.den50
	ind_emptyM5 = DENSITY M5x < emptyD_M5 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M5.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M5ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M5InnerHole = HOLES M5i INNER
	ind_M5BigHole = SIZE ind_M5InnerHole BY - excludeHoleSize/2
	ind_M5ExcHole = (ind_M5InnerHole OUTSIDE ind_M5BigHole) NOT M5i
        #ENDIF	
        ind_BLOCK5    = SIZE DM5EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA5   = SIZE M5i BY (DM5_301 + grid)
	ind_FRAMEA5_o45 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (DM545_301 + grid)
	ind_M5mid     = (SIZE M5i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M5i

	ind_M5wide_W1 = (SIZE ind_M5mid BY wideM5_W1/2 UNDEROVER TRUNCATE wideM5_W1/2) AND M5i	
	ind_M5wide_W11 = (SIZE ind_M5wide_W1 BY wideM5_W11/2 UNDEROVER TRUNCATE wideM5_W11/2) AND M5i
	ind_M5wide_W2 = (SIZE ind_M5wide_W1 BY wideM5_W2/2 UNDEROVER TRUNCATE wideM5_W2/2) AND M5i
	ind_M5wide = (SIZE ind_M5wide_W2 BY wideM5/2 UNDEROVER TRUNCATE wideM5/2) AND M5i
	
	ind_FRAMEB5   = SIZE ind_M5wide BY (dm2WM5 + grid) // DM5 to 4.5um wide metal 3um
	ind_FRAMEB5_W2 = SIZE ind_M5wide_W2 BY (dm2WM5_W2 + grid) // DM5 to 1.5um wide metal 0.5
	ind_FRAMEB5_W1 = SIZE ind_M5wide_W1 BY (dm2WM5_W1 + grid) // DM5 to 0.21um wide metal
	ind_FRAMEB5_W11 = SIZE ind_M5wide_W11 BY (dm2WM5_W11 + grid) // DM5 to 0.38um wide metal

	ind_FRAMEC5   = SIZE DUM5 BY (dm2DM5 + grid)    
	ind_FRAME5Pre = ((((ind_FRAMEA5 OR ind_FRAMEB5) OR ind_FRAMEC5) OR ind_M5ExcHole) OR ind_FRAMEB5_W2) OR ind_FRAMEA5_o45
	FRAMEdm5 = SIZE M5i BY (dm2M5_ind + grid) // DM5 to metal
	ind_FRAMEA5_45 = EXPAND EDGE (M5i ANGLE == 45) OUTSIDE BY (dm452M5_ind + grid) // DM5 to 45 degree metal

    #IFDEF CBM_OVER_M5
	    ind_FRAME5 = ((((((ind_FRAME5Pre OR ind_BLOCK5) OR ind_NFILL) OR ind_FRAMEA5_45) OR FRAMEdm5) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M5
	#ELSE
	    ind_FRAME5 = (((((ind_FRAME5Pre OR ind_BLOCK5) OR ind_NFILL) OR ind_FRAMEA5_45) OR FRAMEdm5) OR (HVxx OR HVNWxx)) OR OD_RDG_M5
	#ENDIF
	    ind_FILL5_1 = INDDMY_MD_FILL NOT ind_FRAME5 
	    ind_FILL5_2 = INDDMY_HD_FILL NOT ind_FRAME5
	    ind_M5F_1 = RECTANGLES dmW_M5_ind dmL_M5_ind dmS_M5_ind_1 OFFSET dmO_M5_ind_1 INSIDE OF LAYER ind_FILL5_1
	    ind_M5F_2 = RECTANGLES dmW_M5_ind dmL_M5_ind dmS_M5_ind_2 OFFSET dmO_M5_ind_2 INSIDE OF LAYER ind_FILL5_2

	ind_FM5_1 = ind_M5F_1 NOT INTERACT (EXT ind_M5F_1 < dmS_M5_ind_1 ABUT SINGULAR REGION)
	ind_FM5_2 = ind_M5F_2 NOT INTERACT (EXT ind_M5F_2 < dmS_M5_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM5_1 = DENSITY M5x ind_FM5_1 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL5_1 BACKUP 
	ind_maxOPENM5_2 = DENSITY M5x ind_FM5_2 > maxD_M5 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL5_2 BACKUP
	ind_DM5F_1 = ind_FM5_1 OUTSIDE ind_maxOPENM5_1
	ind_DM5F_2 = ind_FM5_2 OUTSIDE ind_maxOPENM5_2
	ind_DM5F = ind_DM5F_1 OR ind_DM5F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM6
#IFDEF 34K_THICK_M6
	ind_minOPENM6 = DENSITY M6x < minD_M6 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den
	ind_emptyOPENM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M6Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M6ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M6InnerHole = HOLES M6i INNER
	ind_M6BigHole = SIZE ind_M6InnerHole BY - excludeHoleSize/2
	ind_M6ExcHole = (ind_M6InnerHole OUTSIDE ind_M6BigHole) NOT M6i
        #ENDIF	
        ind_BLOCK6    = SIZE DM6EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA6   = SIZE M6i BY (dm2M6 + grid)
	ind_M6mid     = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i
	ind_M6wide    = (SIZE ind_M6mid BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i
	ind_FRAMEB6   = SIZE ind_M6wide BY (dm2WM6 + grid) // DM6 to 4.5um wide metal 3um
	ind_FRAMEC6   = SIZE DUM6 BY (dm2DM6 + grid)    
	ind_FRAME6Pre = ((ind_FRAMEA6 OR ind_FRAMEB6) OR ind_FRAMEC6) OR ind_M6ExcHole
	FRAMEdm6 = SIZE M6i BY (dm2M6_ind + grid) // DM6 to metal
	ind_FRAMEA6_45 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (dm452M6_ind + grid) // DM6 to 45 degree metal

    #IFDEF CBM_OVER_M6
	    ind_FRAME6 = ((((((ind_FRAME6Pre OR ind_BLOCK6) OR ind_NFILL) OR ind_FRAMEA6_45) OR FRAMEdm6) OR CBMx) OR HVxx) OR OD_RDG_M6
	#ELSE
	    ind_FRAME6 = (((((ind_FRAME6Pre OR ind_BLOCK6) OR ind_NFILL) OR ind_FRAMEA6_45) OR FRAMEdm6) OR HVxx) OR OD_RDG_M6
	#ENDIF
	    ind_FILL6_1 = INDDMY_MD_FILL NOT ind_FRAME6 
	    ind_FILL6_2 = INDDMY_HD_FILL NOT ind_FRAME6
	    ind_M6F_1 = RECTANGLES dmW_M6_ind dmL_M6_ind dmS_M6_ind_1 OFFSET dmO_M6_ind_1 INSIDE OF LAYER ind_FILL6_1
	    ind_M6F_2 = RECTANGLES dmW_M6_ind dmL_M6_ind dmS_M6_ind_2 OFFSET dmO_M6_ind_2 INSIDE OF LAYER ind_FILL6_2

	ind_FM6_1 = ind_M6F_1 NOT INTERACT (EXT ind_M6F_1 < dmS_M6_ind_1 ABUT SINGULAR REGION)
	ind_FM6_2 = ind_M6F_2 NOT INTERACT (EXT ind_M6F_2 < dmS_M6_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM6_1 = DENSITY M6x ind_FM6_1 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL6_1 BACKUP 
	ind_maxOPENM6_2 = DENSITY M6x ind_FM6_2 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL6_2 BACKUP
	ind_DM6F_1 = ind_FM6_1 OUTSIDE ind_maxOPENM6_1
	ind_DM6F_2 = ind_FM6_2 OUTSIDE ind_maxOPENM6_2
	ind_DM6F = ind_DM6F_1 OR ind_DM6F_2
#ELSE
#IFDEF 12K_THICK_M6
#ELSE
#IFDEF 9K_THICK_M6
	ind_minOPENM6 = DENSITY M6x < minD_M6 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M6Min.den
	ind_emptyOPENM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M6Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M6ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M6InnerHole = HOLES M6i INNER
	ind_M6BigHole = SIZE ind_M6InnerHole BY - excludeHoleSize/2
	ind_M6ExcHole = (ind_M6InnerHole OUTSIDE ind_M6BigHole) NOT M6i
        #ENDIF	
        ind_BLOCK6    = SIZE DM6EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA6   = SIZE M6i BY (dm2M6 + grid)
	ind_M6mid     = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i
	ind_M6wide    = (SIZE ind_M6mid BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i
	ind_FRAMEB6   = SIZE ind_M6wide BY (dm2WM6 + grid) // DM6 to 4.5um wide metal 3um
	ind_FRAMEC6   = SIZE DUM6 BY (dm2DM6 + grid)    
	ind_FRAME6Pre = ((ind_FRAMEA6 OR ind_FRAMEB6) OR ind_FRAMEC6) OR ind_M6ExcHole
	FRAMEdm6 = SIZE M6i BY (dm2M6_ind + grid) // DM6 to metal
	ind_FRAMEA6_45 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (dm452M6_ind + grid) // DM6 to 45 degree metal

    #IFDEF CBM_OVER_M6
	    ind_FRAME6 = (((((((ind_FRAME6Pre OR ind_BLOCK6) OR ind_NFILL) OR ind_FRAMEA6_45) OR FRAMEdm6) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M6
	#ELSE
	    ind_FRAME6 = ((((((ind_FRAME6Pre OR ind_BLOCK6) OR ind_NFILL) OR ind_FRAMEA6_45) OR FRAMEdm6) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M6
	#ENDIF
	    ind_FILL6_1 = INDDMY_MD_FILL NOT ind_FRAME6 
	    ind_FILL6_2 = INDDMY_HD_FILL NOT ind_FRAME6
	    ind_M6F_1 = RECTANGLES dmW_M6_ind dmL_M6_ind dmS_M6_ind_1 OFFSET dmO_M6_ind_1 INSIDE OF LAYER ind_FILL6_1
	    ind_M6F_2 = RECTANGLES dmW_M6_ind dmL_M6_ind dmS_M6_ind_2 OFFSET dmO_M6_ind_2 INSIDE OF LAYER ind_FILL6_2

	ind_FM6_1 = ind_M6F_1 NOT INTERACT (EXT ind_M6F_1 < dmS_M6_ind_1 ABUT SINGULAR REGION)
	ind_FM6_2 = ind_M6F_2 NOT INTERACT (EXT ind_M6F_2 < dmS_M6_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM6_1 = DENSITY M6x ind_FM6_1 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL6_1 BACKUP 
	ind_maxOPENM6_2 = DENSITY M6x ind_FM6_2 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL6_2 BACKUP
	ind_DM6F_1 = ind_FM6_1 OUTSIDE ind_maxOPENM6_1
	ind_DM6F_2 = ind_FM6_2 OUTSIDE ind_maxOPENM6_2
	ind_DM6F = ind_DM6F_1 OR ind_DM6F_2


#ELSE
#IFDEF 5K_THICK_M6
#ELSE	// 3K_THICK_M6
	ind_D30M6 = DENSITY M6x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M6.den30
	ind_D40M6 = DENSITY M6x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M6.den40
	ind_D50M6 = DENSITY M6x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M6.den50
	ind_emptyM6 = DENSITY M6x < emptyD_M6 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M6.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M6ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M6InnerHole = HOLES M6i INNER
	ind_M6BigHole = SIZE ind_M6InnerHole BY - excludeHoleSize/2
	ind_M6ExcHole = (ind_M6InnerHole OUTSIDE ind_M6BigHole) NOT M6i
        #ENDIF	
        ind_BLOCK6    = SIZE DM6EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA6   = SIZE M6i BY (DM6_301 + grid)
	ind_FRAMEA6_o45 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (DM645_301 + grid)
	ind_M6mid     = (SIZE M6i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M6i

	ind_M6wide_W1 = (SIZE ind_M6mid BY wideM6_W1/2 UNDEROVER TRUNCATE wideM6_W1/2) AND M6i	
	ind_M6wide_W11 = (SIZE ind_M6wide_W1 BY wideM6_W11/2 UNDEROVER TRUNCATE wideM6_W11/2) AND M6i
	ind_M6wide_W2 = (SIZE ind_M6wide_W1 BY wideM6_W2/2 UNDEROVER TRUNCATE wideM6_W2/2) AND M6i
	ind_M6wide = (SIZE ind_M6wide_W2 BY wideM6/2 UNDEROVER TRUNCATE wideM6/2) AND M6i
	
	ind_FRAMEB6   = SIZE ind_M6wide BY (dm2WM6 + grid) // DM6 to 4.5um wide metal 3um
	ind_FRAMEB6_W2 = SIZE ind_M6wide_W2 BY (dm2WM6_W2 + grid) // DM6 to 1.5um wide metal 0.5
	ind_FRAMEB6_W1 = SIZE ind_M6wide_W1 BY (dm2WM6_W1 + grid) // DM6 to 0.21um wide metal
	ind_FRAMEB6_W11 = SIZE ind_M6wide_W11 BY (dm2WM6_W11 + grid) // DM6 to 0.38um wide metal

	ind_FRAMEC6   = SIZE DUM6 BY (dm2DM6 + grid)    
	ind_FRAME6Pre = ((((ind_FRAMEA6 OR ind_FRAMEB6) OR ind_FRAMEC6) OR ind_M6ExcHole) OR ind_FRAMEB6_W2) OR ind_FRAMEA6_o45
	FRAMEdm6 = SIZE M6i BY (dm2M6_ind + grid) // DM6 to metal
	ind_FRAMEA6_45 = EXPAND EDGE (M6i ANGLE == 45) OUTSIDE BY (dm452M6_ind + grid) // DM6 to 45 degree metal

    #IFDEF CBM_OVER_M6
	    ind_FRAME6 = ((((((ind_FRAME6Pre OR ind_BLOCK6) OR ind_NFILL) OR ind_FRAMEA6_45) OR FRAMEdm6) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M6
	#ELSE
	    ind_FRAME6 = (((((ind_FRAME6Pre OR ind_BLOCK6) OR ind_NFILL) OR ind_FRAMEA6_45) OR FRAMEdm6) OR (HVxx OR HVNWxx)) OR OD_RDG_M6
	#ENDIF
	    ind_FILL6_1 = INDDMY_MD_FILL NOT ind_FRAME6 
	    ind_FILL6_2 = INDDMY_HD_FILL NOT ind_FRAME6
	    ind_M6F_1 = RECTANGLES dmW_M6_ind dmL_M6_ind dmS_M6_ind_1 OFFSET dmO_M6_ind_1 INSIDE OF LAYER ind_FILL6_1
	    ind_M6F_2 = RECTANGLES dmW_M6_ind dmL_M6_ind dmS_M6_ind_2 OFFSET dmO_M6_ind_2 INSIDE OF LAYER ind_FILL6_2

	ind_FM6_1 = ind_M6F_1 NOT INTERACT (EXT ind_M6F_1 < dmS_M6_ind_1 ABUT SINGULAR REGION)
	ind_FM6_2 = ind_M6F_2 NOT INTERACT (EXT ind_M6F_2 < dmS_M6_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM6_1 = DENSITY M6x ind_FM6_1 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL6_1 BACKUP 
	ind_maxOPENM6_2 = DENSITY M6x ind_FM6_2 > maxD_M6 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL6_2 BACKUP
	ind_DM6F_1 = ind_FM6_1 OUTSIDE ind_maxOPENM6_1
	ind_DM6F_2 = ind_FM6_2 OUTSIDE ind_maxOPENM6_2
	ind_DM6F = ind_DM6F_1 OR ind_DM6F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM7
#IFDEF 34K_THICK_M7
	ind_minOPENM7 = DENSITY M7x < minD_M7 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den
	ind_emptyOPENM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M7Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M7ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M7InnerHole = HOLES M7i INNER
	ind_M7BigHole = SIZE ind_M7InnerHole BY - excludeHoleSize/2
	ind_M7ExcHole = (ind_M7InnerHole OUTSIDE ind_M7BigHole) NOT M7i
        #ENDIF	
        ind_BLOCK7    = SIZE DM7EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA7   = SIZE M7i BY (dm2M7 + grid)
	ind_M7mid     = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i
	ind_M7wide    = (SIZE ind_M7mid BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i
	ind_FRAMEB7   = SIZE ind_M7wide BY (dm2WM7 + grid) // DM7 to 4.5um wide metal 3um
	ind_FRAMEC7   = SIZE DUM7 BY (dm2DM7 + grid)    
	ind_FRAME7Pre = ((ind_FRAMEA7 OR ind_FRAMEB7) OR ind_FRAMEC7) OR ind_M7ExcHole
	FRAMEdm7 = SIZE M7i BY (dm2M7_ind + grid) // DM7 to metal
	ind_FRAMEA7_45 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (dm452M7_ind + grid) // DM7 to 45 degree metal

    #IFDEF CBM_OVER_M7
	    ind_FRAME7 = ((((((ind_FRAME7Pre OR ind_BLOCK7) OR ind_NFILL) OR ind_FRAMEA7_45) OR FRAMEdm7) OR CBMx) OR HVxx) OR OD_RDG_M7
	#ELSE
	    ind_FRAME7 = (((((ind_FRAME7Pre OR ind_BLOCK7) OR ind_NFILL) OR ind_FRAMEA7_45) OR FRAMEdm7) OR HVxx) OR OD_RDG_M7
	#ENDIF
	    ind_FILL7_1 = INDDMY_MD_FILL NOT ind_FRAME7 
	    ind_FILL7_2 = INDDMY_HD_FILL NOT ind_FRAME7
	    ind_M7F_1 = RECTANGLES dmW_M7_ind dmL_M7_ind dmS_M7_ind_1 OFFSET dmO_M7_ind_1 INSIDE OF LAYER ind_FILL7_1
	    ind_M7F_2 = RECTANGLES dmW_M7_ind dmL_M7_ind dmS_M7_ind_2 OFFSET dmO_M7_ind_2 INSIDE OF LAYER ind_FILL7_2

	ind_FM7_1 = ind_M7F_1 NOT INTERACT (EXT ind_M7F_1 < dmS_M7_ind_1 ABUT SINGULAR REGION)
	ind_FM7_2 = ind_M7F_2 NOT INTERACT (EXT ind_M7F_2 < dmS_M7_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM7_1 = DENSITY M7x ind_FM7_1 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL7_1 BACKUP 
	ind_maxOPENM7_2 = DENSITY M7x ind_FM7_2 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL7_2 BACKUP
	ind_DM7F_1 = ind_FM7_1 OUTSIDE ind_maxOPENM7_1
	ind_DM7F_2 = ind_FM7_2 OUTSIDE ind_maxOPENM7_2
	ind_DM7F = ind_DM7F_1 OR ind_DM7F_2
#ELSE
#IFDEF 12K_THICK_M7
#ELSE
#IFDEF 9K_THICK_M7
	ind_minOPENM7 = DENSITY M7x < minD_M7 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M7Min.den
	ind_emptyOPENM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M7Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M7ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M7InnerHole = HOLES M7i INNER
	ind_M7BigHole = SIZE ind_M7InnerHole BY - excludeHoleSize/2
	ind_M7ExcHole = (ind_M7InnerHole OUTSIDE ind_M7BigHole) NOT M7i
        #ENDIF	
        ind_BLOCK7    = SIZE DM7EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA7   = SIZE M7i BY (dm2M7 + grid)
	ind_M7mid     = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i
	ind_M7wide    = (SIZE ind_M7mid BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i
	ind_FRAMEB7   = SIZE ind_M7wide BY (dm2WM7 + grid) // DM7 to 4.5um wide metal 3um
	ind_FRAMEC7   = SIZE DUM7 BY (dm2DM7 + grid)    
	ind_FRAME7Pre = ((ind_FRAMEA7 OR ind_FRAMEB7) OR ind_FRAMEC7) OR ind_M7ExcHole
	FRAMEdm7 = SIZE M7i BY (dm2M7_ind + grid) // DM7 to metal
	ind_FRAMEA7_45 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (dm452M7_ind + grid) // DM7 to 45 degree metal

    #IFDEF CBM_OVER_M7
	    ind_FRAME7 = (((((((ind_FRAME7Pre OR ind_BLOCK7) OR ind_NFILL) OR ind_FRAMEA7_45) OR FRAMEdm7) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M7
	#ELSE
	    ind_FRAME7 = ((((((ind_FRAME7Pre OR ind_BLOCK7) OR ind_NFILL) OR ind_FRAMEA7_45) OR FRAMEdm7) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M7
	#ENDIF
	    ind_FILL7_1 = INDDMY_MD_FILL NOT ind_FRAME7 
	    ind_FILL7_2 = INDDMY_HD_FILL NOT ind_FRAME7
	    ind_M7F_1 = RECTANGLES dmW_M7_ind dmL_M7_ind dmS_M7_ind_1 OFFSET dmO_M7_ind_1 INSIDE OF LAYER ind_FILL7_1
	    ind_M7F_2 = RECTANGLES dmW_M7_ind dmL_M7_ind dmS_M7_ind_2 OFFSET dmO_M7_ind_2 INSIDE OF LAYER ind_FILL7_2

	ind_FM7_1 = ind_M7F_1 NOT INTERACT (EXT ind_M7F_1 < dmS_M7_ind_1 ABUT SINGULAR REGION)
	ind_FM7_2 = ind_M7F_2 NOT INTERACT (EXT ind_M7F_2 < dmS_M7_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM7_1 = DENSITY M7x ind_FM7_1 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL7_1 BACKUP 
	ind_maxOPENM7_2 = DENSITY M7x ind_FM7_2 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL7_2 BACKUP
	ind_DM7F_1 = ind_FM7_1 OUTSIDE ind_maxOPENM7_1
	ind_DM7F_2 = ind_FM7_2 OUTSIDE ind_maxOPENM7_2
	ind_DM7F = ind_DM7F_1 OR ind_DM7F_2


#ELSE
#IFDEF 5K_THICK_M7
#ELSE	// 3K_THICK_M7
	ind_D30M7 = DENSITY M7x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M7.den30
	ind_D40M7 = DENSITY M7x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M7.den40
	ind_D50M7 = DENSITY M7x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M7.den50
	ind_emptyM7 = DENSITY M7x < emptyD_M7 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M7.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M7ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M7InnerHole = HOLES M7i INNER
	ind_M7BigHole = SIZE ind_M7InnerHole BY - excludeHoleSize/2
	ind_M7ExcHole = (ind_M7InnerHole OUTSIDE ind_M7BigHole) NOT M7i
        #ENDIF	
        ind_BLOCK7    = SIZE DM7EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA7   = SIZE M7i BY (DM7_301 + grid)
	ind_FRAMEA7_o45 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (DM745_301 + grid)
	ind_M7mid     = (SIZE M7i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M7i

	ind_M7wide_W1 = (SIZE ind_M7mid BY wideM7_W1/2 UNDEROVER TRUNCATE wideM7_W1/2) AND M7i	
	ind_M7wide_W11 = (SIZE ind_M7wide_W1 BY wideM7_W11/2 UNDEROVER TRUNCATE wideM7_W11/2) AND M7i
	ind_M7wide_W2 = (SIZE ind_M7wide_W1 BY wideM7_W2/2 UNDEROVER TRUNCATE wideM7_W2/2) AND M7i
	ind_M7wide = (SIZE ind_M7wide_W2 BY wideM7/2 UNDEROVER TRUNCATE wideM7/2) AND M7i
	
	ind_FRAMEB7   = SIZE ind_M7wide BY (dm2WM7 + grid) // DM7 to 4.5um wide metal 3um
	ind_FRAMEB7_W2 = SIZE ind_M7wide_W2 BY (dm2WM7_W2 + grid) // DM7 to 1.5um wide metal 0.5
	ind_FRAMEB7_W1 = SIZE ind_M7wide_W1 BY (dm2WM7_W1 + grid) // DM7 to 0.21um wide metal
	ind_FRAMEB7_W11 = SIZE ind_M7wide_W11 BY (dm2WM7_W11 + grid) // DM7 to 0.38um wide metal

	ind_FRAMEC7   = SIZE DUM7 BY (dm2DM7 + grid)    
	ind_FRAME7Pre = ((((ind_FRAMEA7 OR ind_FRAMEB7) OR ind_FRAMEC7) OR ind_M7ExcHole) OR ind_FRAMEB7_W2) OR ind_FRAMEA7_o45
	FRAMEdm7 = SIZE M7i BY (dm2M7_ind + grid) // DM7 to metal
	ind_FRAMEA7_45 = EXPAND EDGE (M7i ANGLE == 45) OUTSIDE BY (dm452M7_ind + grid) // DM7 to 45 degree metal

    #IFDEF CBM_OVER_M7
	    ind_FRAME7 = ((((((ind_FRAME7Pre OR ind_BLOCK7) OR ind_NFILL) OR ind_FRAMEA7_45) OR FRAMEdm7) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M7
	#ELSE
	    ind_FRAME7 = (((((ind_FRAME7Pre OR ind_BLOCK7) OR ind_NFILL) OR ind_FRAMEA7_45) OR FRAMEdm7) OR (HVxx OR HVNWxx)) OR OD_RDG_M7
	#ENDIF
	    ind_FILL7_1 = INDDMY_MD_FILL NOT ind_FRAME7 
	    ind_FILL7_2 = INDDMY_HD_FILL NOT ind_FRAME7
	    ind_M7F_1 = RECTANGLES dmW_M7_ind dmL_M7_ind dmS_M7_ind_1 OFFSET dmO_M7_ind_1 INSIDE OF LAYER ind_FILL7_1
	    ind_M7F_2 = RECTANGLES dmW_M7_ind dmL_M7_ind dmS_M7_ind_2 OFFSET dmO_M7_ind_2 INSIDE OF LAYER ind_FILL7_2

	ind_FM7_1 = ind_M7F_1 NOT INTERACT (EXT ind_M7F_1 < dmS_M7_ind_1 ABUT SINGULAR REGION)
	ind_FM7_2 = ind_M7F_2 NOT INTERACT (EXT ind_M7F_2 < dmS_M7_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM7_1 = DENSITY M7x ind_FM7_1 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL7_1 BACKUP 
	ind_maxOPENM7_2 = DENSITY M7x ind_FM7_2 > maxD_M7 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL7_2 BACKUP
	ind_DM7F_1 = ind_FM7_1 OUTSIDE ind_maxOPENM7_1
	ind_DM7F_2 = ind_FM7_2 OUTSIDE ind_maxOPENM7_2
	ind_DM7F = ind_DM7F_1 OR ind_DM7F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM8
#IFDEF 34K_THICK_M8
	ind_minOPENM8 = DENSITY M8x < minD_M8 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den
	ind_emptyOPENM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M8Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M8ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M8InnerHole = HOLES M8i INNER
	ind_M8BigHole = SIZE ind_M8InnerHole BY - excludeHoleSize/2
	ind_M8ExcHole = (ind_M8InnerHole OUTSIDE ind_M8BigHole) NOT M8i
        #ENDIF	
        ind_BLOCK8    = SIZE DM8EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA8   = SIZE M8i BY (dm2M8 + grid)
	ind_M8mid     = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i
	ind_M8wide    = (SIZE ind_M8mid BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i
	ind_FRAMEB8   = SIZE ind_M8wide BY (dm2WM8 + grid) // DM8 to 4.5um wide metal 3um
	ind_FRAMEC8   = SIZE DUM8 BY (dm2DM8 + grid)    
	ind_FRAME8Pre = ((ind_FRAMEA8 OR ind_FRAMEB8) OR ind_FRAMEC8) OR ind_M8ExcHole
	FRAMEdm8 = SIZE M8i BY (dm2M8_ind + grid) // DM8 to metal
	ind_FRAMEA8_45 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (dm452M8_ind + grid) // DM8 to 45 degree metal

    #IFDEF CBM_OVER_M8
	    ind_FRAME8 = ((((((ind_FRAME8Pre OR ind_BLOCK8) OR ind_NFILL) OR ind_FRAMEA8_45) OR FRAMEdm8) OR CBMx) OR HVxx) OR OD_RDG_M8
	#ELSE
	    ind_FRAME8 = (((((ind_FRAME8Pre OR ind_BLOCK8) OR ind_NFILL) OR ind_FRAMEA8_45) OR FRAMEdm8) OR HVxx) OR OD_RDG_M8
	#ENDIF
	    ind_FILL8_1 = INDDMY_MD_FILL NOT ind_FRAME8 
	    ind_FILL8_2 = INDDMY_HD_FILL NOT ind_FRAME8
	    ind_M8F_1 = RECTANGLES dmW_M8_ind dmL_M8_ind dmS_M8_ind_1 OFFSET dmO_M8_ind_1 INSIDE OF LAYER ind_FILL8_1
	    ind_M8F_2 = RECTANGLES dmW_M8_ind dmL_M8_ind dmS_M8_ind_2 OFFSET dmO_M8_ind_2 INSIDE OF LAYER ind_FILL8_2

	ind_FM8_1 = ind_M8F_1 NOT INTERACT (EXT ind_M8F_1 < dmS_M8_ind_1 ABUT SINGULAR REGION)
	ind_FM8_2 = ind_M8F_2 NOT INTERACT (EXT ind_M8F_2 < dmS_M8_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM8_1 = DENSITY M8x ind_FM8_1 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL8_1 BACKUP 
	ind_maxOPENM8_2 = DENSITY M8x ind_FM8_2 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL8_2 BACKUP
	ind_DM8F_1 = ind_FM8_1 OUTSIDE ind_maxOPENM8_1
	ind_DM8F_2 = ind_FM8_2 OUTSIDE ind_maxOPENM8_2
	ind_DM8F = ind_DM8F_1 OR ind_DM8F_2
#ELSE
#IFDEF 12K_THICK_M8
#ELSE
#IFDEF 9K_THICK_M8
	ind_minOPENM8 = DENSITY M8x < minD_M8 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M8Min.den
	ind_emptyOPENM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M8Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M8ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M8InnerHole = HOLES M8i INNER
	ind_M8BigHole = SIZE ind_M8InnerHole BY - excludeHoleSize/2
	ind_M8ExcHole = (ind_M8InnerHole OUTSIDE ind_M8BigHole) NOT M8i
        #ENDIF	
        ind_BLOCK8    = SIZE DM8EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA8   = SIZE M8i BY (dm2M8 + grid)
	ind_M8mid     = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i
	ind_M8wide    = (SIZE ind_M8mid BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i
	ind_FRAMEB8   = SIZE ind_M8wide BY (dm2WM8 + grid) // DM8 to 4.5um wide metal 3um
	ind_FRAMEC8   = SIZE DUM8 BY (dm2DM8 + grid)    
	ind_FRAME8Pre = ((ind_FRAMEA8 OR ind_FRAMEB8) OR ind_FRAMEC8) OR ind_M8ExcHole
	FRAMEdm8 = SIZE M8i BY (dm2M8_ind + grid) // DM8 to metal
	ind_FRAMEA8_45 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (dm452M8_ind + grid) // DM8 to 45 degree metal

    #IFDEF CBM_OVER_M8
	    ind_FRAME8 = (((((((ind_FRAME8Pre OR ind_BLOCK8) OR ind_NFILL) OR ind_FRAMEA8_45) OR FRAMEdm8) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M8
	#ELSE
	    ind_FRAME8 = ((((((ind_FRAME8Pre OR ind_BLOCK8) OR ind_NFILL) OR ind_FRAMEA8_45) OR FRAMEdm8) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M8
	#ENDIF
	    ind_FILL8_1 = INDDMY_MD_FILL NOT ind_FRAME8 
	    ind_FILL8_2 = INDDMY_HD_FILL NOT ind_FRAME8
	    ind_M8F_1 = RECTANGLES dmW_M8_ind dmL_M8_ind dmS_M8_ind_1 OFFSET dmO_M8_ind_1 INSIDE OF LAYER ind_FILL8_1
	    ind_M8F_2 = RECTANGLES dmW_M8_ind dmL_M8_ind dmS_M8_ind_2 OFFSET dmO_M8_ind_2 INSIDE OF LAYER ind_FILL8_2

	ind_FM8_1 = ind_M8F_1 NOT INTERACT (EXT ind_M8F_1 < dmS_M8_ind_1 ABUT SINGULAR REGION)
	ind_FM8_2 = ind_M8F_2 NOT INTERACT (EXT ind_M8F_2 < dmS_M8_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM8_1 = DENSITY M8x ind_FM8_1 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL8_1 BACKUP 
	ind_maxOPENM8_2 = DENSITY M8x ind_FM8_2 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL8_2 BACKUP
	ind_DM8F_1 = ind_FM8_1 OUTSIDE ind_maxOPENM8_1
	ind_DM8F_2 = ind_FM8_2 OUTSIDE ind_maxOPENM8_2
	ind_DM8F = ind_DM8F_1 OR ind_DM8F_2


#ELSE
#IFDEF 5K_THICK_M8
#ELSE	// 3K_THICK_M8
	ind_D30M8 = DENSITY M8x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M8.den30
	ind_D40M8 = DENSITY M8x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M8.den40
	ind_D50M8 = DENSITY M8x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M8.den50
	ind_emptyM8 = DENSITY M8x < emptyD_M8 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M8.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M8ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M8InnerHole = HOLES M8i INNER
	ind_M8BigHole = SIZE ind_M8InnerHole BY - excludeHoleSize/2
	ind_M8ExcHole = (ind_M8InnerHole OUTSIDE ind_M8BigHole) NOT M8i
        #ENDIF	
        ind_BLOCK8    = SIZE DM8EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA8   = SIZE M8i BY (DM8_301 + grid)
	ind_FRAMEA8_o45 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (DM845_301 + grid)
	ind_M8mid     = (SIZE M8i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M8i

	ind_M8wide_W1 = (SIZE ind_M8mid BY wideM8_W1/2 UNDEROVER TRUNCATE wideM8_W1/2) AND M8i	
	ind_M8wide_W11 = (SIZE ind_M8wide_W1 BY wideM8_W11/2 UNDEROVER TRUNCATE wideM8_W11/2) AND M8i
	ind_M8wide_W2 = (SIZE ind_M8wide_W1 BY wideM8_W2/2 UNDEROVER TRUNCATE wideM8_W2/2) AND M8i
	ind_M8wide = (SIZE ind_M8wide_W2 BY wideM8/2 UNDEROVER TRUNCATE wideM8/2) AND M8i
	
	ind_FRAMEB8   = SIZE ind_M8wide BY (dm2WM8 + grid) // DM8 to 4.5um wide metal 3um
	ind_FRAMEB8_W2 = SIZE ind_M8wide_W2 BY (dm2WM8_W2 + grid) // DM8 to 1.5um wide metal 0.5
	ind_FRAMEB8_W1 = SIZE ind_M8wide_W1 BY (dm2WM8_W1 + grid) // DM8 to 0.21um wide metal
	ind_FRAMEB8_W11 = SIZE ind_M8wide_W11 BY (dm2WM8_W11 + grid) // DM8 to 0.38um wide metal

	ind_FRAMEC8   = SIZE DUM8 BY (dm2DM8 + grid)    
	ind_FRAME8Pre = ((((ind_FRAMEA8 OR ind_FRAMEB8) OR ind_FRAMEC8) OR ind_M8ExcHole) OR ind_FRAMEB8_W2) OR ind_FRAMEA8_o45
	FRAMEdm8 = SIZE M8i BY (dm2M8_ind + grid) // DM8 to metal
	ind_FRAMEA8_45 = EXPAND EDGE (M8i ANGLE == 45) OUTSIDE BY (dm452M8_ind + grid) // DM8 to 45 degree metal

    #IFDEF CBM_OVER_M8
	    ind_FRAME8 = ((((((ind_FRAME8Pre OR ind_BLOCK8) OR ind_NFILL) OR ind_FRAMEA8_45) OR FRAMEdm8) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M8
	#ELSE
	    ind_FRAME8 = (((((ind_FRAME8Pre OR ind_BLOCK8) OR ind_NFILL) OR ind_FRAMEA8_45) OR FRAMEdm8) OR (HVxx OR HVNWxx)) OR OD_RDG_M8
	#ENDIF
	    ind_FILL8_1 = INDDMY_MD_FILL NOT ind_FRAME8 
	    ind_FILL8_2 = INDDMY_HD_FILL NOT ind_FRAME8
	    ind_M8F_1 = RECTANGLES dmW_M8_ind dmL_M8_ind dmS_M8_ind_1 OFFSET dmO_M8_ind_1 INSIDE OF LAYER ind_FILL8_1
	    ind_M8F_2 = RECTANGLES dmW_M8_ind dmL_M8_ind dmS_M8_ind_2 OFFSET dmO_M8_ind_2 INSIDE OF LAYER ind_FILL8_2

	ind_FM8_1 = ind_M8F_1 NOT INTERACT (EXT ind_M8F_1 < dmS_M8_ind_1 ABUT SINGULAR REGION)
	ind_FM8_2 = ind_M8F_2 NOT INTERACT (EXT ind_M8F_2 < dmS_M8_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM8_1 = DENSITY M8x ind_FM8_1 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL8_1 BACKUP 
	ind_maxOPENM8_2 = DENSITY M8x ind_FM8_2 > maxD_M8 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL8_2 BACKUP
	ind_DM8F_1 = ind_FM8_1 OUTSIDE ind_maxOPENM8_1
	ind_DM8F_2 = ind_FM8_2 OUTSIDE ind_maxOPENM8_2
	ind_DM8F = ind_DM8F_1 OR ind_DM8F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM9
#IFDEF 34K_THICK_M9
	ind_minOPENM9 = DENSITY M9x < minD_M9 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den
	ind_emptyOPENM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M9Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M9ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M9InnerHole = HOLES M9i INNER
	ind_M9BigHole = SIZE ind_M9InnerHole BY - excludeHoleSize/2
	ind_M9ExcHole = (ind_M9InnerHole OUTSIDE ind_M9BigHole) NOT M9i
        #ENDIF	
        ind_BLOCK9    = SIZE DM9EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA9   = SIZE M9i BY (dm2M9 + grid)
	ind_M9mid     = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i
	ind_M9wide    = (SIZE ind_M9mid BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i
	ind_FRAMEB9   = SIZE ind_M9wide BY (dm2WM9 + grid) // DM9 to 4.5um wide metal 3um
	ind_FRAMEC9   = SIZE DUM9 BY (dm2DM9 + grid)    
	ind_FRAME9Pre = ((ind_FRAMEA9 OR ind_FRAMEB9) OR ind_FRAMEC9) OR ind_M9ExcHole
	FRAMEdm9 = SIZE M9i BY (dm2M9_ind + grid) // DM9 to metal
	ind_FRAMEA9_45 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (dm452M9_ind + grid) // DM9 to 45 degree metal

    #IFDEF CBM_OVER_M9
	    ind_FRAME9 = ((((((ind_FRAME9Pre OR ind_BLOCK9) OR ind_NFILL) OR ind_FRAMEA9_45) OR FRAMEdm9) OR CBMx) OR HVxx) OR OD_RDG_M9
	#ELSE
	    ind_FRAME9 = (((((ind_FRAME9Pre OR ind_BLOCK9) OR ind_NFILL) OR ind_FRAMEA9_45) OR FRAMEdm9) OR HVxx) OR OD_RDG_M9
	#ENDIF
	    ind_FILL9_1 = INDDMY_MD_FILL NOT ind_FRAME9 
	    ind_FILL9_2 = INDDMY_HD_FILL NOT ind_FRAME9
	    ind_M9F_1 = RECTANGLES dmW_M9_ind dmL_M9_ind dmS_M9_ind_1 OFFSET dmO_M9_ind_1 INSIDE OF LAYER ind_FILL9_1
	    ind_M9F_2 = RECTANGLES dmW_M9_ind dmL_M9_ind dmS_M9_ind_2 OFFSET dmO_M9_ind_2 INSIDE OF LAYER ind_FILL9_2

	ind_FM9_1 = ind_M9F_1 NOT INTERACT (EXT ind_M9F_1 < dmS_M9_ind_1 ABUT SINGULAR REGION)
	ind_FM9_2 = ind_M9F_2 NOT INTERACT (EXT ind_M9F_2 < dmS_M9_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM9_1 = DENSITY M9x ind_FM9_1 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL9_1 BACKUP 
	ind_maxOPENM9_2 = DENSITY M9x ind_FM9_2 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL9_2 BACKUP
	ind_DM9F_1 = ind_FM9_1 OUTSIDE ind_maxOPENM9_1
	ind_DM9F_2 = ind_FM9_2 OUTSIDE ind_maxOPENM9_2
	ind_DM9F = ind_DM9F_1 OR ind_DM9F_2
#ELSE
#IFDEF 12K_THICK_M9
#ELSE
#IFDEF 9K_THICK_M9
	ind_minOPENM9 = DENSITY M9x < minD_M9 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M9Min.den
	ind_emptyOPENM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M9Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M9ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M9InnerHole = HOLES M9i INNER
	ind_M9BigHole = SIZE ind_M9InnerHole BY - excludeHoleSize/2
	ind_M9ExcHole = (ind_M9InnerHole OUTSIDE ind_M9BigHole) NOT M9i
        #ENDIF	
        ind_BLOCK9    = SIZE DM9EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA9   = SIZE M9i BY (dm2M9 + grid)
	ind_M9mid     = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i
	ind_M9wide    = (SIZE ind_M9mid BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i
	ind_FRAMEB9   = SIZE ind_M9wide BY (dm2WM9 + grid) // DM9 to 4.5um wide metal 3um
	ind_FRAMEC9   = SIZE DUM9 BY (dm2DM9 + grid)    
	ind_FRAME9Pre = ((ind_FRAMEA9 OR ind_FRAMEB9) OR ind_FRAMEC9) OR ind_M9ExcHole
	FRAMEdm9 = SIZE M9i BY (dm2M9_ind + grid) // DM9 to metal
	ind_FRAMEA9_45 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (dm452M9_ind + grid) // DM9 to 45 degree metal

    #IFDEF CBM_OVER_M9
	    ind_FRAME9 = (((((((ind_FRAME9Pre OR ind_BLOCK9) OR ind_NFILL) OR ind_FRAMEA9_45) OR FRAMEdm9) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M9
	#ELSE
	    ind_FRAME9 = ((((((ind_FRAME9Pre OR ind_BLOCK9) OR ind_NFILL) OR ind_FRAMEA9_45) OR FRAMEdm9) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M9
	#ENDIF
	    ind_FILL9_1 = INDDMY_MD_FILL NOT ind_FRAME9 
	    ind_FILL9_2 = INDDMY_HD_FILL NOT ind_FRAME9
	    ind_M9F_1 = RECTANGLES dmW_M9_ind dmL_M9_ind dmS_M9_ind_1 OFFSET dmO_M9_ind_1 INSIDE OF LAYER ind_FILL9_1
	    ind_M9F_2 = RECTANGLES dmW_M9_ind dmL_M9_ind dmS_M9_ind_2 OFFSET dmO_M9_ind_2 INSIDE OF LAYER ind_FILL9_2

	ind_FM9_1 = ind_M9F_1 NOT INTERACT (EXT ind_M9F_1 < dmS_M9_ind_1 ABUT SINGULAR REGION)
	ind_FM9_2 = ind_M9F_2 NOT INTERACT (EXT ind_M9F_2 < dmS_M9_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM9_1 = DENSITY M9x ind_FM9_1 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL9_1 BACKUP 
	ind_maxOPENM9_2 = DENSITY M9x ind_FM9_2 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL9_2 BACKUP
	ind_DM9F_1 = ind_FM9_1 OUTSIDE ind_maxOPENM9_1
	ind_DM9F_2 = ind_FM9_2 OUTSIDE ind_maxOPENM9_2
	ind_DM9F = ind_DM9F_1 OR ind_DM9F_2


#ELSE
#IFDEF 5K_THICK_M9
#ELSE	// 3K_THICK_M9
	ind_D30M9 = DENSITY M9x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M9.den30
	ind_D40M9 = DENSITY M9x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M9.den40
	ind_D50M9 = DENSITY M9x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M9.den50
	ind_emptyM9 = DENSITY M9x < emptyD_M9 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M9.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M9ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M9InnerHole = HOLES M9i INNER
	ind_M9BigHole = SIZE ind_M9InnerHole BY - excludeHoleSize/2
	ind_M9ExcHole = (ind_M9InnerHole OUTSIDE ind_M9BigHole) NOT M9i
        #ENDIF	
        ind_BLOCK9    = SIZE DM9EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA9   = SIZE M9i BY (DM9_301 + grid)
	ind_FRAMEA9_o45 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (DM945_301 + grid)
	ind_M9mid     = (SIZE M9i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M9i

	ind_M9wide_W1 = (SIZE ind_M9mid BY wideM9_W1/2 UNDEROVER TRUNCATE wideM9_W1/2) AND M9i	
	ind_M9wide_W11 = (SIZE ind_M9wide_W1 BY wideM9_W11/2 UNDEROVER TRUNCATE wideM9_W11/2) AND M9i
	ind_M9wide_W2 = (SIZE ind_M9wide_W1 BY wideM9_W2/2 UNDEROVER TRUNCATE wideM9_W2/2) AND M9i
	ind_M9wide = (SIZE ind_M9wide_W2 BY wideM9/2 UNDEROVER TRUNCATE wideM9/2) AND M9i
	
	ind_FRAMEB9   = SIZE ind_M9wide BY (dm2WM9 + grid) // DM9 to 4.5um wide metal 3um
	ind_FRAMEB9_W2 = SIZE ind_M9wide_W2 BY (dm2WM9_W2 + grid) // DM9 to 1.5um wide metal 0.5
	ind_FRAMEB9_W1 = SIZE ind_M9wide_W1 BY (dm2WM9_W1 + grid) // DM9 to 0.21um wide metal
	ind_FRAMEB9_W11 = SIZE ind_M9wide_W11 BY (dm2WM9_W11 + grid) // DM9 to 0.38um wide metal

	ind_FRAMEC9   = SIZE DUM9 BY (dm2DM9 + grid)    
	ind_FRAME9Pre = ((((ind_FRAMEA9 OR ind_FRAMEB9) OR ind_FRAMEC9) OR ind_M9ExcHole) OR ind_FRAMEB9_W2) OR ind_FRAMEA9_o45
	FRAMEdm9 = SIZE M9i BY (dm2M9_ind + grid) // DM9 to metal
	ind_FRAMEA9_45 = EXPAND EDGE (M9i ANGLE == 45) OUTSIDE BY (dm452M9_ind + grid) // DM9 to 45 degree metal

    #IFDEF CBM_OVER_M9
	    ind_FRAME9 = ((((((ind_FRAME9Pre OR ind_BLOCK9) OR ind_NFILL) OR ind_FRAMEA9_45) OR FRAMEdm9) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M9
	#ELSE
	    ind_FRAME9 = (((((ind_FRAME9Pre OR ind_BLOCK9) OR ind_NFILL) OR ind_FRAMEA9_45) OR FRAMEdm9) OR (HVxx OR HVNWxx)) OR OD_RDG_M9
	#ENDIF
	    ind_FILL9_1 = INDDMY_MD_FILL NOT ind_FRAME9 
	    ind_FILL9_2 = INDDMY_HD_FILL NOT ind_FRAME9
	    ind_M9F_1 = RECTANGLES dmW_M9_ind dmL_M9_ind dmS_M9_ind_1 OFFSET dmO_M9_ind_1 INSIDE OF LAYER ind_FILL9_1
	    ind_M9F_2 = RECTANGLES dmW_M9_ind dmL_M9_ind dmS_M9_ind_2 OFFSET dmO_M9_ind_2 INSIDE OF LAYER ind_FILL9_2

	ind_FM9_1 = ind_M9F_1 NOT INTERACT (EXT ind_M9F_1 < dmS_M9_ind_1 ABUT SINGULAR REGION)
	ind_FM9_2 = ind_M9F_2 NOT INTERACT (EXT ind_M9F_2 < dmS_M9_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM9_1 = DENSITY M9x ind_FM9_1 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL9_1 BACKUP 
	ind_maxOPENM9_2 = DENSITY M9x ind_FM9_2 > maxD_M9 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL9_2 BACKUP
	ind_DM9F_1 = ind_FM9_1 OUTSIDE ind_maxOPENM9_1
	ind_DM9F_2 = ind_FM9_2 OUTSIDE ind_maxOPENM9_2
	ind_DM9F = ind_DM9F_1 OR ind_DM9F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM10
#IFDEF 34K_THICK_M10
	ind_minOPENM10 = DENSITY M10x < minD_M10 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den
	ind_emptyOPENM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M10Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M10ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M10InnerHole = HOLES M10i INNER
	ind_M10BigHole = SIZE ind_M10InnerHole BY - excludeHoleSize/2
	ind_M10ExcHole = (ind_M10InnerHole OUTSIDE ind_M10BigHole) NOT M10i
        #ENDIF	
        ind_BLOCK10    = SIZE DM10EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA10   = SIZE M10i BY (dm2M10 + grid)
	ind_M10mid     = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i
	ind_M10wide    = (SIZE ind_M10mid BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i
	ind_FRAMEB10   = SIZE ind_M10wide BY (dm2WM10 + grid) // DM10 to 4.5um wide metal 3um
	ind_FRAMEC10   = SIZE DUM10 BY (dm2DM10 + grid)    
	ind_FRAME10Pre = ((ind_FRAMEA10 OR ind_FRAMEB10) OR ind_FRAMEC10) OR ind_M10ExcHole
	FRAMEdm10 = SIZE M10i BY (dm2M10_ind + grid) // DM10 to metal
	ind_FRAMEA10_45 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (dm452M10_ind + grid) // DM10 to 45 degree metal

    #IFDEF CBM_OVER_M10
	    ind_FRAME10 = ((((((ind_FRAME10Pre OR ind_BLOCK10) OR ind_NFILL) OR ind_FRAMEA10_45) OR FRAMEdm10) OR CBMx) OR HVxx) OR OD_RDG_M10
	#ELSE
	    ind_FRAME10 = (((((ind_FRAME10Pre OR ind_BLOCK10) OR ind_NFILL) OR ind_FRAMEA10_45) OR FRAMEdm10) OR HVxx) OR OD_RDG_M10
	#ENDIF
	    ind_FILL10_1 = INDDMY_MD_FILL NOT ind_FRAME10 
	    ind_FILL10_2 = INDDMY_HD_FILL NOT ind_FRAME10
	    ind_M10F_1 = RECTANGLES dmW_M10_ind dmL_M10_ind dmS_M10_ind_1 OFFSET dmO_M10_ind_1 INSIDE OF LAYER ind_FILL10_1
	    ind_M10F_2 = RECTANGLES dmW_M10_ind dmL_M10_ind dmS_M10_ind_2 OFFSET dmO_M10_ind_2 INSIDE OF LAYER ind_FILL10_2

	ind_FM10_1 = ind_M10F_1 NOT INTERACT (EXT ind_M10F_1 < dmS_M10_ind_1 ABUT SINGULAR REGION)
	ind_FM10_2 = ind_M10F_2 NOT INTERACT (EXT ind_M10F_2 < dmS_M10_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM10_1 = DENSITY M10x ind_FM10_1 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL10_1 BACKUP 
	ind_maxOPENM10_2 = DENSITY M10x ind_FM10_2 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL10_2 BACKUP
	ind_DM10F_1 = ind_FM10_1 OUTSIDE ind_maxOPENM10_1
	ind_DM10F_2 = ind_FM10_2 OUTSIDE ind_maxOPENM10_2
	ind_DM10F = ind_DM10F_1 OR ind_DM10F_2
#ELSE
#IFDEF 12K_THICK_M10
#ELSE
#IFDEF 9K_THICK_M10
	ind_minOPENM10 = DENSITY M10x < minD_M10 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M10Min.den
	ind_emptyOPENM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M10Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M10ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M10InnerHole = HOLES M10i INNER
	ind_M10BigHole = SIZE ind_M10InnerHole BY - excludeHoleSize/2
	ind_M10ExcHole = (ind_M10InnerHole OUTSIDE ind_M10BigHole) NOT M10i
        #ENDIF	
        ind_BLOCK10    = SIZE DM10EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA10   = SIZE M10i BY (dm2M10 + grid)
	ind_M10mid     = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i
	ind_M10wide    = (SIZE ind_M10mid BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i
	ind_FRAMEB10   = SIZE ind_M10wide BY (dm2WM10 + grid) // DM10 to 4.5um wide metal 3um
	ind_FRAMEC10   = SIZE DUM10 BY (dm2DM10 + grid)    
	ind_FRAME10Pre = ((ind_FRAMEA10 OR ind_FRAMEB10) OR ind_FRAMEC10) OR ind_M10ExcHole
	FRAMEdm10 = SIZE M10i BY (dm2M10_ind + grid) // DM10 to metal
	ind_FRAMEA10_45 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (dm452M10_ind + grid) // DM10 to 45 degree metal

    #IFDEF CBM_OVER_M10
	    ind_FRAME10 = (((((((ind_FRAME10Pre OR ind_BLOCK10) OR ind_NFILL) OR ind_FRAMEA10_45) OR FRAMEdm10) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M10
	#ELSE
	    ind_FRAME10 = ((((((ind_FRAME10Pre OR ind_BLOCK10) OR ind_NFILL) OR ind_FRAMEA10_45) OR FRAMEdm10) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M10
	#ENDIF
	    ind_FILL10_1 = INDDMY_MD_FILL NOT ind_FRAME10 
	    ind_FILL10_2 = INDDMY_HD_FILL NOT ind_FRAME10
	    ind_M10F_1 = RECTANGLES dmW_M10_ind dmL_M10_ind dmS_M10_ind_1 OFFSET dmO_M10_ind_1 INSIDE OF LAYER ind_FILL10_1
	    ind_M10F_2 = RECTANGLES dmW_M10_ind dmL_M10_ind dmS_M10_ind_2 OFFSET dmO_M10_ind_2 INSIDE OF LAYER ind_FILL10_2

	ind_FM10_1 = ind_M10F_1 NOT INTERACT (EXT ind_M10F_1 < dmS_M10_ind_1 ABUT SINGULAR REGION)
	ind_FM10_2 = ind_M10F_2 NOT INTERACT (EXT ind_M10F_2 < dmS_M10_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM10_1 = DENSITY M10x ind_FM10_1 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL10_1 BACKUP 
	ind_maxOPENM10_2 = DENSITY M10x ind_FM10_2 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL10_2 BACKUP
	ind_DM10F_1 = ind_FM10_1 OUTSIDE ind_maxOPENM10_1
	ind_DM10F_2 = ind_FM10_2 OUTSIDE ind_maxOPENM10_2
	ind_DM10F = ind_DM10F_1 OR ind_DM10F_2


#ELSE
#IFDEF 5K_THICK_M10
#ELSE	// 3K_THICK_M10
	ind_D30M10 = DENSITY M10x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M10.den30
	ind_D40M10 = DENSITY M10x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M10.den40
	ind_D50M10 = DENSITY M10x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M10.den50
	ind_emptyM10 = DENSITY M10x < emptyD_M10 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M10.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M10ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M10InnerHole = HOLES M10i INNER
	ind_M10BigHole = SIZE ind_M10InnerHole BY - excludeHoleSize/2
	ind_M10ExcHole = (ind_M10InnerHole OUTSIDE ind_M10BigHole) NOT M10i
        #ENDIF	
        ind_BLOCK10    = SIZE DM10EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA10   = SIZE M10i BY (DM10_301 + grid)
	ind_FRAMEA10_o45 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (DM1045_301 + grid)
	ind_M10mid     = (SIZE M10i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M10i

	ind_M10wide_W1 = (SIZE ind_M10mid BY wideM10_W1/2 UNDEROVER TRUNCATE wideM10_W1/2) AND M10i	
	ind_M10wide_W11 = (SIZE ind_M10wide_W1 BY wideM10_W11/2 UNDEROVER TRUNCATE wideM10_W11/2) AND M10i
	ind_M10wide_W2 = (SIZE ind_M10wide_W1 BY wideM10_W2/2 UNDEROVER TRUNCATE wideM10_W2/2) AND M10i
	ind_M10wide = (SIZE ind_M10wide_W2 BY wideM10/2 UNDEROVER TRUNCATE wideM10/2) AND M10i
	
	ind_FRAMEB10   = SIZE ind_M10wide BY (dm2WM10 + grid) // DM10 to 4.5um wide metal 3um
	ind_FRAMEB10_W2 = SIZE ind_M10wide_W2 BY (dm2WM10_W2 + grid) // DM10 to 1.5um wide metal 0.5
	ind_FRAMEB10_W1 = SIZE ind_M10wide_W1 BY (dm2WM10_W1 + grid) // DM10 to 0.21um wide metal
	ind_FRAMEB10_W11 = SIZE ind_M10wide_W11 BY (dm2WM10_W11 + grid) // DM10 to 0.38um wide metal

	ind_FRAMEC10   = SIZE DUM10 BY (dm2DM10 + grid)    
	ind_FRAME10Pre = ((((ind_FRAMEA10 OR ind_FRAMEB10) OR ind_FRAMEC10) OR ind_M10ExcHole) OR ind_FRAMEB10_W2) OR ind_FRAMEA10_o45
	FRAMEdm10 = SIZE M10i BY (dm2M10_ind + grid) // DM10 to metal
	ind_FRAMEA10_45 = EXPAND EDGE (M10i ANGLE == 45) OUTSIDE BY (dm452M10_ind + grid) // DM10 to 45 degree metal

    #IFDEF CBM_OVER_M10
	    ind_FRAME10 = ((((((ind_FRAME10Pre OR ind_BLOCK10) OR ind_NFILL) OR ind_FRAMEA10_45) OR FRAMEdm10) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M10
	#ELSE
	    ind_FRAME10 = (((((ind_FRAME10Pre OR ind_BLOCK10) OR ind_NFILL) OR ind_FRAMEA10_45) OR FRAMEdm10) OR (HVxx OR HVNWxx)) OR OD_RDG_M10
	#ENDIF
	    ind_FILL10_1 = INDDMY_MD_FILL NOT ind_FRAME10 
	    ind_FILL10_2 = INDDMY_HD_FILL NOT ind_FRAME10
	    ind_M10F_1 = RECTANGLES dmW_M10_ind dmL_M10_ind dmS_M10_ind_1 OFFSET dmO_M10_ind_1 INSIDE OF LAYER ind_FILL10_1
	    ind_M10F_2 = RECTANGLES dmW_M10_ind dmL_M10_ind dmS_M10_ind_2 OFFSET dmO_M10_ind_2 INSIDE OF LAYER ind_FILL10_2

	ind_FM10_1 = ind_M10F_1 NOT INTERACT (EXT ind_M10F_1 < dmS_M10_ind_1 ABUT SINGULAR REGION)
	ind_FM10_2 = ind_M10F_2 NOT INTERACT (EXT ind_M10F_2 < dmS_M10_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM10_1 = DENSITY M10x ind_FM10_1 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL10_1 BACKUP 
	ind_maxOPENM10_2 = DENSITY M10x ind_FM10_2 > maxD_M10 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL10_2 BACKUP
	ind_DM10F_1 = ind_FM10_1 OUTSIDE ind_maxOPENM10_1
	ind_DM10F_2 = ind_FM10_2 OUTSIDE ind_maxOPENM10_2
	ind_DM10F = ind_DM10F_1 OR ind_DM10F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM11
#IFDEF 34K_THICK_M11
	ind_minOPENM11 = DENSITY M11x < minD_M11 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den
	ind_emptyOPENM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M11Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M11ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M11InnerHole = HOLES M11i INNER
	ind_M11BigHole = SIZE ind_M11InnerHole BY - excludeHoleSize/2
	ind_M11ExcHole = (ind_M11InnerHole OUTSIDE ind_M11BigHole) NOT M11i
        #ENDIF	
        ind_BLOCK11    = SIZE DM11EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA11   = SIZE M11i BY (dm2M11 + grid)
	ind_M11mid     = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i
	ind_M11wide    = (SIZE ind_M11mid BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i
	ind_FRAMEB11   = SIZE ind_M11wide BY (dm2WM11 + grid) // DM11 to 4.5um wide metal 3um
	ind_FRAMEC11   = SIZE DUM11 BY (dm2DM11 + grid)    
	ind_FRAME11Pre = ((ind_FRAMEA11 OR ind_FRAMEB11) OR ind_FRAMEC11) OR ind_M11ExcHole
	FRAMEdm11 = SIZE M11i BY (dm2M11_ind + grid) // DM11 to metal
	ind_FRAMEA11_45 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (dm452M11_ind + grid) // DM11 to 45 degree metal

    #IFDEF CBM_OVER_M11
	    ind_FRAME11 = ((((((ind_FRAME11Pre OR ind_BLOCK11) OR ind_NFILL) OR ind_FRAMEA11_45) OR FRAMEdm11) OR CBMx) OR HVxx) OR OD_RDG_M11
	#ELSE
	    ind_FRAME11 = (((((ind_FRAME11Pre OR ind_BLOCK11) OR ind_NFILL) OR ind_FRAMEA11_45) OR FRAMEdm11) OR HVxx) OR OD_RDG_M11
	#ENDIF
	    ind_FILL11_1 = INDDMY_MD_FILL NOT ind_FRAME11 
	    ind_FILL11_2 = INDDMY_HD_FILL NOT ind_FRAME11
	    ind_M11F_1 = RECTANGLES dmW_M11_ind dmL_M11_ind dmS_M11_ind_1 OFFSET dmO_M11_ind_1 INSIDE OF LAYER ind_FILL11_1
	    ind_M11F_2 = RECTANGLES dmW_M11_ind dmL_M11_ind dmS_M11_ind_2 OFFSET dmO_M11_ind_2 INSIDE OF LAYER ind_FILL11_2

	ind_FM11_1 = ind_M11F_1 NOT INTERACT (EXT ind_M11F_1 < dmS_M11_ind_1 ABUT SINGULAR REGION)
	ind_FM11_2 = ind_M11F_2 NOT INTERACT (EXT ind_M11F_2 < dmS_M11_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM11_1 = DENSITY M11x ind_FM11_1 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL11_1 BACKUP 
	ind_maxOPENM11_2 = DENSITY M11x ind_FM11_2 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL11_2 BACKUP
	ind_DM11F_1 = ind_FM11_1 OUTSIDE ind_maxOPENM11_1
	ind_DM11F_2 = ind_FM11_2 OUTSIDE ind_maxOPENM11_2
	ind_DM11F = ind_DM11F_1 OR ind_DM11F_2
#ELSE
#IFDEF 12K_THICK_M11
#ELSE
#IFDEF 9K_THICK_M11
	ind_minOPENM11 = DENSITY M11x < minD_M11 WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP // PRINT M11Min.den
	ind_emptyOPENM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		      INSIDE OF LAYER bulk BACKUP // PRINT M11Empty.den
        #IFDEF FILL_IN_SLOT
       	ind_M11ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M11InnerHole = HOLES M11i INNER
	ind_M11BigHole = SIZE ind_M11InnerHole BY - excludeHoleSize/2
	ind_M11ExcHole = (ind_M11InnerHole OUTSIDE ind_M11BigHole) NOT M11i
        #ENDIF	
        ind_BLOCK11    = SIZE DM11EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA11   = SIZE M11i BY (dm2M11 + grid)
	ind_M11mid     = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i
	ind_M11wide    = (SIZE ind_M11mid BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i
	ind_FRAMEB11   = SIZE ind_M11wide BY (dm2WM11 + grid) // DM11 to 4.5um wide metal 3um
	ind_FRAMEC11   = SIZE DUM11 BY (dm2DM11 + grid)    
	ind_FRAME11Pre = ((ind_FRAMEA11 OR ind_FRAMEB11) OR ind_FRAMEC11) OR ind_M11ExcHole
	FRAMEdm11 = SIZE M11i BY (dm2M11_ind + grid) // DM11 to metal
	ind_FRAMEA11_45 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (dm452M11_ind + grid) // DM11 to 45 degree metal

    #IFDEF CBM_OVER_M11
	    ind_FRAME11 = (((((((ind_FRAME11Pre OR ind_BLOCK11) OR ind_NFILL) OR ind_FRAMEA11_45) OR FRAMEdm11) OR CBMx) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M11
	#ELSE
	    ind_FRAME11 = ((((((ind_FRAME11Pre OR ind_BLOCK11) OR ind_NFILL) OR ind_FRAMEA11_45) OR FRAMEdm11) OR AP_C_BLOCK) OR HVxx) OR OD_RDG_M11
	#ENDIF
	    ind_FILL11_1 = INDDMY_MD_FILL NOT ind_FRAME11 
	    ind_FILL11_2 = INDDMY_HD_FILL NOT ind_FRAME11
	    ind_M11F_1 = RECTANGLES dmW_M11_ind dmL_M11_ind dmS_M11_ind_1 OFFSET dmO_M11_ind_1 INSIDE OF LAYER ind_FILL11_1
	    ind_M11F_2 = RECTANGLES dmW_M11_ind dmL_M11_ind dmS_M11_ind_2 OFFSET dmO_M11_ind_2 INSIDE OF LAYER ind_FILL11_2

	ind_FM11_1 = ind_M11F_1 NOT INTERACT (EXT ind_M11F_1 < dmS_M11_ind_1 ABUT SINGULAR REGION)
	ind_FM11_2 = ind_M11F_2 NOT INTERACT (EXT ind_M11F_2 < dmS_M11_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM11_1 = DENSITY M11x ind_FM11_1 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL11_1 BACKUP 
	ind_maxOPENM11_2 = DENSITY M11x ind_FM11_2 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL11_2 BACKUP
	ind_DM11F_1 = ind_FM11_1 OUTSIDE ind_maxOPENM11_1
	ind_DM11F_2 = ind_FM11_2 OUTSIDE ind_maxOPENM11_2
	ind_DM11F = ind_DM11F_1 OR ind_DM11F_2


#ELSE
#IFDEF 5K_THICK_M11
#ELSE	// 3K_THICK_M11
	ind_D30M11 = DENSITY M11x <= 0.2 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M11.den30
	ind_D40M11 = DENSITY M11x <= 0.3 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M11.den40
	ind_D50M11 = DENSITY M11x <= 0.4 WINDOW WindowSize STEP WindowStep 
		   INSIDE OF LAYER bulk BACKUP // PRINT M11.den50
	ind_emptyM11 = DENSITY M11x < emptyD_M11 WINDOW emptyWindowSize STEP emptyWindowStep 
		  INSIDE OF LAYER bulk BACKUP // PRINT M11.den_empty

        #IFDEF FILL_IN_SLOT
       	ind_M11ExcHole  = COPY EMPTY	
        #ELSE
   	ind_M11InnerHole = HOLES M11i INNER
	ind_M11BigHole = SIZE ind_M11InnerHole BY - excludeHoleSize/2
	ind_M11ExcHole = (ind_M11InnerHole OUTSIDE ind_M11BigHole) NOT M11i
        #ENDIF	
        ind_BLOCK11    = SIZE DM11EXCL BY (dm2DMEXCL + grid)
        ind_FRAMEA11   = SIZE M11i BY (DM11_301 + grid)
	ind_FRAMEA11_o45 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (DM1145_301 + grid)
	ind_M11mid     = (SIZE M11i BY midM/2 UNDEROVER TRUNCATE midM/2) AND M11i

	ind_M11wide_W1 = (SIZE ind_M11mid BY wideM11_W1/2 UNDEROVER TRUNCATE wideM11_W1/2) AND M11i	
	ind_M11wide_W11 = (SIZE ind_M11wide_W1 BY wideM11_W11/2 UNDEROVER TRUNCATE wideM11_W11/2) AND M11i
	ind_M11wide_W2 = (SIZE ind_M11wide_W1 BY wideM11_W2/2 UNDEROVER TRUNCATE wideM11_W2/2) AND M11i
	ind_M11wide = (SIZE ind_M11wide_W2 BY wideM11/2 UNDEROVER TRUNCATE wideM11/2) AND M11i
	
	ind_FRAMEB11   = SIZE ind_M11wide BY (dm2WM11 + grid) // DM11 to 4.5um wide metal 3um
	ind_FRAMEB11_W2 = SIZE ind_M11wide_W2 BY (dm2WM11_W2 + grid) // DM11 to 1.5um wide metal 0.5
	ind_FRAMEB11_W1 = SIZE ind_M11wide_W1 BY (dm2WM11_W1 + grid) // DM11 to 0.21um wide metal
	ind_FRAMEB11_W11 = SIZE ind_M11wide_W11 BY (dm2WM11_W11 + grid) // DM11 to 0.38um wide metal

	ind_FRAMEC11   = SIZE DUM11 BY (dm2DM11 + grid)    
	ind_FRAME11Pre = ((((ind_FRAMEA11 OR ind_FRAMEB11) OR ind_FRAMEC11) OR ind_M11ExcHole) OR ind_FRAMEB11_W2) OR ind_FRAMEA11_o45
	FRAMEdm11 = SIZE M11i BY (dm2M11_ind + grid) // DM11 to metal
	ind_FRAMEA11_45 = EXPAND EDGE (M11i ANGLE == 45) OUTSIDE BY (dm452M11_ind + grid) // DM11 to 45 degree metal

    #IFDEF CBM_OVER_M11
	    ind_FRAME11 = ((((((ind_FRAME11Pre OR ind_BLOCK11) OR ind_NFILL) OR ind_FRAMEA11_45) OR FRAMEdm11) OR CBMx) OR (HVxx OR HVNWxx)) OR OD_RDG_M11
	#ELSE
	    ind_FRAME11 = (((((ind_FRAME11Pre OR ind_BLOCK11) OR ind_NFILL) OR ind_FRAMEA11_45) OR FRAMEdm11) OR (HVxx OR HVNWxx)) OR OD_RDG_M11
	#ENDIF
	    ind_FILL11_1 = INDDMY_MD_FILL NOT ind_FRAME11 
	    ind_FILL11_2 = INDDMY_HD_FILL NOT ind_FRAME11
	    ind_M11F_1 = RECTANGLES dmW_M11_ind dmL_M11_ind dmS_M11_ind_1 OFFSET dmO_M11_ind_1 INSIDE OF LAYER ind_FILL11_1
	    ind_M11F_2 = RECTANGLES dmW_M11_ind dmL_M11_ind dmS_M11_ind_2 OFFSET dmO_M11_ind_2 INSIDE OF LAYER ind_FILL11_2

	ind_FM11_1 = ind_M11F_1 NOT INTERACT (EXT ind_M11F_1 < dmS_M11_ind_1 ABUT SINGULAR REGION)
	ind_FM11_2 = ind_M11F_2 NOT INTERACT (EXT ind_M11F_2 < dmS_M11_ind_2 ABUT SINGULAR REGION)
	ind_maxOPENM11_1 = DENSITY M11x ind_FM11_1 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL11_1 BACKUP 
	ind_maxOPENM11_2 = DENSITY M11x ind_FM11_2 > maxD_M11 WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER ind_FILL11_2 BACKUP
	ind_DM11F_1 = ind_FM11_1 OUTSIDE ind_maxOPENM11_1
	ind_DM11F_2 = ind_FM11_2 OUTSIDE ind_maxOPENM11_2
	ind_DM11F = ind_DM11F_1 OR ind_DM11F_2
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF



#IFDEF FILL_AP
        minOPENAP = DENSITY APi < minD_AP WINDOW WindowSize STEP WindowStep 
		    INSIDE OF LAYER bulk BACKUP 
        BLOCK_AP =  SIZE APi BY (dap2AP + grid)          // dummy AP space to existed AP: 3.0 
        BLOCK_APEXCL = SIZE APEXCL BY (dm2DMEXCL + grid)  // dummy AP space to APEXCL : 0.6
        PadOpen = (((CBi OR CBDi) OR RVi) OR CB2i) OR PMi
        BLOCK_PadOpen = SIZE PadOpen BY (dap2CB + grid)   // dummy AP space to CB/CBD/RV/CB2/PM: 5.0 
        OPEN_AP = PUSH (minOPENAP AND CHIP)
	AP_R1 = (((OPEN_AP NOT NFILL) NOT BLOCK_AP) NOT BLOCK_APEXCL) NOT BLOCK_PadOpen       
        AP_F1 = RECTANGLES dap_W dap_L dap_S OFFSET dap_O INSIDE OF LAYER AP_R1
	AP_R2 = WITH WIDTH (AP_R1 NOT (SIZE AP_F1 BY (dap_S + grid))) >= dap_W 
        AP_F2 = RECTANGLES dap_W dap_L dap_S OFFSET dap_O INSIDE OF LAYER AP_R2
	AP_R3 = WITH WIDTH (AP_R2 NOT (SIZE AP_F2 BY (dap_S + grid))) >= dap_W
        AP_F3 = RECTANGLES dap_W dap_L dap_S OFFSET dap_O INSIDE OF LAYER AP_R3
        AP_F  = (AP_F1 OR AP_F2) OR AP_F3
	FILL_AP = AP_F NOT INTERACT (EXT AP_F < dap_S ABUT SINGULAR REGION)
	maxOPENM4 = DENSITY APi FILL_AP > maxD_AP WINDOW WindowSize STEP WindowSize 
		    INSIDE OF LAYER bulk BACKUP 
		       
	DAPF = FILL_AP OUTSIDE maxOPENM4

#ENDIF


//***********************************************************************************************************
// End of generation process
//***********************************************************************************************************	

//---------------
// Begin output
//---------------


#IFDEF FILL_DM1
DM1_FILL {
	COPY DM1F
}
#IFDEF 34K_THICK_M1
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM1_FILL 31 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM1_FILL 31 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M1
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM1_FILL 31 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM1_FILL 31 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M1
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM1_FILL 31 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM1_FILL 31 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M1
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM1_FILL 31 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM1_FILL 31 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM1_FILL 31 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM1
RM1_FILL {
	COPY RM1F
}
DRC CHECK MAP RM1_FILL 31 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM1
#IFDEF 34K_THICK_M1
  indDM1_FILL {
	COPY ind_DM1F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM1_FILL 31 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM1_FILL 31 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M1
#ELSE
#IFDEF 9K_THICK_M1
  indDM1_FILL {
	COPY ind_DM1F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM1_FILL 31 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM1_FILL 31 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M1
#ELSE
  indDM1_FILL {
	COPY ind_DM1F
  }
  DRC CHECK MAP indDM1_FILL 31 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM2
DM2_FILL {
	COPY DM2F
}
#IFDEF 34K_THICK_M2
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM2_FILL 32 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM2_FILL 32 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M2
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM2_FILL 32 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM2_FILL 32 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M2
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM2_FILL 32 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM2_FILL 32 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M2
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM2_FILL 32 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM2_FILL 32 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM2_FILL 32 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM2
RM2_FILL {
	COPY RM2F
}
DRC CHECK MAP RM2_FILL 32 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM2
#IFDEF 34K_THICK_M2
  indDM2_FILL {
	COPY ind_DM2F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM2_FILL 32 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM2_FILL 32 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M2
#ELSE
#IFDEF 9K_THICK_M2
  indDM2_FILL {
	COPY ind_DM2F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM2_FILL 32 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM2_FILL 32 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M2
#ELSE
  indDM2_FILL {
	COPY ind_DM2F
  }
  DRC CHECK MAP indDM2_FILL 32 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM3
DM3_FILL {
	COPY DM3F
}
#IFDEF 34K_THICK_M3
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM3_FILL 33 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM3_FILL 33 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M3
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM3_FILL 33 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM3_FILL 33 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M3
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM3_FILL 33 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM3_FILL 33 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M3
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM3_FILL 33 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM3_FILL 33 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM3_FILL 33 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM3
RM3_FILL {
	COPY RM3F
}
DRC CHECK MAP RM3_FILL 33 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM3
#IFDEF 34K_THICK_M3
  indDM3_FILL {
	COPY ind_DM3F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM3_FILL 33 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM3_FILL 33 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M3
#ELSE
#IFDEF 9K_THICK_M3
  indDM3_FILL {
	COPY ind_DM3F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM3_FILL 33 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM3_FILL 33 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M3
#ELSE
  indDM3_FILL {
	COPY ind_DM3F
  }
  DRC CHECK MAP indDM3_FILL 33 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM4
DM4_FILL {
	COPY DM4F
}
#IFDEF 34K_THICK_M4
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM4_FILL 34 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM4_FILL 34 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M4
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM4_FILL 34 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM4_FILL 34 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M4
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM4_FILL 34 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM4_FILL 34 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M4
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM4_FILL 34 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM4_FILL 34 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM4_FILL 34 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM4
RM4_FILL {
	COPY RM4F
}
DRC CHECK MAP RM4_FILL 34 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM4
#IFDEF 34K_THICK_M4
  indDM4_FILL {
	COPY ind_DM4F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM4_FILL 34 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM4_FILL 34 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M4
#ELSE
#IFDEF 9K_THICK_M4
  indDM4_FILL {
	COPY ind_DM4F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM4_FILL 34 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM4_FILL 34 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M4
#ELSE
  indDM4_FILL {
	COPY ind_DM4F
  }
  DRC CHECK MAP indDM4_FILL 34 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM5
DM5_FILL {
	COPY DM5F
}
#IFDEF 34K_THICK_M5
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM5_FILL 35 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM5_FILL 35 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M5
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM5_FILL 35 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM5_FILL 35 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M5
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM5_FILL 35 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM5_FILL 35 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M5
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM5_FILL 35 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM5_FILL 35 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM5_FILL 35 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM5
RM5_FILL {
	COPY RM5F
}
DRC CHECK MAP RM5_FILL 35 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM5
#IFDEF 34K_THICK_M5
  indDM5_FILL {
	COPY ind_DM5F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM5_FILL 35 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM5_FILL 35 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M5
#ELSE
#IFDEF 9K_THICK_M5
  indDM5_FILL {
	COPY ind_DM5F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM5_FILL 35 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM5_FILL 35 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M5
#ELSE
  indDM5_FILL {
	COPY ind_DM5F
  }
  DRC CHECK MAP indDM5_FILL 35 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM6
DM6_FILL {
	COPY DM6F
}
#IFDEF 34K_THICK_M6
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM6_FILL 36 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM6_FILL 36 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M6
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM6_FILL 36 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM6_FILL 36 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M6
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM6_FILL 36 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM6_FILL 36 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M6
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM6_FILL 36 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM6_FILL 36 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM6_FILL 36 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM6
RM6_FILL {
	COPY RM6F
}
DRC CHECK MAP RM6_FILL 36 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM6
#IFDEF 34K_THICK_M6
  indDM6_FILL {
	COPY ind_DM6F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM6_FILL 36 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM6_FILL 36 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M6
#ELSE
#IFDEF 9K_THICK_M6
  indDM6_FILL {
	COPY ind_DM6F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM6_FILL 36 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM6_FILL 36 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M6
#ELSE
  indDM6_FILL {
	COPY ind_DM6F
  }
  DRC CHECK MAP indDM6_FILL 36 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM7
DM7_FILL {
	COPY DM7F
}
#IFDEF 34K_THICK_M7
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM7_FILL 37 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM7_FILL 37 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M7
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM7_FILL 37 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM7_FILL 37 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M7
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM7_FILL 37 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM7_FILL 37 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M7
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM7_FILL 37 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM7_FILL 37 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM7_FILL 37 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM7
RM7_FILL {
	COPY RM7F
}
DRC CHECK MAP RM7_FILL 37 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM7
#IFDEF 34K_THICK_M7
  indDM7_FILL {
	COPY ind_DM7F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM7_FILL 37 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM7_FILL 37 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M7
#ELSE
#IFDEF 9K_THICK_M7
  indDM7_FILL {
	COPY ind_DM7F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM7_FILL 37 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM7_FILL 37 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M7
#ELSE
  indDM7_FILL {
	COPY ind_DM7F
  }
  DRC CHECK MAP indDM7_FILL 37 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM8
DM8_FILL {
	COPY DM8F
}
#IFDEF 34K_THICK_M8
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM8_FILL 38 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM8_FILL 38 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M8
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM8_FILL 38 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM8_FILL 38 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M8
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM8_FILL 38 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM8_FILL 38 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M8
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM8_FILL 38 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM8_FILL 38 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM8_FILL 38 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM8
RM8_FILL {
	COPY RM8F
}
DRC CHECK MAP RM8_FILL 38 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM8
#IFDEF 34K_THICK_M8
  indDM8_FILL {
	COPY ind_DM8F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM8_FILL 38 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM8_FILL 38 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M8
#ELSE
#IFDEF 9K_THICK_M8
  indDM8_FILL {
	COPY ind_DM8F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM8_FILL 38 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM8_FILL 38 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M8
#ELSE
  indDM8_FILL {
	COPY ind_DM8F
  }
  DRC CHECK MAP indDM8_FILL 38 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM9
DM9_FILL {
	COPY DM9F
}
#IFDEF 34K_THICK_M9
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM9_FILL 39 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM9_FILL 39 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M9
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM9_FILL 39 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM9_FILL 39 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M9
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM9_FILL 39 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM9_FILL 39 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M9
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM9_FILL 39 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM9_FILL 39 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM9_FILL 39 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM9
RM9_FILL {
	COPY RM9F
}
DRC CHECK MAP RM9_FILL 39 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM9
#IFDEF 34K_THICK_M9
  indDM9_FILL {
	COPY ind_DM9F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM9_FILL 39 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM9_FILL 39 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M9
#ELSE
#IFDEF 9K_THICK_M9
  indDM9_FILL {
	COPY ind_DM9F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM9_FILL 39 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM9_FILL 39 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M9
#ELSE
  indDM9_FILL {
	COPY ind_DM9F
  }
  DRC CHECK MAP indDM9_FILL 39 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM10
DM10_FILL {
	COPY DM10F
}
#IFDEF 34K_THICK_M10
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM10_FILL 40 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM10_FILL 40 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M10
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM10_FILL 40 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM10_FILL 40 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M10
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM10_FILL 40 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM10_FILL 40 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M10
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM10_FILL 40 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM10_FILL 40 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM10_FILL 40 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM10
RM10_FILL {
	COPY RM10F
}
DRC CHECK MAP RM10_FILL 40 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM10
#IFDEF 34K_THICK_M10
  indDM10_FILL {
	COPY ind_DM10F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM10_FILL 40 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM10_FILL 40 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M10
#ELSE
#IFDEF 9K_THICK_M10
  indDM10_FILL {
	COPY ind_DM10F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM10_FILL 40 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM10_FILL 40 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M10
#ELSE
  indDM10_FILL {
	COPY ind_DM10F
  }
  DRC CHECK MAP indDM10_FILL 40 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_DM11
DM11_FILL {
	COPY DM11F
}
#IFDEF 34K_THICK_M11
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM11_FILL 41 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM11_FILL 41 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M11
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM11_FILL 41 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM11_FILL 41 81 AUTOREF // datatype 81
#ENDIF
#ELSE
#IFDEF 9K_THICK_M11
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM11_FILL 41 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP DM11_FILL 41 41 AUTOREF // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M11
#IFDEF MIXED_SCHEME
  DRC CHECK MAP DM11_FILL 41 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP DM11_FILL 41 21 AUTOREF  // datatype 21
#ENDIF
#ELSE
  DRC CHECK MAP DM11_FILL 41 1 AUTOREF  // datatype 1
#IFDEF FILL_OPCDM11
RM11_FILL {
	COPY RM11F
}
DRC CHECK MAP RM11_FILL 41 7 AUTOREF // datatype 7
#ENDIF

#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF FILL_indDM11
#IFDEF 34K_THICK_M11
  indDM11_FILL {
	COPY ind_DM11F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM11_FILL 41 1 AUTOREF // datatype 1
#ELSE
  DRC CHECK MAP indDM11_FILL 41 61 AUTOREF // datatype 61
#ENDIF
#ELSE
#IFDEF 12K_THICK_M11
#ELSE
#IFDEF 9K_THICK_M11
  indDM11_FILL {
	COPY ind_DM11F
  }
#IFDEF MIXED_SCHEME
  DRC CHECK MAP indDM11_FILL 41 1 AUTOREF  // datatype 1
#ELSE
  DRC CHECK MAP indDM11_FILL 41 41 AUTOREF  // datatype 41
#ENDIF
#ELSE
#IFDEF 5K_THICK_M11
#ELSE
  indDM11_FILL {
	COPY ind_DM11F
  }
  DRC CHECK MAP indDM11_FILL 41 1 AUTOREF  // datatype 1
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF


#IFDEF FILL_AP
DAP_FILL {
	COPY DAPF
}
DRC CHECK MAP DAP_FILL 74 1 AUTOREF
#ENDIF




